/*
 * {- join("\n * ", @autowarntext) -}
 *
 * Copyright 2023 The OpenSSL Project Authors. All Rights Reserved.
 *
 * Licensed under the Apache License 2.0 (the "License").  You may not use
 * this file except in compliance with the License.  You can obtain a copy
 * in the file LICENSE in the source distribution or at
 * https://www.openssl.org/source/license.html
 */
{-
use OpenSSL::paramnames qw(generate_internal_macros);
-}

typedef struct ossl_param_idx_s OSSL_PARAM_IDX;

/* Parameter name definitions - generated by util/perl/OpenSSL/paramnames.pm */
{- generate_internal_macros(); -}

struct ossl_param_idx_s {
    unsigned char p[NUM_PIDX];
};

int ossl_scan_params_for_idx(const OSSL_PARAM *params, OSSL_PARAM_IDX *indices);

/*
 * Define some assistance macros to make this usage look closer to the
 * OSSL_PARAM_locate() code.
 */
#define FAST_PARAM_declare                  \
    OSSL_PARAM_IDX ossl_fprm_indices
#define FAST_PARAM_initialise(params)       \
    ossl_scan_params_for_idx(params, &ossl_fprm_indices)
#define FAST_PARAM_locate(params, n)        \
    ossl_param_idx(params, &ossl_fprm_indices, n)
#define FAST_PARAM_locate_const(params, n)  \
    ossl_param_idx_const(params, &ossl_fprm_indices, n)

static ossl_inline OSSL_PARAM *ossl_param_idx(OSSL_PARAM *params,
                                              const OSSL_PARAM_IDX *indices,
                                              unsigned int n) {
    if (n >= 0 && n < NUM_PIDX && indices->p[n] != 0xff)
        return params + indices->p[n];
    return NULL;
}

static ossl_inline const OSSL_PARAM *ossl_param_idx_const(
        const OSSL_PARAM *params, const OSSL_PARAM_IDX *indices,
        unsigned int n) {
    if (n >= 0 && n < NUM_PIDX && indices->p[n] != 0xff)
        return params + indices->p[n];
    return NULL;
}
