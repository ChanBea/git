LIBS=../libtls

#Needed for the multiblock code in rec_layer_s3.c
IF[{- !$disabled{asm} -}]
  $AESDEF_x86=AES_ASM
  $AESDEF_x86_64=AES_ASM

  IF[$AESDEF_{- $target{asm_arch} -}]
    $AESDEF=$AESDEF_{- $target{asm_arch} -}
  ENDIF
ENDIF

#TODO: For now we just include the libcrypto packet.c in libtls as well. We
#      could either continue to do it like this, or export all the WPACKET
#      symbols so that libtls can use them like any other. Probably would do
#      this privately so it does not become part of the public API.
SOURCE[../libtls]=\
        pqueue.c ../crypto/packet.c \
        statem/statem_srvr.c statem/statem_clnt.c  s3_lib.c  s3_enc.c record/rec_layer_s3.c \
        statem/statem_lib.c statem/extensions.c statem/extensions_srvr.c \
        statem/extensions_clnt.c statem/extensions_cust.c s3_cbc.c s3_msg.c \
        methods.c   t1_lib.c  t1_enc.c tls13_enc.c \
        d1_lib.c  record/rec_layer_d1.c d1_msg.c \
        statem/statem_dtls.c d1_srtp.c \
        tls_lib.c tls_cert.c tls_sess.c \
        tls_ciph.c tls_stat.c tls_rsa.c \
        tls_asn1.c tls_txt.c tls_init.c tls_conf.c  tls_mcnf.c \
        bio_tls.c tls_err.c tls_srp.c t1_trce.c tls_utst.c \
        record/tls3_buffer.c record/tls3_record.c record/dtls1_bitmap.c \
        statem/statem.c record/tls3_record_tls13.c
DEFINE[../libtls]=$AESDEF
