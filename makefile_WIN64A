##
## Makefile for OpenSSL
##
## WARNING: do not edit!
## Generated by Configure from Configurations\windows-makefile.tmpl, Configurations\common.tmpl


PLATFORM=VC-WIN64A
SRCDIR=.
BLDDIR=.

VERSION=1.1.1-dev
MAJOR=1
MINOR=1.1

SHLIB_VERSION_NUMBER=1.1

LIBS=libcrypto.lib libssl.lib test\libtestutil.lib
SHLIBS=libcrypto-1_1-x64.dll libssl-1_1-x64.dll
SHLIBPDBS=libcrypto-1_1-x64.pdb libssl-1_1-x64.pdb
ENGINES=engines\capi.dll engines\dasync.dll engines\ossltest.dll engines\padlock.dll
ENGINEPDBS=engines\capi.pdb engines\dasync.pdb engines\ossltest.pdb engines\padlock.pdb
PROGRAMS=apps\openssl.exe fuzz\asn1-test.exe fuzz\asn1parse-test.exe fuzz\bignum-test.exe fuzz\bndiv-test.exe fuzz\client-test.exe fuzz\cms-test.exe fuzz\conf-test.exe fuzz\crl-test.exe fuzz\ct-test.exe fuzz\server-test.exe fuzz\x509-test.exe test\aborttest.exe test\afalgtest.exe test\asn1_encode_test.exe test\asn1_string_table_test.exe test\asn1_time_test.exe test\asynciotest.exe test\asynctest.exe test\bad_dtls_test.exe test\bftest.exe test\bio_enc_test.exe test\bioprinttest.exe test\bntest.exe test\buildtest_aes.exe test\buildtest_asn1.exe test\buildtest_asn1err.exe test\buildtest_asn1t.exe test\buildtest_async.exe test\buildtest_asyncerr.exe test\buildtest_bio.exe test\buildtest_bioerr.exe test\buildtest_blowfish.exe test\buildtest_bn.exe test\buildtest_bnerr.exe test\buildtest_buffer.exe test\buildtest_buffererr.exe test\buildtest_camellia.exe test\buildtest_cast.exe test\buildtest_cmac.exe test\buildtest_cms.exe test\buildtest_cmserr.exe test\buildtest_comp.exe test\buildtest_comperr.exe test\buildtest_conf.exe test\buildtest_conf_api.exe test\buildtest_conferr.exe test\buildtest_crypto.exe test\buildtest_cryptoerr.exe test\buildtest_ct.exe test\buildtest_cterr.exe test\buildtest_des.exe test\buildtest_dh.exe test\buildtest_dherr.exe test\buildtest_dsa.exe test\buildtest_dsaerr.exe test\buildtest_dtls1.exe test\buildtest_e_os2.exe test\buildtest_ebcdic.exe test\buildtest_ec.exe test\buildtest_ecdh.exe test\buildtest_ecdsa.exe test\buildtest_ecerr.exe test\buildtest_engine.exe test\buildtest_engineerr.exe test\buildtest_err.exe test\buildtest_evp.exe test\buildtest_evperr.exe test\buildtest_hmac.exe test\buildtest_idea.exe test\buildtest_kdf.exe test\buildtest_kdferr.exe test\buildtest_lhash.exe test\buildtest_md4.exe test\buildtest_md5.exe test\buildtest_mdc2.exe test\buildtest_modes.exe test\buildtest_obj_mac.exe test\buildtest_objects.exe test\buildtest_objectserr.exe test\buildtest_ocsp.exe test\buildtest_ocsperr.exe test\buildtest_opensslv.exe test\buildtest_ossl_typ.exe test\buildtest_pem.exe test\buildtest_pem2.exe test\buildtest_pemerr.exe test\buildtest_pkcs12.exe test\buildtest_pkcs12err.exe test\buildtest_pkcs7.exe test\buildtest_pkcs7err.exe test\buildtest_rand.exe test\buildtest_randerr.exe test\buildtest_rc2.exe test\buildtest_rc4.exe test\buildtest_ripemd.exe test\buildtest_rsa.exe test\buildtest_rsaerr.exe test\buildtest_safestack.exe test\buildtest_seed.exe test\buildtest_sha.exe test\buildtest_srp.exe test\buildtest_srtp.exe test\buildtest_ssl.exe test\buildtest_ssl2.exe test\buildtest_sslerr.exe test\buildtest_stack.exe test\buildtest_store.exe test\buildtest_storeerr.exe test\buildtest_symhacks.exe test\buildtest_tls1.exe test\buildtest_ts.exe test\buildtest_tserr.exe test\buildtest_txt_db.exe test\buildtest_ui.exe test\buildtest_uierr.exe test\buildtest_whrlpool.exe test\buildtest_x509.exe test\buildtest_x509_vfy.exe test\buildtest_x509err.exe test\buildtest_x509v3.exe test\buildtest_x509v3err.exe test\casttest.exe test\cipherbytes_test.exe test\cipherlist_test.exe test\ciphername_test.exe test\clienthellotest.exe test\constant_time_test.exe test\crltest.exe test\ct_test.exe test\d2i_test.exe test\danetest.exe test\destest.exe test\dhtest.exe test\drbgtest.exe test\dsatest.exe test\dtls_mtu_test.exe test\dtlstest.exe test\dtlsv1listentest.exe test\ecdsatest.exe test\ecstresstest.exe test\ectest.exe test\enginetest.exe test\evp_extra_test.exe test\evp_test.exe test\exdatatest.exe test\exptest.exe test\fatalerrtest.exe test\gmdifftest.exe test\hmactest.exe test\ideatest.exe test\igetest.exe test\lhash_test.exe test\md2test.exe test\mdc2_internal_test.exe test\mdc2test.exe test\memleaktest.exe test\ocspapitest.exe test\packettest.exe test\pbelutest.exe test\pemtest.exe test\pkey_meth_kdf_test.exe test\pkey_meth_test.exe test\rc2test.exe test\rc4test.exe test\rc5test.exe test\recordlentest.exe test\rsa_mp_test.exe test\rsa_test.exe test\sanitytest.exe test\secmemtest.exe test\servername_test.exe test\shlibloadtest.exe test\srptest.exe test\ssl_cert_table_internal_test.exe test\ssl_test.exe test\ssl_test_ctx_test.exe test\sslapitest.exe test\sslbuffertest.exe test\sslcorrupttest.exe test\ssltest_old.exe test\stack_test.exe test\test_test.exe test\threadstest.exe test\time_offset_test.exe test\tls13secretstest.exe test\uitest.exe test\v3ext.exe test\v3nametest.exe test\verify_extra_test.exe test\x509_check_cert_pkey_test.exe test\x509_dup_cert_test.exe test\x509_time_test.exe test\x509aux.exe
PROGRAMPDBS=apps\openssl.pdb fuzz\asn1-test.pdb fuzz\asn1parse-test.pdb fuzz\bignum-test.pdb fuzz\bndiv-test.pdb fuzz\client-test.pdb fuzz\cms-test.pdb fuzz\conf-test.pdb fuzz\crl-test.pdb fuzz\ct-test.pdb fuzz\server-test.pdb fuzz\x509-test.pdb test\aborttest.pdb test\afalgtest.pdb test\asn1_encode_test.pdb test\asn1_string_table_test.pdb test\asn1_time_test.pdb test\asynciotest.pdb test\asynctest.pdb test\bad_dtls_test.pdb test\bftest.pdb test\bio_enc_test.pdb test\bioprinttest.pdb test\bntest.pdb test\buildtest_aes.pdb test\buildtest_asn1.pdb test\buildtest_asn1err.pdb test\buildtest_asn1t.pdb test\buildtest_async.pdb test\buildtest_asyncerr.pdb test\buildtest_bio.pdb test\buildtest_bioerr.pdb test\buildtest_blowfish.pdb test\buildtest_bn.pdb test\buildtest_bnerr.pdb test\buildtest_buffer.pdb test\buildtest_buffererr.pdb test\buildtest_camellia.pdb test\buildtest_cast.pdb test\buildtest_cmac.pdb test\buildtest_cms.pdb test\buildtest_cmserr.pdb test\buildtest_comp.pdb test\buildtest_comperr.pdb test\buildtest_conf.pdb test\buildtest_conf_api.pdb test\buildtest_conferr.pdb test\buildtest_crypto.pdb test\buildtest_cryptoerr.pdb test\buildtest_ct.pdb test\buildtest_cterr.pdb test\buildtest_des.pdb test\buildtest_dh.pdb test\buildtest_dherr.pdb test\buildtest_dsa.pdb test\buildtest_dsaerr.pdb test\buildtest_dtls1.pdb test\buildtest_e_os2.pdb test\buildtest_ebcdic.pdb test\buildtest_ec.pdb test\buildtest_ecdh.pdb test\buildtest_ecdsa.pdb test\buildtest_ecerr.pdb test\buildtest_engine.pdb test\buildtest_engineerr.pdb test\buildtest_err.pdb test\buildtest_evp.pdb test\buildtest_evperr.pdb test\buildtest_hmac.pdb test\buildtest_idea.pdb test\buildtest_kdf.pdb test\buildtest_kdferr.pdb test\buildtest_lhash.pdb test\buildtest_md4.pdb test\buildtest_md5.pdb test\buildtest_mdc2.pdb test\buildtest_modes.pdb test\buildtest_obj_mac.pdb test\buildtest_objects.pdb test\buildtest_objectserr.pdb test\buildtest_ocsp.pdb test\buildtest_ocsperr.pdb test\buildtest_opensslv.pdb test\buildtest_ossl_typ.pdb test\buildtest_pem.pdb test\buildtest_pem2.pdb test\buildtest_pemerr.pdb test\buildtest_pkcs12.pdb test\buildtest_pkcs12err.pdb test\buildtest_pkcs7.pdb test\buildtest_pkcs7err.pdb test\buildtest_rand.pdb test\buildtest_randerr.pdb test\buildtest_rc2.pdb test\buildtest_rc4.pdb test\buildtest_ripemd.pdb test\buildtest_rsa.pdb test\buildtest_rsaerr.pdb test\buildtest_safestack.pdb test\buildtest_seed.pdb test\buildtest_sha.pdb test\buildtest_srp.pdb test\buildtest_srtp.pdb test\buildtest_ssl.pdb test\buildtest_ssl2.pdb test\buildtest_sslerr.pdb test\buildtest_stack.pdb test\buildtest_store.pdb test\buildtest_storeerr.pdb test\buildtest_symhacks.pdb test\buildtest_tls1.pdb test\buildtest_ts.pdb test\buildtest_tserr.pdb test\buildtest_txt_db.pdb test\buildtest_ui.pdb test\buildtest_uierr.pdb test\buildtest_whrlpool.pdb test\buildtest_x509.pdb test\buildtest_x509_vfy.pdb test\buildtest_x509err.pdb test\buildtest_x509v3.pdb test\buildtest_x509v3err.pdb test\casttest.pdb test\cipherbytes_test.pdb test\cipherlist_test.pdb test\ciphername_test.pdb test\clienthellotest.pdb test\constant_time_test.pdb test\crltest.pdb test\ct_test.pdb test\d2i_test.pdb test\danetest.pdb test\destest.pdb test\dhtest.pdb test\drbgtest.pdb test\dsatest.pdb test\dtls_mtu_test.pdb test\dtlstest.pdb test\dtlsv1listentest.pdb test\ecdsatest.pdb test\ecstresstest.pdb test\ectest.pdb test\enginetest.pdb test\evp_extra_test.pdb test\evp_test.pdb test\exdatatest.pdb test\exptest.pdb test\fatalerrtest.pdb test\gmdifftest.pdb test\hmactest.pdb test\ideatest.pdb test\igetest.pdb test\lhash_test.pdb test\md2test.pdb test\mdc2_internal_test.pdb test\mdc2test.pdb test\memleaktest.pdb test\ocspapitest.pdb test\packettest.pdb test\pbelutest.pdb test\pemtest.pdb test\pkey_meth_kdf_test.pdb test\pkey_meth_test.pdb test\rc2test.pdb test\rc4test.pdb test\rc5test.pdb test\recordlentest.pdb test\rsa_mp_test.pdb test\rsa_test.pdb test\sanitytest.pdb test\secmemtest.pdb test\servername_test.pdb test\shlibloadtest.pdb test\srptest.pdb test\ssl_cert_table_internal_test.pdb test\ssl_test.pdb test\ssl_test_ctx_test.pdb test\sslapitest.pdb test\sslbuffertest.pdb test\sslcorrupttest.pdb test\ssltest_old.pdb test\stack_test.pdb test\test_test.pdb test\threadstest.pdb test\time_offset_test.pdb test\tls13secretstest.pdb test\uitest.pdb test\v3ext.pdb test\v3nametest.pdb test\verify_extra_test.pdb test\x509_check_cert_pkey_test.pdb test\x509_dup_cert_test.pdb test\x509_time_test.pdb test\x509aux.pdb
SCRIPTS=apps\CA.pl apps\tsget.pl tools\c_rehash.pl

GENERATED_MANDATORY=crypto\include\internal\bn_conf.h crypto\include\internal\dso_conf.h include\openssl\opensslconf.h
GENERATED=crypto\bn\x86_64-gf2m.asm test\buildtest_md5.c crypto\bn\rsaz-avx2.asm test\buildtest_bnerr.c crypto\sha\sha1-x86_64.asm test\buildtest_evp.c crypto\bn\x86_64-mont.asm test\buildtest_ecdsa.c test\buildtest_bioerr.c test\buildtest_buffer.c test\buildtest_bio.c test\buildtest_objectserr.c test\buildtest_pkcs12.c test\buildtest_lhash.c test\buildtest_srp.c test\buildtest_rsaerr.c test\buildtest_dh.c test\buildtest_rc2.c test\buildtest_crypto.c test\buildtest_ossl_typ.c test\buildtest_cms.c test\buildtest_err.c test\buildtest_rand.c test\buildtest_x509.c test\buildtest_ebcdic.c test\buildtest_des.c test\buildtest_cterr.c crypto\modes\aesni-gcm-x86_64.asm test\buildtest_dsaerr.c test\buildtest_ripemd.c test\buildtest_ocsp.c test\buildtest_conferr.c crypto\bn\rsaz-x86_64.asm test\buildtest_conf_api.c test\buildtest_ocsperr.c test\buildtest_asyncerr.c test\buildtest_tserr.c test\buildtest_pemerr.c crypto\aes\aesni-mb-x86_64.asm test\buildtest_conf.c test\buildtest_buffererr.c test\buildtest_cast.c test\buildtest_ssl.c test\buildtest_cmserr.c test\buildtest_txt_db.c test\buildtest_ct.c crypto\ec\ecp_nistz256-x86_64.asm test\buildtest_asn1.c test\buildtest_stack.c crypto\bn\x86_64-mont5.asm test\buildtest_camellia.c test\buildtest_sslerr.c crypto\sha\sha256-x86_64.asm crypto\rc4\rc4-x86_64.asm test\buildtest_obj_mac.c crypto\sha\sha1-mb-x86_64.asm crypto\uplink-x86_64.asm test\buildtest_asn1err.c test\buildtest_uierr.c test\buildtest_md4.c test\buildtest_opensslv.c test\buildtest_pem2.c test\buildtest_tls1.c test\buildtest_ecdh.c test\buildtest_pem.c test\buildtest_asn1t.c test\buildtest_blowfish.c test\buildtest_e_os2.c crypto\whrlpool\wp-x86_64.asm test\buildtest_mdc2.c crypto\aes\bsaes-x86_64.asm crypto\aes\aesni-x86_64.asm test\buildtest_symhacks.c crypto\md5\md5-x86_64.asm test\buildtest_cmac.c test\buildtest_store.c test\buildtest_ts.c test\buildtest_dherr.c test\buildtest_bn.c test\buildtest_x509err.c test\buildtest_pkcs7.c test\buildtest_engine.c test\buildtest_kdferr.c test\buildtest_storeerr.c test\buildtest_aes.c crypto\modes\ghash-x86_64.asm test\buildtest_seed.c test\buildtest_comp.c test\buildtest_async.c test\buildtest_x509_vfy.c test\buildtest_whrlpool.c test\buildtest_idea.c test\buildtest_ui.c crypto\chacha\chacha-x86_64.asm test\buildtest_comperr.c test\buildtest_ec.c crypto\rc4\rc4-md5-x86_64.asm test\buildtest_x509v3.c test\buildtest_srtp.c test\buildtest_dtls1.c test\buildtest_cryptoerr.c crypto\aes\aesni-sha256-x86_64.asm crypto\sha\sha512-x86_64.asm test\buildtest_safestack.c test\buildtest_pkcs7err.c test\buildtest_rc4.c test\buildtest_sha.c crypto\aes\aes-x86_64.asm test\buildtest_dsa.c crypto\poly1305\poly1305-x86_64.asm test\buildtest_x509v3err.c test\buildtest_engineerr.c test\buildtest_kdf.c engines\e_padlock-x86_64.asm crypto\x86_64cpuid.asm test\buildtest_evperr.c test\buildtest_ssl2.c test\buildtest_hmac.c test\buildtest_pkcs12err.c test\buildtest_ecerr.c test\buildtest_objects.c crypto\aes\aesni-sha1-x86_64.asm test\buildtest_modes.c crypto\sha\sha256-mb-x86_64.asm test\buildtest_randerr.c test\buildtest_rsa.c crypto\aes\vpaes-x86_64.asm crypto\camellia\cmll-x86_64.asm apps\progs.h crypto\include\internal\dso_conf.h crypto\include\internal\bn_conf.h crypto\buildinf.h include\openssl\opensslconf.h

INSTALL_LIBS=libcrypto.lib libssl.lib
INSTALL_SHLIBS=libcrypto-1_1-x64.dll libssl-1_1-x64.dll
INSTALL_SHLIBPDBS=libcrypto-1_1-x64.pdb libssl-1_1-x64.pdb
INSTALL_ENGINES=engines\capi.dll engines\padlock.dll
INSTALL_ENGINEPDBS=engines\capi.pdb engines\padlock.pdb
INSTALL_PROGRAMS=apps\openssl.exe
INSTALL_PROGRAMPDBS=apps\openssl.pdb

BIN_SCRIPTS=$(BLDDIR)\tools\c_rehash.pl
MISC_SCRIPTS=$(BLDDIR)\apps\CA.pl $(BLDDIR)\apps\tsget.pl


APPS_OPENSSL=apps\openssl

# Do not edit these manually. Use Configure with --prefix or --openssldir
# to change this!  Short explanation in the top comment in Configure
INSTALLTOP_dev=C:
INSTALLTOP_dir=\Program Files\OpenSSL
OPENSSLDIR_dev=C:
OPENSSLDIR_dir=\work\specio\openssl
LIBDIR=lib
ENGINESDIR_dev=C:
ENGINESDIR_dir=\Program Files\OpenSSL\lib\engines-1_1
!IF "$(DESTDIR)" != ""
INSTALLTOP=$(DESTDIR)$(INSTALLTOP_dir)
OPENSSLDIR=$(DESTDIR)$(OPENSSLDIR_dir)
ENGINESDIR=$(DESTDIR)$(ENGINESDIR_dir)
!ELSE
INSTALLTOP=$(INSTALLTOP_dev)$(INSTALLTOP_dir)
OPENSSLDIR=$(OPENSSLDIR_dev)$(OPENSSLDIR_dir)
ENGINESDIR=$(ENGINESDIR_dev)$(ENGINESDIR_dir)
!ENDIF

CC=cl
CFLAGS=-DOPENSSL_USE_APPLINK -DDSO_WIN32 -DNDEBUG -DOPENSSL_THREADS -DOPENSSL_NO_STATIC_ENGINE -DOPENSSL_PIC -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_MONT5 -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DRC4_ASM -DMD5_ASM -DAES_ASM -DVPAES_ASM -DBSAES_ASM -DGHASH_ASM -DECP_NISTZ256_ASM -DPADLOCK_ASM -DPOLY1305_ASM "-DENGINESDIR=\"C:\\Program Files\\OpenSSL\\lib\\engines-1_1\"" "-DOPENSSLDIR=\"C:\\work\\specio\\openssl\"" -W3 -wd4090 -Gs0 -GF -Gy -nologo -DOPENSSL_SYS_WIN32 -DWIN32_LEAN_AND_MEAN -DL_ENDIAN -D_CRT_SECURE_NO_DEPRECATE -D_WINSOCK_DEPRECATED_NO_WARNINGS -DUNICODE -D_UNICODE /MD /O2 
COUTFLAG=/Fo$(OSSL_EMPTY)
RC=rc
RCOUTFLAG=/fo$(OSSL_EMPTY)
LD=link
LDFLAGS=/nologo /debug
LDOUTFLAG=/out:$(OSSL_EMPTY)
EX_LIBS=ws2_32.lib gdi32.lib advapi32.lib crypt32.lib user32.lib
LIB_CFLAGS=/Zi /Fdossl_static 
LIB_LDFLAGS=/dll
DSO_CFLAGS=/Zi /Fddso 
DSO_LDFLAGS= /dll
BIN_CFLAGS=/Zi /Fdapp
BIN_LDFLAGS=/subsystem:console /opt:ref

PERL=C:\Perl64\bin\perl.exe

AR=lib
ARFLAGS= /nologo
AROUTFLAG=/out:$(OSSL_EMPTY)

MT=mt
MTFLAGS= -nologo
MTINFLAG=-manifest $(OSSL_EMPTY)
MTOUTFLAG=-outputresource:$(OSSL_EMPTY)

AS=nasm
ASFLAGS=-f win64 -DNEAR -Ox -g
ASOUTFLAG=-o$(OSSL_EMPTY)
PERLASM_SCHEME= auto

PROCESSOR= 

# The main targets ###################################################

all: build_generated
	$(MAKE) depend && $(MAKE) _all
_all: build_libs_nodep build_engines_nodep build_programs_nodep
build_libs: build_generated
	$(MAKE) depend && $(MAKE) _build_libs
_build_libs: build_libs_nodep
build_engines: build_generated
	$(MAKE) depend && $(MAKE) _build_engines
_build_engines: build_engines_nodep
build_programs: build_generated
	$(MAKE) depend && $(MAKE) _build_programs
_build_programs: build_programs_nodep

build_generated: $(GENERATED_MANDATORY)
build_libs_nodep: $(LIBS) libcrypto.lib libssl.lib
build_engines_nodep: $(ENGINES)
build_programs_nodep: $(PROGRAMS) $(SCRIPTS)

# Kept around for backward compatibility
build_apps build_tests: build_programs

# Convenience target to prebuild all generated files, not just the mandatory
# ones
build_all_generated: $(GENERATED_MANDATORY) $(GENERATED)

test: tests
tests: build_generated
	$(MAKE) depend && $(MAKE) _tests
_tests: build_programs_nodep build_engines_nodep
	@rem 
	-mkdir $(BLDDIR)\test\test-runs
	set SRCTOP=$(SRCDIR)
	set BLDTOP=$(BLDDIR)
	set RESULT_D=$(BLDDIR)\test\test-runs
	set PERL=$(PERL)
	set OPENSSL_DEBUG_MEMORY=on
	"$(PERL)" "$(SRCDIR)\test\run_tests.pl" $(TESTS)
	@rem 

list-tests:
	@rem 
	@set SRCTOP=$(SRCDIR)
	@"$(PERL)" "$(SRCDIR)\test\run_tests.pl" list
	@rem 

install: install_sw install_ssldirs install_docs

uninstall: uninstall_docs uninstall_sw

libclean:
	"$(PERL)" -e "map { m/(.*)\.dll$$/; unlink glob """$$1.*"""; } @ARGV" $(SHLIBS)
	"$(PERL)" -e "map { m/(.*)\.dll$$/; unlink glob """apps/$$1.*"""; } @ARGV" $(SHLIBS)
	"$(PERL)" -e "map { m/(.*)\.dll$$/; unlink glob """test/$$1.*"""; } @ARGV" $(SHLIBS)
	"$(PERL)" -e "map { m/(.*)\.dll$$/; unlink glob """fuzz/$$1.*"""; } @ARGV" $(SHLIBS)
	-del /Q /F $(LIBS)
	-del /Q ossl_static.pdb

clean: libclean
	-del /Q /F apps\openssl.exe
	-del /Q /F fuzz\asn1-test.exe
	-del /Q /F fuzz\asn1parse-test.exe
	-del /Q /F fuzz\bignum-test.exe
	-del /Q /F fuzz\bndiv-test.exe
	-del /Q /F fuzz\client-test.exe
	-del /Q /F fuzz\cms-test.exe
	-del /Q /F fuzz\conf-test.exe
	-del /Q /F fuzz\crl-test.exe
	-del /Q /F fuzz\ct-test.exe
	-del /Q /F fuzz\server-test.exe
	-del /Q /F fuzz\x509-test.exe
	-del /Q /F test\aborttest.exe
	-del /Q /F test\afalgtest.exe
	-del /Q /F test\asn1_encode_test.exe
	-del /Q /F test\asn1_string_table_test.exe
	-del /Q /F test\asn1_time_test.exe
	-del /Q /F test\asynciotest.exe
	-del /Q /F test\asynctest.exe
	-del /Q /F test\bad_dtls_test.exe
	-del /Q /F test\bftest.exe
	-del /Q /F test\bio_enc_test.exe
	-del /Q /F test\bioprinttest.exe
	-del /Q /F test\bntest.exe
	-del /Q /F test\buildtest_aes.exe
	-del /Q /F test\buildtest_asn1.exe
	-del /Q /F test\buildtest_asn1err.exe
	-del /Q /F test\buildtest_asn1t.exe
	-del /Q /F test\buildtest_async.exe
	-del /Q /F test\buildtest_asyncerr.exe
	-del /Q /F test\buildtest_bio.exe
	-del /Q /F test\buildtest_bioerr.exe
	-del /Q /F test\buildtest_blowfish.exe
	-del /Q /F test\buildtest_bn.exe
	-del /Q /F test\buildtest_bnerr.exe
	-del /Q /F test\buildtest_buffer.exe
	-del /Q /F test\buildtest_buffererr.exe
	-del /Q /F test\buildtest_camellia.exe
	-del /Q /F test\buildtest_cast.exe
	-del /Q /F test\buildtest_cmac.exe
	-del /Q /F test\buildtest_cms.exe
	-del /Q /F test\buildtest_cmserr.exe
	-del /Q /F test\buildtest_comp.exe
	-del /Q /F test\buildtest_comperr.exe
	-del /Q /F test\buildtest_conf.exe
	-del /Q /F test\buildtest_conf_api.exe
	-del /Q /F test\buildtest_conferr.exe
	-del /Q /F test\buildtest_crypto.exe
	-del /Q /F test\buildtest_cryptoerr.exe
	-del /Q /F test\buildtest_ct.exe
	-del /Q /F test\buildtest_cterr.exe
	-del /Q /F test\buildtest_des.exe
	-del /Q /F test\buildtest_dh.exe
	-del /Q /F test\buildtest_dherr.exe
	-del /Q /F test\buildtest_dsa.exe
	-del /Q /F test\buildtest_dsaerr.exe
	-del /Q /F test\buildtest_dtls1.exe
	-del /Q /F test\buildtest_e_os2.exe
	-del /Q /F test\buildtest_ebcdic.exe
	-del /Q /F test\buildtest_ec.exe
	-del /Q /F test\buildtest_ecdh.exe
	-del /Q /F test\buildtest_ecdsa.exe
	-del /Q /F test\buildtest_ecerr.exe
	-del /Q /F test\buildtest_engine.exe
	-del /Q /F test\buildtest_engineerr.exe
	-del /Q /F test\buildtest_err.exe
	-del /Q /F test\buildtest_evp.exe
	-del /Q /F test\buildtest_evperr.exe
	-del /Q /F test\buildtest_hmac.exe
	-del /Q /F test\buildtest_idea.exe
	-del /Q /F test\buildtest_kdf.exe
	-del /Q /F test\buildtest_kdferr.exe
	-del /Q /F test\buildtest_lhash.exe
	-del /Q /F test\buildtest_md4.exe
	-del /Q /F test\buildtest_md5.exe
	-del /Q /F test\buildtest_mdc2.exe
	-del /Q /F test\buildtest_modes.exe
	-del /Q /F test\buildtest_obj_mac.exe
	-del /Q /F test\buildtest_objects.exe
	-del /Q /F test\buildtest_objectserr.exe
	-del /Q /F test\buildtest_ocsp.exe
	-del /Q /F test\buildtest_ocsperr.exe
	-del /Q /F test\buildtest_opensslv.exe
	-del /Q /F test\buildtest_ossl_typ.exe
	-del /Q /F test\buildtest_pem.exe
	-del /Q /F test\buildtest_pem2.exe
	-del /Q /F test\buildtest_pemerr.exe
	-del /Q /F test\buildtest_pkcs12.exe
	-del /Q /F test\buildtest_pkcs12err.exe
	-del /Q /F test\buildtest_pkcs7.exe
	-del /Q /F test\buildtest_pkcs7err.exe
	-del /Q /F test\buildtest_rand.exe
	-del /Q /F test\buildtest_randerr.exe
	-del /Q /F test\buildtest_rc2.exe
	-del /Q /F test\buildtest_rc4.exe
	-del /Q /F test\buildtest_ripemd.exe
	-del /Q /F test\buildtest_rsa.exe
	-del /Q /F test\buildtest_rsaerr.exe
	-del /Q /F test\buildtest_safestack.exe
	-del /Q /F test\buildtest_seed.exe
	-del /Q /F test\buildtest_sha.exe
	-del /Q /F test\buildtest_srp.exe
	-del /Q /F test\buildtest_srtp.exe
	-del /Q /F test\buildtest_ssl.exe
	-del /Q /F test\buildtest_ssl2.exe
	-del /Q /F test\buildtest_sslerr.exe
	-del /Q /F test\buildtest_stack.exe
	-del /Q /F test\buildtest_store.exe
	-del /Q /F test\buildtest_storeerr.exe
	-del /Q /F test\buildtest_symhacks.exe
	-del /Q /F test\buildtest_tls1.exe
	-del /Q /F test\buildtest_ts.exe
	-del /Q /F test\buildtest_tserr.exe
	-del /Q /F test\buildtest_txt_db.exe
	-del /Q /F test\buildtest_ui.exe
	-del /Q /F test\buildtest_uierr.exe
	-del /Q /F test\buildtest_whrlpool.exe
	-del /Q /F test\buildtest_x509.exe
	-del /Q /F test\buildtest_x509_vfy.exe
	-del /Q /F test\buildtest_x509err.exe
	-del /Q /F test\buildtest_x509v3.exe
	-del /Q /F test\buildtest_x509v3err.exe
	-del /Q /F test\casttest.exe
	-del /Q /F test\cipherbytes_test.exe
	-del /Q /F test\cipherlist_test.exe
	-del /Q /F test\ciphername_test.exe
	-del /Q /F test\clienthellotest.exe
	-del /Q /F test\constant_time_test.exe
	-del /Q /F test\crltest.exe
	-del /Q /F test\ct_test.exe
	-del /Q /F test\d2i_test.exe
	-del /Q /F test\danetest.exe
	-del /Q /F test\destest.exe
	-del /Q /F test\dhtest.exe
	-del /Q /F test\drbgtest.exe
	-del /Q /F test\dsatest.exe
	-del /Q /F test\dtls_mtu_test.exe
	-del /Q /F test\dtlstest.exe
	-del /Q /F test\dtlsv1listentest.exe
	-del /Q /F test\ecdsatest.exe
	-del /Q /F test\ecstresstest.exe
	-del /Q /F test\ectest.exe
	-del /Q /F test\enginetest.exe
	-del /Q /F test\evp_extra_test.exe
	-del /Q /F test\evp_test.exe
	-del /Q /F test\exdatatest.exe
	-del /Q /F test\exptest.exe
	-del /Q /F test\fatalerrtest.exe
	-del /Q /F test\gmdifftest.exe
	-del /Q /F test\hmactest.exe
	-del /Q /F test\ideatest.exe
	-del /Q /F test\igetest.exe
	-del /Q /F test\lhash_test.exe
	-del /Q /F test\md2test.exe
	-del /Q /F test\mdc2_internal_test.exe
	-del /Q /F test\mdc2test.exe
	-del /Q /F test\memleaktest.exe
	-del /Q /F test\ocspapitest.exe
	-del /Q /F test\packettest.exe
	-del /Q /F test\pbelutest.exe
	-del /Q /F test\pemtest.exe
	-del /Q /F test\pkey_meth_kdf_test.exe
	-del /Q /F test\pkey_meth_test.exe
	-del /Q /F test\rc2test.exe
	-del /Q /F test\rc4test.exe
	-del /Q /F test\rc5test.exe
	-del /Q /F test\recordlentest.exe
	-del /Q /F test\rsa_mp_test.exe
	-del /Q /F test\rsa_test.exe
	-del /Q /F test\sanitytest.exe
	-del /Q /F test\secmemtest.exe
	-del /Q /F test\servername_test.exe
	-del /Q /F test\shlibloadtest.exe
	-del /Q /F test\srptest.exe
	-del /Q /F test\ssl_cert_table_internal_test.exe
	-del /Q /F test\ssl_test.exe
	-del /Q /F test\ssl_test_ctx_test.exe
	-del /Q /F test\sslapitest.exe
	-del /Q /F test\sslbuffertest.exe
	-del /Q /F test\sslcorrupttest.exe
	-del /Q /F test\ssltest_old.exe
	-del /Q /F test\stack_test.exe
	-del /Q /F test\test_test.exe
	-del /Q /F test\threadstest.exe
	-del /Q /F test\time_offset_test.exe
	-del /Q /F test\tls13secretstest.exe
	-del /Q /F test\uitest.exe
	-del /Q /F test\v3ext.exe
	-del /Q /F test\v3nametest.exe
	-del /Q /F test\verify_extra_test.exe
	-del /Q /F test\x509_check_cert_pkey_test.exe
	-del /Q /F test\x509_dup_cert_test.exe
	-del /Q /F test\x509_time_test.exe
	-del /Q /F test\x509aux.exe
	-del /Q /F $(ENGINES)
	-del /Q /F $(SCRIPTS)
	-del /Q /F $(GENERATED)
	-del /Q /S /F *.d
	-del /Q /S /F *.obj
	-del /Q /S /F *.pdb
	-del /Q /F *.exp
	-del /Q /F apps\*.exp
	-del /Q /F engines\*.exp
	-del /Q /S /F engines\*.ilk
	-del /Q /S /F engines\*.lib
	-del /Q /S /F apps\*.lib
	-del /Q /S /F engines\*.manifest
	-del /Q /S /F apps\*.manifest
	-del /Q /S /F test\*.manifest

distclean: clean
	-del /Q /F configdata.pm
	-del /Q /F makefile

depend:

# Install helper targets #############################################

install_sw: all install_dev install_engines install_runtime

uninstall_sw: uninstall_runtime uninstall_engines uninstall_dev

install_docs: install_html_docs

uninstall_docs: uninstall_html_docs

install_ssldirs:
	@"$(PERL)" "$(SRCDIR)\util\mkdir-p.pl" "$(OPENSSLDIR)\certs"
	@"$(PERL)" "$(SRCDIR)\util\mkdir-p.pl" "$(OPENSSLDIR)\private"
	@"$(PERL)" "$(SRCDIR)\util\mkdir-p.pl" "$(OPENSSLDIR)\misc"
	@"$(PERL)" "$(SRCDIR)\util\copy.pl" "$(SRCDIR)\apps\openssl.cnf" \
                                        "$(OPENSSLDIR)\openssl.cnf.dist"
	@IF NOT EXIST "$(OPENSSLDIR)\openssl.cnf" \
         "$(PERL)" "$(SRCDIR)\util\copy.pl" "$(SRCDIR)\apps\openssl.cnf" \
                                        "$(OPENSSLDIR)\openssl.cnf"
	@"$(PERL)" "$(SRCDIR)\util\copy.pl" $(MISC_SCRIPTS) \
                                        "$(OPENSSLDIR)\misc"
	@"$(PERL)" "$(SRCDIR)\util\copy.pl" "$(SRCDIR)\apps\ct_log_list.cnf" \
                                        "$(OPENSSLDIR)\ct_log_list.cnf.dist"
	@IF NOT EXIST "$(OPENSSLDIR)\ct_log_list.cnf" \
         "$(PERL)" "$(SRCDIR)\util\copy.pl" "$(SRCDIR)\apps\ct_log_list.cnf" \
                                        "$(OPENSSLDIR)\ct_log_list.cnf"

install_dev:
	@if "$(INSTALLTOP)"=="" ( echo INSTALLTOP should not be empty & exit 1 )
	@echo *** Installing development files
	@"$(PERL)" "$(SRCDIR)\util\mkdir-p.pl" "$(INSTALLTOP)\include\openssl"
	@rem 
	@"$(PERL)" "$(SRCDIR)\util\copy.pl" "$(SRCDIR)\ms\applink.c" \
				       "$(INSTALLTOP)\include\openssl"
	@rem 
	@"$(PERL)" "$(SRCDIR)\util\copy.pl" "$(SRCDIR)\include\openssl\*.h" \
				       "$(INSTALLTOP)\include\openssl"
	@"$(PERL)" "$(SRCDIR)\util\copy.pl" $(BLDDIR)\include\openssl\*.h \
				       "$(INSTALLTOP)\include\openssl"
	@"$(PERL)" "$(SRCDIR)\util\mkdir-p.pl" "$(INSTALLTOP)\$(LIBDIR)"
	@"$(PERL)" "$(SRCDIR)\util\copy.pl" $(INSTALL_LIBS) \
				       "$(INSTALLTOP)\$(LIBDIR)"
	@if "$(SHLIBS)"=="" \
	 "$(PERL)" "$(SRCDIR)\util\copy.pl" ossl_static.pdb \
                                       "$(INSTALLTOP)\$(LIBDIR)"

uninstall_dev:

install_engines:
	@if "$(INSTALLTOP)"=="" ( echo INSTALLTOP should not be empty & exit 1 )
	@echo *** Installing engines
	@"$(PERL)" "$(SRCDIR)\util\mkdir-p.pl" "$(ENGINESDIR)"
	@if not "$(ENGINES)"=="" \
	 "$(PERL)" "$(SRCDIR)\util\copy.pl" $(INSTALL_ENGINES) "$(ENGINESDIR)"
	@if not "$(ENGINES)"=="" \
	 "$(PERL)" "$(SRCDIR)\util\copy.pl" $(INSTALL_ENGINEPDBS) "$(ENGINESDIR)"

uninstall_engines:

install_runtime:
	@if "$(INSTALLTOP)"=="" ( echo INSTALLTOP should not be empty & exit 1 )
	@echo *** Installing runtime files
	@"$(PERL)" "$(SRCDIR)\util\mkdir-p.pl" "$(INSTALLTOP)\bin"
	@if not "$(SHLIBS)"=="" \
	 "$(PERL)" "$(SRCDIR)\util\copy.pl" $(INSTALL_SHLIBS) "$(INSTALLTOP)\bin"
	@if not "$(SHLIBS)"=="" \
	 "$(PERL)" "$(SRCDIR)\util\copy.pl" $(INSTALL_SHLIBPDBS) \
                                        "$(INSTALLTOP)\bin"
	@"$(PERL)" "$(SRCDIR)\util\copy.pl" $(INSTALL_PROGRAMS) \
                                        "$(INSTALLTOP)\bin"
	@"$(PERL)" "$(SRCDIR)\util\copy.pl" $(INSTALL_PROGRAMPDBS) \
                                        "$(INSTALLTOP)\bin"
	@"$(PERL)" "$(SRCDIR)\util\copy.pl" $(BIN_SCRIPTS) \
                                        "$(INSTALLTOP)\bin"

uninstall_runtime:

install_html_docs:
        "$(PERL)" "$(SRCDIR)\util\process_docs.pl" \
                "--destdir=$(INSTALLTOP)\html" --type=html

uninstall_html_docs:

# Building targets ###################################################

configdata.pm: "$(SRCDIR)\Configure" "Configurations\windows-makefile.tmpl" "Configurations\common.tmpl" "build.info" "crypto\build.info" "ssl\build.info" "engines\build.info" "apps\build.info" "test\build.info" "util\build.info" "tools\build.info" "fuzz\build.info" "crypto\objects\build.info" "crypto\md4\build.info" "crypto\md5\build.info" "crypto\sha\build.info" "crypto\mdc2\build.info" "crypto\hmac\build.info" "crypto\ripemd\build.info" "crypto\whrlpool\build.info" "crypto\poly1305\build.info" "crypto\blake2\build.info" "crypto\siphash\build.info" "crypto\sm3\build.info" "crypto\des\build.info" "crypto\aes\build.info" "crypto\rc2\build.info" "crypto\rc4\build.info" "crypto\idea\build.info" "crypto\bf\build.info" "crypto\cast\build.info" "crypto\camellia\build.info" "crypto\seed\build.info" "crypto\sm4\build.info" "crypto\chacha\build.info" "crypto\modes\build.info" "crypto\bn\build.info" "crypto\ec\build.info" "crypto\rsa\build.info" "crypto\dsa\build.info" "crypto\dh\build.info" "crypto\dso\build.info" "crypto\engine\build.info" "crypto\buffer\build.info" "crypto\bio\build.info" "crypto\stack\build.info" "crypto\lhash\build.info" "crypto\rand\build.info" "crypto\err\build.info" "crypto\evp\build.info" "crypto\asn1\build.info" "crypto\pem\build.info" "crypto\x509\build.info" "crypto\x509v3\build.info" "crypto\conf\build.info" "crypto\txt_db\build.info" "crypto\pkcs7\build.info" "crypto\pkcs12\build.info" "crypto\comp\build.info" "crypto\ocsp\build.info" "crypto\ui\build.info" "crypto\cms\build.info" "crypto\ts\build.info" "crypto\srp\build.info" "crypto\cmac\build.info" "crypto\ct\build.info" "crypto\async\build.info" "crypto\kdf\build.info" "crypto\store\build.info" "test\ossl_shim\build.info" "Configurations\00-base-templates.conf" "Configurations\10-main.conf"
	@echo "Detected changed: $?"
	@echo "Reconfiguring..."
	"$(PERL)" "$(SRCDIR)\Configure" reconf
	@echo "**************************************************"
	@echo "***                                            ***"
	@echo "***   Please run the same make command again   ***"
	@echo "***                                            ***"
	@echo "**************************************************"
	@exit 1


crypto\include\internal\bn_conf.h: "crypto\include\internal\bn_conf.h.in" "configdata.pm"
	"$(PERL)" "-I$(BLDDIR)" -Mconfigdata "util\dofile.pl" \
	    "-omakefile" "crypto\include\internal\bn_conf.h.in" > $@
crypto\include\internal\dso_conf.h: "crypto\include\internal\dso_conf.h.in" "configdata.pm"
	"$(PERL)" "-I$(BLDDIR)" -Mconfigdata "util\dofile.pl" \
	    "-omakefile" "crypto\include\internal\dso_conf.h.in" > $@
include\openssl\opensslconf.h: "include\openssl\opensslconf.h.in" "configdata.pm"
	"$(PERL)" "-I$(BLDDIR)" -Mconfigdata "util\dofile.pl" \
	    "-omakefile" "include\openssl\opensslconf.h.in" > $@
libcrypto.lib: crypto\aes\aes-x86_64.obj crypto\aes\aes_cfb.obj crypto\aes\aes_ecb.obj crypto\aes\aes_ige.obj crypto\aes\aes_misc.obj crypto\aes\aes_ofb.obj crypto\aes\aes_wrap.obj crypto\aes\aesni-mb-x86_64.obj crypto\aes\aesni-sha1-x86_64.obj crypto\aes\aesni-sha256-x86_64.obj crypto\aes\aesni-x86_64.obj crypto\aes\bsaes-x86_64.obj crypto\aes\vpaes-x86_64.obj crypto\asn1\a_bitstr.obj crypto\asn1\a_d2i_fp.obj crypto\asn1\a_digest.obj crypto\asn1\a_dup.obj crypto\asn1\a_gentm.obj crypto\asn1\a_i2d_fp.obj crypto\asn1\a_int.obj crypto\asn1\a_mbstr.obj crypto\asn1\a_object.obj crypto\asn1\a_octet.obj crypto\asn1\a_print.obj crypto\asn1\a_sign.obj crypto\asn1\a_strex.obj crypto\asn1\a_strnid.obj crypto\asn1\a_time.obj crypto\asn1\a_type.obj crypto\asn1\a_utctm.obj crypto\asn1\a_utf8.obj crypto\asn1\a_verify.obj crypto\asn1\ameth_lib.obj crypto\asn1\asn1_err.obj crypto\asn1\asn1_gen.obj crypto\asn1\asn1_item_list.obj crypto\asn1\asn1_lib.obj crypto\asn1\asn1_par.obj crypto\asn1\asn_mime.obj crypto\asn1\asn_moid.obj crypto\asn1\asn_mstbl.obj crypto\asn1\asn_pack.obj crypto\asn1\bio_asn1.obj crypto\asn1\bio_ndef.obj crypto\asn1\d2i_pr.obj crypto\asn1\d2i_pu.obj crypto\asn1\evp_asn1.obj crypto\asn1\f_int.obj crypto\asn1\f_string.obj crypto\asn1\i2d_pr.obj crypto\asn1\i2d_pu.obj crypto\asn1\n_pkey.obj crypto\asn1\nsseq.obj crypto\asn1\p5_pbe.obj crypto\asn1\p5_pbev2.obj crypto\asn1\p5_scrypt.obj crypto\asn1\p8_pkey.obj crypto\asn1\t_bitst.obj crypto\asn1\t_pkey.obj crypto\asn1\t_spki.obj crypto\asn1\tasn_dec.obj crypto\asn1\tasn_enc.obj crypto\asn1\tasn_fre.obj crypto\asn1\tasn_new.obj crypto\asn1\tasn_prn.obj crypto\asn1\tasn_scn.obj crypto\asn1\tasn_typ.obj crypto\asn1\tasn_utl.obj crypto\asn1\x_algor.obj crypto\asn1\x_bignum.obj crypto\asn1\x_info.obj crypto\asn1\x_int64.obj crypto\asn1\x_long.obj crypto\asn1\x_pkey.obj crypto\asn1\x_sig.obj crypto\asn1\x_spki.obj crypto\asn1\x_val.obj crypto\async\arch\async_null.obj crypto\async\arch\async_posix.obj crypto\async\arch\async_win.obj crypto\async\async.obj crypto\async\async_err.obj crypto\async\async_wait.obj crypto\bf\bf_cfb64.obj crypto\bf\bf_ecb.obj crypto\bf\bf_enc.obj crypto\bf\bf_ofb64.obj crypto\bf\bf_skey.obj crypto\bio\b_addr.obj crypto\bio\b_dump.obj crypto\bio\b_print.obj crypto\bio\b_sock.obj crypto\bio\b_sock2.obj crypto\bio\bf_buff.obj crypto\bio\bf_lbuf.obj crypto\bio\bf_nbio.obj crypto\bio\bf_null.obj crypto\bio\bio_cb.obj crypto\bio\bio_err.obj crypto\bio\bio_lib.obj crypto\bio\bio_meth.obj crypto\bio\bss_acpt.obj crypto\bio\bss_bio.obj crypto\bio\bss_conn.obj crypto\bio\bss_dgram.obj crypto\bio\bss_fd.obj crypto\bio\bss_file.obj crypto\bio\bss_log.obj crypto\bio\bss_mem.obj crypto\bio\bss_null.obj crypto\bio\bss_sock.obj crypto\blake2\blake2b.obj crypto\blake2\blake2s.obj crypto\blake2\m_blake2b.obj crypto\blake2\m_blake2s.obj crypto\bn\bn_add.obj crypto\bn\bn_asm.obj crypto\bn\bn_blind.obj crypto\bn\bn_const.obj crypto\bn\bn_ctx.obj crypto\bn\bn_depr.obj crypto\bn\bn_dh.obj crypto\bn\bn_div.obj crypto\bn\bn_err.obj crypto\bn\bn_exp.obj crypto\bn\bn_exp2.obj crypto\bn\bn_gcd.obj crypto\bn\bn_gf2m.obj crypto\bn\bn_intern.obj crypto\bn\bn_kron.obj crypto\bn\bn_lib.obj crypto\bn\bn_mod.obj crypto\bn\bn_mont.obj crypto\bn\bn_mpi.obj crypto\bn\bn_mul.obj crypto\bn\bn_nist.obj crypto\bn\bn_prime.obj crypto\bn\bn_print.obj crypto\bn\bn_rand.obj crypto\bn\bn_recp.obj crypto\bn\bn_shift.obj crypto\bn\bn_sqr.obj crypto\bn\bn_sqrt.obj crypto\bn\bn_srp.obj crypto\bn\bn_word.obj crypto\bn\bn_x931p.obj crypto\bn\rsaz-avx2.obj crypto\bn\rsaz-x86_64.obj crypto\bn\rsaz_exp.obj crypto\bn\x86_64-gf2m.obj crypto\bn\x86_64-mont.obj crypto\bn\x86_64-mont5.obj crypto\buffer\buf_err.obj crypto\buffer\buffer.obj crypto\camellia\cmll-x86_64.obj crypto\camellia\cmll_cfb.obj crypto\camellia\cmll_ctr.obj crypto\camellia\cmll_ecb.obj crypto\camellia\cmll_misc.obj crypto\camellia\cmll_ofb.obj crypto\cast\c_cfb64.obj crypto\cast\c_ecb.obj crypto\cast\c_enc.obj crypto\cast\c_ofb64.obj crypto\cast\c_skey.obj crypto\chacha\chacha-x86_64.obj crypto\cmac\cm_ameth.obj crypto\cmac\cm_pmeth.obj crypto\cmac\cmac.obj crypto\cms\cms_asn1.obj crypto\cms\cms_att.obj crypto\cms\cms_cd.obj crypto\cms\cms_dd.obj crypto\cms\cms_enc.obj crypto\cms\cms_env.obj crypto\cms\cms_err.obj crypto\cms\cms_ess.obj crypto\cms\cms_io.obj crypto\cms\cms_kari.obj crypto\cms\cms_lib.obj crypto\cms\cms_pwri.obj crypto\cms\cms_sd.obj crypto\cms\cms_smime.obj crypto\comp\c_zlib.obj crypto\comp\comp_err.obj crypto\comp\comp_lib.obj crypto\conf\conf_api.obj crypto\conf\conf_def.obj crypto\conf\conf_err.obj crypto\conf\conf_lib.obj crypto\conf\conf_mall.obj crypto\conf\conf_mod.obj crypto\conf\conf_sap.obj crypto\cpt_err.obj crypto\cryptlib.obj crypto\ct\ct_b64.obj crypto\ct\ct_err.obj crypto\ct\ct_log.obj crypto\ct\ct_oct.obj crypto\ct\ct_policy.obj crypto\ct\ct_prn.obj crypto\ct\ct_sct.obj crypto\ct\ct_sct_ctx.obj crypto\ct\ct_vfy.obj crypto\ct\ct_x509v3.obj crypto\ctype.obj crypto\cversion.obj crypto\des\cbc_cksm.obj crypto\des\cbc_enc.obj crypto\des\cfb64ede.obj crypto\des\cfb64enc.obj crypto\des\cfb_enc.obj crypto\des\des_enc.obj crypto\des\ecb3_enc.obj crypto\des\ecb_enc.obj crypto\des\fcrypt.obj crypto\des\fcrypt_b.obj crypto\des\ofb64ede.obj crypto\des\ofb64enc.obj crypto\des\ofb_enc.obj crypto\des\pcbc_enc.obj crypto\des\qud_cksm.obj crypto\des\rand_key.obj crypto\des\set_key.obj crypto\des\str2key.obj crypto\des\xcbc_enc.obj crypto\dh\dh_ameth.obj crypto\dh\dh_asn1.obj crypto\dh\dh_check.obj crypto\dh\dh_depr.obj crypto\dh\dh_err.obj crypto\dh\dh_gen.obj crypto\dh\dh_kdf.obj crypto\dh\dh_key.obj crypto\dh\dh_lib.obj crypto\dh\dh_meth.obj crypto\dh\dh_pmeth.obj crypto\dh\dh_prn.obj crypto\dh\dh_rfc5114.obj crypto\dh\dh_rfc7919.obj crypto\dsa\dsa_ameth.obj crypto\dsa\dsa_asn1.obj crypto\dsa\dsa_depr.obj crypto\dsa\dsa_err.obj crypto\dsa\dsa_gen.obj crypto\dsa\dsa_key.obj crypto\dsa\dsa_lib.obj crypto\dsa\dsa_meth.obj crypto\dsa\dsa_ossl.obj crypto\dsa\dsa_pmeth.obj crypto\dsa\dsa_prn.obj crypto\dsa\dsa_sign.obj crypto\dsa\dsa_vrf.obj crypto\dso\dso_dl.obj crypto\dso\dso_dlfcn.obj crypto\dso\dso_err.obj crypto\dso\dso_lib.obj crypto\dso\dso_openssl.obj crypto\dso\dso_vms.obj crypto\dso\dso_win32.obj crypto\ebcdic.obj crypto\ec\curve25519.obj crypto\ec\ec2_mult.obj crypto\ec\ec2_oct.obj crypto\ec\ec2_smpl.obj crypto\ec\ec_ameth.obj crypto\ec\ec_asn1.obj crypto\ec\ec_check.obj crypto\ec\ec_curve.obj crypto\ec\ec_cvt.obj crypto\ec\ec_err.obj crypto\ec\ec_key.obj crypto\ec\ec_kmeth.obj crypto\ec\ec_lib.obj crypto\ec\ec_mult.obj crypto\ec\ec_oct.obj crypto\ec\ec_pmeth.obj crypto\ec\ec_print.obj crypto\ec\ecdh_kdf.obj crypto\ec\ecdh_ossl.obj crypto\ec\ecdsa_ossl.obj crypto\ec\ecdsa_sign.obj crypto\ec\ecdsa_vrf.obj crypto\ec\eck_prn.obj crypto\ec\ecp_mont.obj crypto\ec\ecp_nist.obj crypto\ec\ecp_nistp224.obj crypto\ec\ecp_nistp256.obj crypto\ec\ecp_nistp521.obj crypto\ec\ecp_nistputil.obj crypto\ec\ecp_nistz256-x86_64.obj crypto\ec\ecp_nistz256.obj crypto\ec\ecp_oct.obj crypto\ec\ecp_smpl.obj crypto\ec\ecx_meth.obj crypto\engine\eng_all.obj crypto\engine\eng_cnf.obj crypto\engine\eng_ctrl.obj crypto\engine\eng_dyn.obj crypto\engine\eng_err.obj crypto\engine\eng_fat.obj crypto\engine\eng_init.obj crypto\engine\eng_lib.obj crypto\engine\eng_list.obj crypto\engine\eng_openssl.obj crypto\engine\eng_pkey.obj crypto\engine\eng_rdrand.obj crypto\engine\eng_table.obj crypto\engine\tb_asnmth.obj crypto\engine\tb_cipher.obj crypto\engine\tb_dh.obj crypto\engine\tb_digest.obj crypto\engine\tb_dsa.obj crypto\engine\tb_eckey.obj crypto\engine\tb_pkmeth.obj crypto\engine\tb_rand.obj crypto\engine\tb_rsa.obj crypto\err\err.obj crypto\err\err_all.obj crypto\err\err_prn.obj crypto\evp\bio_b64.obj crypto\evp\bio_enc.obj crypto\evp\bio_md.obj crypto\evp\bio_ok.obj crypto\evp\c_allc.obj crypto\evp\c_alld.obj crypto\evp\cmeth_lib.obj crypto\evp\digest.obj crypto\evp\e_aes.obj crypto\evp\e_aes_cbc_hmac_sha1.obj crypto\evp\e_aes_cbc_hmac_sha256.obj crypto\evp\e_aria.obj crypto\evp\e_bf.obj crypto\evp\e_camellia.obj crypto\evp\e_cast.obj crypto\evp\e_chacha20_poly1305.obj crypto\evp\e_des.obj crypto\evp\e_des3.obj crypto\evp\e_idea.obj crypto\evp\e_null.obj crypto\evp\e_old.obj crypto\evp\e_rc2.obj crypto\evp\e_rc4.obj crypto\evp\e_rc4_hmac_md5.obj crypto\evp\e_rc5.obj crypto\evp\e_seed.obj crypto\evp\e_sm4.obj crypto\evp\e_xcbc_d.obj crypto\evp\encode.obj crypto\evp\evp_cnf.obj crypto\evp\evp_enc.obj crypto\evp\evp_err.obj crypto\evp\evp_key.obj crypto\evp\evp_lib.obj crypto\evp\evp_pbe.obj crypto\evp\evp_pkey.obj crypto\evp\m_md2.obj crypto\evp\m_md4.obj crypto\evp\m_md5.obj crypto\evp\m_md5_sha1.obj crypto\evp\m_mdc2.obj crypto\evp\m_null.obj crypto\evp\m_ripemd.obj crypto\evp\m_sha1.obj crypto\evp\m_sha3.obj crypto\evp\m_sigver.obj crypto\evp\m_wp.obj crypto\evp\names.obj crypto\evp\p5_crpt.obj crypto\evp\p5_crpt2.obj crypto\evp\p_dec.obj crypto\evp\p_enc.obj crypto\evp\p_lib.obj crypto\evp\p_open.obj crypto\evp\p_seal.obj crypto\evp\p_sign.obj crypto\evp\p_verify.obj crypto\evp\pbe_scrypt.obj crypto\evp\pmeth_fn.obj crypto\evp\pmeth_gn.obj crypto\evp\pmeth_lib.obj crypto\ex_data.obj crypto\hmac\hm_ameth.obj crypto\hmac\hm_pmeth.obj crypto\hmac\hmac.obj crypto\idea\i_cbc.obj crypto\idea\i_cfb64.obj crypto\idea\i_ecb.obj crypto\idea\i_ofb64.obj crypto\idea\i_skey.obj crypto\init.obj crypto\kdf\hkdf.obj crypto\kdf\kdf_err.obj crypto\kdf\scrypt.obj crypto\kdf\tls1_prf.obj crypto\lhash\lh_stats.obj crypto\lhash\lhash.obj crypto\md4\md4_dgst.obj crypto\md4\md4_one.obj crypto\md5\md5-x86_64.obj crypto\md5\md5_dgst.obj crypto\md5\md5_one.obj crypto\mdc2\mdc2_one.obj crypto\mdc2\mdc2dgst.obj crypto\mem.obj crypto\mem_dbg.obj crypto\mem_sec.obj crypto\modes\aesni-gcm-x86_64.obj crypto\modes\cbc128.obj crypto\modes\ccm128.obj crypto\modes\cfb128.obj crypto\modes\ctr128.obj crypto\modes\cts128.obj crypto\modes\gcm128.obj crypto\modes\ghash-x86_64.obj crypto\modes\ocb128.obj crypto\modes\ofb128.obj crypto\modes\wrap128.obj crypto\modes\xts128.obj crypto\o_dir.obj crypto\o_fips.obj crypto\o_fopen.obj crypto\o_init.obj crypto\o_str.obj crypto\o_time.obj crypto\objects\o_names.obj crypto\objects\obj_dat.obj crypto\objects\obj_err.obj crypto\objects\obj_lib.obj crypto\objects\obj_xref.obj crypto\ocsp\ocsp_asn.obj crypto\ocsp\ocsp_cl.obj crypto\ocsp\ocsp_err.obj crypto\ocsp\ocsp_ext.obj crypto\ocsp\ocsp_ht.obj crypto\ocsp\ocsp_lib.obj crypto\ocsp\ocsp_prn.obj crypto\ocsp\ocsp_srv.obj crypto\ocsp\ocsp_vfy.obj crypto\ocsp\v3_ocsp.obj crypto\pem\pem_all.obj crypto\pem\pem_err.obj crypto\pem\pem_info.obj crypto\pem\pem_lib.obj crypto\pem\pem_oth.obj crypto\pem\pem_pk8.obj crypto\pem\pem_pkey.obj crypto\pem\pem_sign.obj crypto\pem\pem_x509.obj crypto\pem\pem_xaux.obj crypto\pem\pvkfmt.obj crypto\pkcs12\p12_add.obj crypto\pkcs12\p12_asn.obj crypto\pkcs12\p12_attr.obj crypto\pkcs12\p12_crpt.obj crypto\pkcs12\p12_crt.obj crypto\pkcs12\p12_decr.obj crypto\pkcs12\p12_init.obj crypto\pkcs12\p12_key.obj crypto\pkcs12\p12_kiss.obj crypto\pkcs12\p12_mutl.obj crypto\pkcs12\p12_npas.obj crypto\pkcs12\p12_p8d.obj crypto\pkcs12\p12_p8e.obj crypto\pkcs12\p12_sbag.obj crypto\pkcs12\p12_utl.obj crypto\pkcs12\pk12err.obj crypto\pkcs7\bio_pk7.obj crypto\pkcs7\pk7_asn1.obj crypto\pkcs7\pk7_attr.obj crypto\pkcs7\pk7_doit.obj crypto\pkcs7\pk7_lib.obj crypto\pkcs7\pk7_mime.obj crypto\pkcs7\pk7_smime.obj crypto\pkcs7\pkcs7err.obj crypto\poly1305\poly1305-x86_64.obj crypto\poly1305\poly1305.obj crypto\poly1305\poly1305_ameth.obj crypto\poly1305\poly1305_pmeth.obj crypto\rand\drbg_lib.obj crypto\rand\drbg_rand.obj crypto\rand\rand_egd.obj crypto\rand\rand_err.obj crypto\rand\rand_lib.obj crypto\rand\rand_unix.obj crypto\rand\rand_vms.obj crypto\rand\rand_win.obj crypto\rand\randfile.obj crypto\rc2\rc2_cbc.obj crypto\rc2\rc2_ecb.obj crypto\rc2\rc2_skey.obj crypto\rc2\rc2cfb64.obj crypto\rc2\rc2ofb64.obj crypto\rc4\rc4-md5-x86_64.obj crypto\rc4\rc4-x86_64.obj crypto\ripemd\rmd_dgst.obj crypto\ripemd\rmd_one.obj crypto\rsa\rsa_ameth.obj crypto\rsa\rsa_asn1.obj crypto\rsa\rsa_chk.obj crypto\rsa\rsa_crpt.obj crypto\rsa\rsa_depr.obj crypto\rsa\rsa_err.obj crypto\rsa\rsa_gen.obj crypto\rsa\rsa_lib.obj crypto\rsa\rsa_meth.obj crypto\rsa\rsa_mp.obj crypto\rsa\rsa_none.obj crypto\rsa\rsa_oaep.obj crypto\rsa\rsa_ossl.obj crypto\rsa\rsa_pk1.obj crypto\rsa\rsa_pmeth.obj crypto\rsa\rsa_prn.obj crypto\rsa\rsa_pss.obj crypto\rsa\rsa_saos.obj crypto\rsa\rsa_sign.obj crypto\rsa\rsa_ssl.obj crypto\rsa\rsa_x931.obj crypto\rsa\rsa_x931g.obj crypto\seed\seed.obj crypto\seed\seed_cbc.obj crypto\seed\seed_cfb.obj crypto\seed\seed_ecb.obj crypto\seed\seed_ofb.obj crypto\sha\keccak1600.obj crypto\sha\sha1-mb-x86_64.obj crypto\sha\sha1-x86_64.obj crypto\sha\sha1_one.obj crypto\sha\sha1dgst.obj crypto\sha\sha256-mb-x86_64.obj crypto\sha\sha256-x86_64.obj crypto\sha\sha256.obj crypto\sha\sha512-x86_64.obj crypto\sha\sha512.obj crypto\siphash\siphash.obj crypto\siphash\siphash_ameth.obj crypto\siphash\siphash_pmeth.obj crypto\sm3\m_sm3.obj crypto\sm3\sm3.obj crypto\sm4\sm4.obj crypto\srp\srp_lib.obj crypto\srp\srp_vfy.obj crypto\stack\stack.obj crypto\store\loader_file.obj crypto\store\store_err.obj crypto\store\store_init.obj crypto\store\store_lib.obj crypto\store\store_register.obj crypto\store\store_strings.obj crypto\threads_none.obj crypto\threads_pthread.obj crypto\threads_win.obj crypto\ts\ts_asn1.obj crypto\ts\ts_conf.obj crypto\ts\ts_err.obj crypto\ts\ts_lib.obj crypto\ts\ts_req_print.obj crypto\ts\ts_req_utils.obj crypto\ts\ts_rsp_print.obj crypto\ts\ts_rsp_sign.obj crypto\ts\ts_rsp_utils.obj crypto\ts\ts_rsp_verify.obj crypto\ts\ts_verify_ctx.obj crypto\txt_db\txt_db.obj crypto\ui\ui_err.obj crypto\ui\ui_lib.obj crypto\ui\ui_null.obj crypto\ui\ui_openssl.obj crypto\ui\ui_util.obj crypto\uid.obj crypto\uplink-x86_64.obj crypto\whrlpool\wp-x86_64.obj crypto\whrlpool\wp_dgst.obj crypto\x509\by_dir.obj crypto\x509\by_file.obj crypto\x509\t_crl.obj crypto\x509\t_req.obj crypto\x509\t_x509.obj crypto\x509\x509_att.obj crypto\x509\x509_cmp.obj crypto\x509\x509_d2.obj crypto\x509\x509_def.obj crypto\x509\x509_err.obj crypto\x509\x509_ext.obj crypto\x509\x509_lu.obj crypto\x509\x509_obj.obj crypto\x509\x509_r2x.obj crypto\x509\x509_req.obj crypto\x509\x509_set.obj crypto\x509\x509_trs.obj crypto\x509\x509_txt.obj crypto\x509\x509_v3.obj crypto\x509\x509_vfy.obj crypto\x509\x509_vpm.obj crypto\x509\x509cset.obj crypto\x509\x509name.obj crypto\x509\x509rset.obj crypto\x509\x509spki.obj crypto\x509\x509type.obj crypto\x509\x_all.obj crypto\x509\x_attrib.obj crypto\x509\x_crl.obj crypto\x509\x_exten.obj crypto\x509\x_name.obj crypto\x509\x_pubkey.obj crypto\x509\x_req.obj crypto\x509\x_x509.obj crypto\x509\x_x509a.obj crypto\x509v3\pcy_cache.obj crypto\x509v3\pcy_data.obj crypto\x509v3\pcy_lib.obj crypto\x509v3\pcy_map.obj crypto\x509v3\pcy_node.obj crypto\x509v3\pcy_tree.obj crypto\x509v3\v3_addr.obj crypto\x509v3\v3_admis.obj crypto\x509v3\v3_akey.obj crypto\x509v3\v3_akeya.obj crypto\x509v3\v3_alt.obj crypto\x509v3\v3_asid.obj crypto\x509v3\v3_bcons.obj crypto\x509v3\v3_bitst.obj crypto\x509v3\v3_conf.obj crypto\x509v3\v3_cpols.obj crypto\x509v3\v3_crld.obj crypto\x509v3\v3_enum.obj crypto\x509v3\v3_extku.obj crypto\x509v3\v3_genn.obj crypto\x509v3\v3_ia5.obj crypto\x509v3\v3_info.obj crypto\x509v3\v3_int.obj crypto\x509v3\v3_lib.obj crypto\x509v3\v3_ncons.obj crypto\x509v3\v3_pci.obj crypto\x509v3\v3_pcia.obj crypto\x509v3\v3_pcons.obj crypto\x509v3\v3_pku.obj crypto\x509v3\v3_pmaps.obj crypto\x509v3\v3_prn.obj crypto\x509v3\v3_purp.obj crypto\x509v3\v3_skey.obj crypto\x509v3\v3_sxnet.obj crypto\x509v3\v3_tlsf.obj crypto\x509v3\v3_utl.obj crypto\x509v3\v3err.obj crypto\x86_64cpuid.obj ms\uplink.obj crypto\dllmain.obj "util\libcrypto.num" "util\mkdef.pl"
	"$(PERL)" "util\mkdef.pl" "crypto" 32 > libcrypto-1_1-x64.def
	"$(PERL)" -i.tmp -pe "s|^LIBRARY\s+crypto32|LIBRARY libcrypto-1_1-x64|;" libcrypto-1_1-x64.def
	DEL libcrypto-1_1-x64.def.tmp
	"$(PERL)" "util\mkrc.pl" libcrypto-1_1-x64.dll > libcrypto-1_1-x64.rc
	$(RC) $(RCOUTFLAG)libcrypto-1_1-x64.res libcrypto-1_1-x64.rc
	IF EXIST libcrypto-1_1-x64.dll.manifest DEL /F /Q libcrypto-1_1-x64.dll.manifest
	$(LD) $(LDFLAGS) $(LIB_LDFLAGS) \
		/implib:$@ $(LDOUTFLAG)libcrypto-1_1-x64.dll /def:libcrypto-1_1-x64.def @<< || (DEL /Q $(@B).* libcrypto-1_1-x64.* && EXIT 1)
crypto\aes\aes-x86_64.obj
crypto\aes\aes_cfb.obj
crypto\aes\aes_ecb.obj
crypto\aes\aes_ige.obj
crypto\aes\aes_misc.obj
crypto\aes\aes_ofb.obj
crypto\aes\aes_wrap.obj
crypto\aes\aesni-mb-x86_64.obj
crypto\aes\aesni-sha1-x86_64.obj
crypto\aes\aesni-sha256-x86_64.obj
crypto\aes\aesni-x86_64.obj
crypto\aes\bsaes-x86_64.obj
crypto\aes\vpaes-x86_64.obj
crypto\asn1\a_bitstr.obj
crypto\asn1\a_d2i_fp.obj
crypto\asn1\a_digest.obj
crypto\asn1\a_dup.obj
crypto\asn1\a_gentm.obj
crypto\asn1\a_i2d_fp.obj
crypto\asn1\a_int.obj
crypto\asn1\a_mbstr.obj
crypto\asn1\a_object.obj
crypto\asn1\a_octet.obj
crypto\asn1\a_print.obj
crypto\asn1\a_sign.obj
crypto\asn1\a_strex.obj
crypto\asn1\a_strnid.obj
crypto\asn1\a_time.obj
crypto\asn1\a_type.obj
crypto\asn1\a_utctm.obj
crypto\asn1\a_utf8.obj
crypto\asn1\a_verify.obj
crypto\asn1\ameth_lib.obj
crypto\asn1\asn1_err.obj
crypto\asn1\asn1_gen.obj
crypto\asn1\asn1_item_list.obj
crypto\asn1\asn1_lib.obj
crypto\asn1\asn1_par.obj
crypto\asn1\asn_mime.obj
crypto\asn1\asn_moid.obj
crypto\asn1\asn_mstbl.obj
crypto\asn1\asn_pack.obj
crypto\asn1\bio_asn1.obj
crypto\asn1\bio_ndef.obj
crypto\asn1\d2i_pr.obj
crypto\asn1\d2i_pu.obj
crypto\asn1\evp_asn1.obj
crypto\asn1\f_int.obj
crypto\asn1\f_string.obj
crypto\asn1\i2d_pr.obj
crypto\asn1\i2d_pu.obj
crypto\asn1\n_pkey.obj
crypto\asn1\nsseq.obj
crypto\asn1\p5_pbe.obj
crypto\asn1\p5_pbev2.obj
crypto\asn1\p5_scrypt.obj
crypto\asn1\p8_pkey.obj
crypto\asn1\t_bitst.obj
crypto\asn1\t_pkey.obj
crypto\asn1\t_spki.obj
crypto\asn1\tasn_dec.obj
crypto\asn1\tasn_enc.obj
crypto\asn1\tasn_fre.obj
crypto\asn1\tasn_new.obj
crypto\asn1\tasn_prn.obj
crypto\asn1\tasn_scn.obj
crypto\asn1\tasn_typ.obj
crypto\asn1\tasn_utl.obj
crypto\asn1\x_algor.obj
crypto\asn1\x_bignum.obj
crypto\asn1\x_info.obj
crypto\asn1\x_int64.obj
crypto\asn1\x_long.obj
crypto\asn1\x_pkey.obj
crypto\asn1\x_sig.obj
crypto\asn1\x_spki.obj
crypto\asn1\x_val.obj
crypto\async\arch\async_null.obj
crypto\async\arch\async_posix.obj
crypto\async\arch\async_win.obj
crypto\async\async.obj
crypto\async\async_err.obj
crypto\async\async_wait.obj
crypto\bf\bf_cfb64.obj
crypto\bf\bf_ecb.obj
crypto\bf\bf_enc.obj
crypto\bf\bf_ofb64.obj
crypto\bf\bf_skey.obj
crypto\bio\b_addr.obj
crypto\bio\b_dump.obj
crypto\bio\b_print.obj
crypto\bio\b_sock.obj
crypto\bio\b_sock2.obj
crypto\bio\bf_buff.obj
crypto\bio\bf_lbuf.obj
crypto\bio\bf_nbio.obj
crypto\bio\bf_null.obj
crypto\bio\bio_cb.obj
crypto\bio\bio_err.obj
crypto\bio\bio_lib.obj
crypto\bio\bio_meth.obj
crypto\bio\bss_acpt.obj
crypto\bio\bss_bio.obj
crypto\bio\bss_conn.obj
crypto\bio\bss_dgram.obj
crypto\bio\bss_fd.obj
crypto\bio\bss_file.obj
crypto\bio\bss_log.obj
crypto\bio\bss_mem.obj
crypto\bio\bss_null.obj
crypto\bio\bss_sock.obj
crypto\blake2\blake2b.obj
crypto\blake2\blake2s.obj
crypto\blake2\m_blake2b.obj
crypto\blake2\m_blake2s.obj
crypto\bn\bn_add.obj
crypto\bn\bn_asm.obj
crypto\bn\bn_blind.obj
crypto\bn\bn_const.obj
crypto\bn\bn_ctx.obj
crypto\bn\bn_depr.obj
crypto\bn\bn_dh.obj
crypto\bn\bn_div.obj
crypto\bn\bn_err.obj
crypto\bn\bn_exp.obj
crypto\bn\bn_exp2.obj
crypto\bn\bn_gcd.obj
crypto\bn\bn_gf2m.obj
crypto\bn\bn_intern.obj
crypto\bn\bn_kron.obj
crypto\bn\bn_lib.obj
crypto\bn\bn_mod.obj
crypto\bn\bn_mont.obj
crypto\bn\bn_mpi.obj
crypto\bn\bn_mul.obj
crypto\bn\bn_nist.obj
crypto\bn\bn_prime.obj
crypto\bn\bn_print.obj
crypto\bn\bn_rand.obj
crypto\bn\bn_recp.obj
crypto\bn\bn_shift.obj
crypto\bn\bn_sqr.obj
crypto\bn\bn_sqrt.obj
crypto\bn\bn_srp.obj
crypto\bn\bn_word.obj
crypto\bn\bn_x931p.obj
crypto\bn\rsaz-avx2.obj
crypto\bn\rsaz-x86_64.obj
crypto\bn\rsaz_exp.obj
crypto\bn\x86_64-gf2m.obj
crypto\bn\x86_64-mont.obj
crypto\bn\x86_64-mont5.obj
crypto\buffer\buf_err.obj
crypto\buffer\buffer.obj
crypto\camellia\cmll-x86_64.obj
crypto\camellia\cmll_cfb.obj
crypto\camellia\cmll_ctr.obj
crypto\camellia\cmll_ecb.obj
crypto\camellia\cmll_misc.obj
crypto\camellia\cmll_ofb.obj
crypto\cast\c_cfb64.obj
crypto\cast\c_ecb.obj
crypto\cast\c_enc.obj
crypto\cast\c_ofb64.obj
crypto\cast\c_skey.obj
crypto\chacha\chacha-x86_64.obj
crypto\cmac\cm_ameth.obj
crypto\cmac\cm_pmeth.obj
crypto\cmac\cmac.obj
crypto\cms\cms_asn1.obj
crypto\cms\cms_att.obj
crypto\cms\cms_cd.obj
crypto\cms\cms_dd.obj
crypto\cms\cms_enc.obj
crypto\cms\cms_env.obj
crypto\cms\cms_err.obj
crypto\cms\cms_ess.obj
crypto\cms\cms_io.obj
crypto\cms\cms_kari.obj
crypto\cms\cms_lib.obj
crypto\cms\cms_pwri.obj
crypto\cms\cms_sd.obj
crypto\cms\cms_smime.obj
crypto\comp\c_zlib.obj
crypto\comp\comp_err.obj
crypto\comp\comp_lib.obj
crypto\conf\conf_api.obj
crypto\conf\conf_def.obj
crypto\conf\conf_err.obj
crypto\conf\conf_lib.obj
crypto\conf\conf_mall.obj
crypto\conf\conf_mod.obj
crypto\conf\conf_sap.obj
crypto\cpt_err.obj
crypto\cryptlib.obj
crypto\ct\ct_b64.obj
crypto\ct\ct_err.obj
crypto\ct\ct_log.obj
crypto\ct\ct_oct.obj
crypto\ct\ct_policy.obj
crypto\ct\ct_prn.obj
crypto\ct\ct_sct.obj
crypto\ct\ct_sct_ctx.obj
crypto\ct\ct_vfy.obj
crypto\ct\ct_x509v3.obj
crypto\ctype.obj
crypto\cversion.obj
crypto\des\cbc_cksm.obj
crypto\des\cbc_enc.obj
crypto\des\cfb64ede.obj
crypto\des\cfb64enc.obj
crypto\des\cfb_enc.obj
crypto\des\des_enc.obj
crypto\des\ecb3_enc.obj
crypto\des\ecb_enc.obj
crypto\des\fcrypt.obj
crypto\des\fcrypt_b.obj
crypto\des\ofb64ede.obj
crypto\des\ofb64enc.obj
crypto\des\ofb_enc.obj
crypto\des\pcbc_enc.obj
crypto\des\qud_cksm.obj
crypto\des\rand_key.obj
crypto\des\set_key.obj
crypto\des\str2key.obj
crypto\des\xcbc_enc.obj
crypto\dh\dh_ameth.obj
crypto\dh\dh_asn1.obj
crypto\dh\dh_check.obj
crypto\dh\dh_depr.obj
crypto\dh\dh_err.obj
crypto\dh\dh_gen.obj
crypto\dh\dh_kdf.obj
crypto\dh\dh_key.obj
crypto\dh\dh_lib.obj
crypto\dh\dh_meth.obj
crypto\dh\dh_pmeth.obj
crypto\dh\dh_prn.obj
crypto\dh\dh_rfc5114.obj
crypto\dh\dh_rfc7919.obj
crypto\dsa\dsa_ameth.obj
crypto\dsa\dsa_asn1.obj
crypto\dsa\dsa_depr.obj
crypto\dsa\dsa_err.obj
crypto\dsa\dsa_gen.obj
crypto\dsa\dsa_key.obj
crypto\dsa\dsa_lib.obj
crypto\dsa\dsa_meth.obj
crypto\dsa\dsa_ossl.obj
crypto\dsa\dsa_pmeth.obj
crypto\dsa\dsa_prn.obj
crypto\dsa\dsa_sign.obj
crypto\dsa\dsa_vrf.obj
crypto\dso\dso_dl.obj
crypto\dso\dso_dlfcn.obj
crypto\dso\dso_err.obj
crypto\dso\dso_lib.obj
crypto\dso\dso_openssl.obj
crypto\dso\dso_vms.obj
crypto\dso\dso_win32.obj
crypto\ebcdic.obj
crypto\ec\curve25519.obj
crypto\ec\ec2_mult.obj
crypto\ec\ec2_oct.obj
crypto\ec\ec2_smpl.obj
crypto\ec\ec_ameth.obj
crypto\ec\ec_asn1.obj
crypto\ec\ec_check.obj
crypto\ec\ec_curve.obj
crypto\ec\ec_cvt.obj
crypto\ec\ec_err.obj
crypto\ec\ec_key.obj
crypto\ec\ec_kmeth.obj
crypto\ec\ec_lib.obj
crypto\ec\ec_mult.obj
crypto\ec\ec_oct.obj
crypto\ec\ec_pmeth.obj
crypto\ec\ec_print.obj
crypto\ec\ecdh_kdf.obj
crypto\ec\ecdh_ossl.obj
crypto\ec\ecdsa_ossl.obj
crypto\ec\ecdsa_sign.obj
crypto\ec\ecdsa_vrf.obj
crypto\ec\eck_prn.obj
crypto\ec\ecp_mont.obj
crypto\ec\ecp_nist.obj
crypto\ec\ecp_nistp224.obj
crypto\ec\ecp_nistp256.obj
crypto\ec\ecp_nistp521.obj
crypto\ec\ecp_nistputil.obj
crypto\ec\ecp_nistz256-x86_64.obj
crypto\ec\ecp_nistz256.obj
crypto\ec\ecp_oct.obj
crypto\ec\ecp_smpl.obj
crypto\ec\ecx_meth.obj
crypto\engine\eng_all.obj
crypto\engine\eng_cnf.obj
crypto\engine\eng_ctrl.obj
crypto\engine\eng_dyn.obj
crypto\engine\eng_err.obj
crypto\engine\eng_fat.obj
crypto\engine\eng_init.obj
crypto\engine\eng_lib.obj
crypto\engine\eng_list.obj
crypto\engine\eng_openssl.obj
crypto\engine\eng_pkey.obj
crypto\engine\eng_rdrand.obj
crypto\engine\eng_table.obj
crypto\engine\tb_asnmth.obj
crypto\engine\tb_cipher.obj
crypto\engine\tb_dh.obj
crypto\engine\tb_digest.obj
crypto\engine\tb_dsa.obj
crypto\engine\tb_eckey.obj
crypto\engine\tb_pkmeth.obj
crypto\engine\tb_rand.obj
crypto\engine\tb_rsa.obj
crypto\err\err.obj
crypto\err\err_all.obj
crypto\err\err_prn.obj
crypto\evp\bio_b64.obj
crypto\evp\bio_enc.obj
crypto\evp\bio_md.obj
crypto\evp\bio_ok.obj
crypto\evp\c_allc.obj
crypto\evp\c_alld.obj
crypto\evp\cmeth_lib.obj
crypto\evp\digest.obj
crypto\evp\e_aes.obj
crypto\evp\e_aes_cbc_hmac_sha1.obj
crypto\evp\e_aes_cbc_hmac_sha256.obj
crypto\evp\e_aria.obj
crypto\evp\e_bf.obj
crypto\evp\e_camellia.obj
crypto\evp\e_cast.obj
crypto\evp\e_chacha20_poly1305.obj
crypto\evp\e_des.obj
crypto\evp\e_des3.obj
crypto\evp\e_idea.obj
crypto\evp\e_null.obj
crypto\evp\e_old.obj
crypto\evp\e_rc2.obj
crypto\evp\e_rc4.obj
crypto\evp\e_rc4_hmac_md5.obj
crypto\evp\e_rc5.obj
crypto\evp\e_seed.obj
crypto\evp\e_sm4.obj
crypto\evp\e_xcbc_d.obj
crypto\evp\encode.obj
crypto\evp\evp_cnf.obj
crypto\evp\evp_enc.obj
crypto\evp\evp_err.obj
crypto\evp\evp_key.obj
crypto\evp\evp_lib.obj
crypto\evp\evp_pbe.obj
crypto\evp\evp_pkey.obj
crypto\evp\m_md2.obj
crypto\evp\m_md4.obj
crypto\evp\m_md5.obj
crypto\evp\m_md5_sha1.obj
crypto\evp\m_mdc2.obj
crypto\evp\m_null.obj
crypto\evp\m_ripemd.obj
crypto\evp\m_sha1.obj
crypto\evp\m_sha3.obj
crypto\evp\m_sigver.obj
crypto\evp\m_wp.obj
crypto\evp\names.obj
crypto\evp\p5_crpt.obj
crypto\evp\p5_crpt2.obj
crypto\evp\p_dec.obj
crypto\evp\p_enc.obj
crypto\evp\p_lib.obj
crypto\evp\p_open.obj
crypto\evp\p_seal.obj
crypto\evp\p_sign.obj
crypto\evp\p_verify.obj
crypto\evp\pbe_scrypt.obj
crypto\evp\pmeth_fn.obj
crypto\evp\pmeth_gn.obj
crypto\evp\pmeth_lib.obj
crypto\ex_data.obj
crypto\hmac\hm_ameth.obj
crypto\hmac\hm_pmeth.obj
crypto\hmac\hmac.obj
crypto\idea\i_cbc.obj
crypto\idea\i_cfb64.obj
crypto\idea\i_ecb.obj
crypto\idea\i_ofb64.obj
crypto\idea\i_skey.obj
crypto\init.obj
crypto\kdf\hkdf.obj
crypto\kdf\kdf_err.obj
crypto\kdf\scrypt.obj
crypto\kdf\tls1_prf.obj
crypto\lhash\lh_stats.obj
crypto\lhash\lhash.obj
crypto\md4\md4_dgst.obj
crypto\md4\md4_one.obj
crypto\md5\md5-x86_64.obj
crypto\md5\md5_dgst.obj
crypto\md5\md5_one.obj
crypto\mdc2\mdc2_one.obj
crypto\mdc2\mdc2dgst.obj
crypto\mem.obj
crypto\mem_dbg.obj
crypto\mem_sec.obj
crypto\modes\aesni-gcm-x86_64.obj
crypto\modes\cbc128.obj
crypto\modes\ccm128.obj
crypto\modes\cfb128.obj
crypto\modes\ctr128.obj
crypto\modes\cts128.obj
crypto\modes\gcm128.obj
crypto\modes\ghash-x86_64.obj
crypto\modes\ocb128.obj
crypto\modes\ofb128.obj
crypto\modes\wrap128.obj
crypto\modes\xts128.obj
crypto\o_dir.obj
crypto\o_fips.obj
crypto\o_fopen.obj
crypto\o_init.obj
crypto\o_str.obj
crypto\o_time.obj
crypto\objects\o_names.obj
crypto\objects\obj_dat.obj
crypto\objects\obj_err.obj
crypto\objects\obj_lib.obj
crypto\objects\obj_xref.obj
crypto\ocsp\ocsp_asn.obj
crypto\ocsp\ocsp_cl.obj
crypto\ocsp\ocsp_err.obj
crypto\ocsp\ocsp_ext.obj
crypto\ocsp\ocsp_ht.obj
crypto\ocsp\ocsp_lib.obj
crypto\ocsp\ocsp_prn.obj
crypto\ocsp\ocsp_srv.obj
crypto\ocsp\ocsp_vfy.obj
crypto\ocsp\v3_ocsp.obj
crypto\pem\pem_all.obj
crypto\pem\pem_err.obj
crypto\pem\pem_info.obj
crypto\pem\pem_lib.obj
crypto\pem\pem_oth.obj
crypto\pem\pem_pk8.obj
crypto\pem\pem_pkey.obj
crypto\pem\pem_sign.obj
crypto\pem\pem_x509.obj
crypto\pem\pem_xaux.obj
crypto\pem\pvkfmt.obj
crypto\pkcs12\p12_add.obj
crypto\pkcs12\p12_asn.obj
crypto\pkcs12\p12_attr.obj
crypto\pkcs12\p12_crpt.obj
crypto\pkcs12\p12_crt.obj
crypto\pkcs12\p12_decr.obj
crypto\pkcs12\p12_init.obj
crypto\pkcs12\p12_key.obj
crypto\pkcs12\p12_kiss.obj
crypto\pkcs12\p12_mutl.obj
crypto\pkcs12\p12_npas.obj
crypto\pkcs12\p12_p8d.obj
crypto\pkcs12\p12_p8e.obj
crypto\pkcs12\p12_sbag.obj
crypto\pkcs12\p12_utl.obj
crypto\pkcs12\pk12err.obj
crypto\pkcs7\bio_pk7.obj
crypto\pkcs7\pk7_asn1.obj
crypto\pkcs7\pk7_attr.obj
crypto\pkcs7\pk7_doit.obj
crypto\pkcs7\pk7_lib.obj
crypto\pkcs7\pk7_mime.obj
crypto\pkcs7\pk7_smime.obj
crypto\pkcs7\pkcs7err.obj
crypto\poly1305\poly1305-x86_64.obj
crypto\poly1305\poly1305.obj
crypto\poly1305\poly1305_ameth.obj
crypto\poly1305\poly1305_pmeth.obj
crypto\rand\drbg_lib.obj
crypto\rand\drbg_rand.obj
crypto\rand\rand_egd.obj
crypto\rand\rand_err.obj
crypto\rand\rand_lib.obj
crypto\rand\rand_unix.obj
crypto\rand\rand_vms.obj
crypto\rand\rand_win.obj
crypto\rand\randfile.obj
crypto\rc2\rc2_cbc.obj
crypto\rc2\rc2_ecb.obj
crypto\rc2\rc2_skey.obj
crypto\rc2\rc2cfb64.obj
crypto\rc2\rc2ofb64.obj
crypto\rc4\rc4-md5-x86_64.obj
crypto\rc4\rc4-x86_64.obj
crypto\ripemd\rmd_dgst.obj
crypto\ripemd\rmd_one.obj
crypto\rsa\rsa_ameth.obj
crypto\rsa\rsa_asn1.obj
crypto\rsa\rsa_chk.obj
crypto\rsa\rsa_crpt.obj
crypto\rsa\rsa_depr.obj
crypto\rsa\rsa_err.obj
crypto\rsa\rsa_gen.obj
crypto\rsa\rsa_lib.obj
crypto\rsa\rsa_meth.obj
crypto\rsa\rsa_mp.obj
crypto\rsa\rsa_none.obj
crypto\rsa\rsa_oaep.obj
crypto\rsa\rsa_ossl.obj
crypto\rsa\rsa_pk1.obj
crypto\rsa\rsa_pmeth.obj
crypto\rsa\rsa_prn.obj
crypto\rsa\rsa_pss.obj
crypto\rsa\rsa_saos.obj
crypto\rsa\rsa_sign.obj
crypto\rsa\rsa_ssl.obj
crypto\rsa\rsa_x931.obj
crypto\rsa\rsa_x931g.obj
crypto\seed\seed.obj
crypto\seed\seed_cbc.obj
crypto\seed\seed_cfb.obj
crypto\seed\seed_ecb.obj
crypto\seed\seed_ofb.obj
crypto\sha\keccak1600.obj
crypto\sha\sha1-mb-x86_64.obj
crypto\sha\sha1-x86_64.obj
crypto\sha\sha1_one.obj
crypto\sha\sha1dgst.obj
crypto\sha\sha256-mb-x86_64.obj
crypto\sha\sha256-x86_64.obj
crypto\sha\sha256.obj
crypto\sha\sha512-x86_64.obj
crypto\sha\sha512.obj
crypto\siphash\siphash.obj
crypto\siphash\siphash_ameth.obj
crypto\siphash\siphash_pmeth.obj
crypto\sm3\m_sm3.obj
crypto\sm3\sm3.obj
crypto\sm4\sm4.obj
crypto\srp\srp_lib.obj
crypto\srp\srp_vfy.obj
crypto\stack\stack.obj
crypto\store\loader_file.obj
crypto\store\store_err.obj
crypto\store\store_init.obj
crypto\store\store_lib.obj
crypto\store\store_register.obj
crypto\store\store_strings.obj
crypto\threads_none.obj
crypto\threads_pthread.obj
crypto\threads_win.obj
crypto\ts\ts_asn1.obj
crypto\ts\ts_conf.obj
crypto\ts\ts_err.obj
crypto\ts\ts_lib.obj
crypto\ts\ts_req_print.obj
crypto\ts\ts_req_utils.obj
crypto\ts\ts_rsp_print.obj
crypto\ts\ts_rsp_sign.obj
crypto\ts\ts_rsp_utils.obj
crypto\ts\ts_rsp_verify.obj
crypto\ts\ts_verify_ctx.obj
crypto\txt_db\txt_db.obj
crypto\ui\ui_err.obj
crypto\ui\ui_lib.obj
crypto\ui\ui_null.obj
crypto\ui\ui_openssl.obj
crypto\ui\ui_util.obj
crypto\uid.obj
crypto\uplink-x86_64.obj
crypto\whrlpool\wp-x86_64.obj
crypto\whrlpool\wp_dgst.obj
crypto\x509\by_dir.obj
crypto\x509\by_file.obj
crypto\x509\t_crl.obj
crypto\x509\t_req.obj
crypto\x509\t_x509.obj
crypto\x509\x509_att.obj
crypto\x509\x509_cmp.obj
crypto\x509\x509_d2.obj
crypto\x509\x509_def.obj
crypto\x509\x509_err.obj
crypto\x509\x509_ext.obj
crypto\x509\x509_lu.obj
crypto\x509\x509_obj.obj
crypto\x509\x509_r2x.obj
crypto\x509\x509_req.obj
crypto\x509\x509_set.obj
crypto\x509\x509_trs.obj
crypto\x509\x509_txt.obj
crypto\x509\x509_v3.obj
crypto\x509\x509_vfy.obj
crypto\x509\x509_vpm.obj
crypto\x509\x509cset.obj
crypto\x509\x509name.obj
crypto\x509\x509rset.obj
crypto\x509\x509spki.obj
crypto\x509\x509type.obj
crypto\x509\x_all.obj
crypto\x509\x_attrib.obj
crypto\x509\x_crl.obj
crypto\x509\x_exten.obj
crypto\x509\x_name.obj
crypto\x509\x_pubkey.obj
crypto\x509\x_req.obj
crypto\x509\x_x509.obj
crypto\x509\x_x509a.obj
crypto\x509v3\pcy_cache.obj
crypto\x509v3\pcy_data.obj
crypto\x509v3\pcy_lib.obj
crypto\x509v3\pcy_map.obj
crypto\x509v3\pcy_node.obj
crypto\x509v3\pcy_tree.obj
crypto\x509v3\v3_addr.obj
crypto\x509v3\v3_admis.obj
crypto\x509v3\v3_akey.obj
crypto\x509v3\v3_akeya.obj
crypto\x509v3\v3_alt.obj
crypto\x509v3\v3_asid.obj
crypto\x509v3\v3_bcons.obj
crypto\x509v3\v3_bitst.obj
crypto\x509v3\v3_conf.obj
crypto\x509v3\v3_cpols.obj
crypto\x509v3\v3_crld.obj
crypto\x509v3\v3_enum.obj
crypto\x509v3\v3_extku.obj
crypto\x509v3\v3_genn.obj
crypto\x509v3\v3_ia5.obj
crypto\x509v3\v3_info.obj
crypto\x509v3\v3_int.obj
crypto\x509v3\v3_lib.obj
crypto\x509v3\v3_ncons.obj
crypto\x509v3\v3_pci.obj
crypto\x509v3\v3_pcia.obj
crypto\x509v3\v3_pcons.obj
crypto\x509v3\v3_pku.obj
crypto\x509v3\v3_pmaps.obj
crypto\x509v3\v3_prn.obj
crypto\x509v3\v3_purp.obj
crypto\x509v3\v3_skey.obj
crypto\x509v3\v3_sxnet.obj
crypto\x509v3\v3_tlsf.obj
crypto\x509v3\v3_utl.obj
crypto\x509v3\v3err.obj
crypto\x86_64cpuid.obj
ms\uplink.obj
crypto\dllmain.obj libcrypto-1_1-x64.res $(EX_LIBS)
<<
	IF EXIST libcrypto-1_1-x64.dll.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)libcrypto-1_1-x64.dll.manifest $(MTOUTFLAG)libcrypto-1_1-x64.dll
	IF EXIST apps\libcrypto-1_1-x64.dll DEL /Q /F apps\libcrypto-1_1-x64.dll
	IF EXIST test\libcrypto-1_1-x64.dll DEL /Q /F test\libcrypto-1_1-x64.dll
	IF EXIST fuzz\libcrypto-1_1-x64.dll DEL /Q /F fuzz\libcrypto-1_1-x64.dll
	COPY libcrypto-1_1-x64.dll apps
	COPY libcrypto-1_1-x64.dll test
	COPY libcrypto-1_1-x64.dll fuzz
crypto\dllmain.obj: "crypto\dllmain.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dllmain.c"
crypto\aes\aes-x86_64.obj: "crypto\aes\aes-x86_64.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\aes\aes-x86_64.asm"
crypto\aes\aes-x86_64.asm: "crypto\aes\asm\aes-x86_64.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\aes\asm\aes-x86_64.pl" "$(PERLASM_SCHEME)" $@
crypto\aes\aes_cfb.obj: "crypto\aes\aes_cfb.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\aes\aes_cfb.c"
crypto\aes\aes_ecb.obj: "crypto\aes\aes_ecb.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\aes\aes_ecb.c"
crypto\aes\aes_ige.obj: "crypto\aes\aes_ige.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\aes\aes_ige.c"
crypto\aes\aes_misc.obj: "crypto\aes\aes_misc.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\aes\aes_misc.c"
crypto\aes\aes_ofb.obj: "crypto\aes\aes_ofb.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\aes\aes_ofb.c"
crypto\aes\aes_wrap.obj: "crypto\aes\aes_wrap.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\aes\aes_wrap.c"
crypto\aes\aesni-mb-x86_64.obj: "crypto\aes\aesni-mb-x86_64.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\aes\aesni-mb-x86_64.asm"
crypto\aes\aesni-mb-x86_64.asm: "crypto\aes\asm\aesni-mb-x86_64.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\aes\asm\aesni-mb-x86_64.pl" "$(PERLASM_SCHEME)" $@
crypto\aes\aesni-sha1-x86_64.obj: "crypto\aes\aesni-sha1-x86_64.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\aes\aesni-sha1-x86_64.asm"
crypto\aes\aesni-sha1-x86_64.asm: "crypto\aes\asm\aesni-sha1-x86_64.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\aes\asm\aesni-sha1-x86_64.pl" "$(PERLASM_SCHEME)" $@
crypto\aes\aesni-sha256-x86_64.obj: "crypto\aes\aesni-sha256-x86_64.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\aes\aesni-sha256-x86_64.asm"
crypto\aes\aesni-sha256-x86_64.asm: "crypto\aes\asm\aesni-sha256-x86_64.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\aes\asm\aesni-sha256-x86_64.pl" "$(PERLASM_SCHEME)" $@
crypto\aes\aesni-x86_64.obj: "crypto\aes\aesni-x86_64.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\aes\aesni-x86_64.asm"
crypto\aes\aesni-x86_64.asm: "crypto\aes\asm\aesni-x86_64.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\aes\asm\aesni-x86_64.pl" "$(PERLASM_SCHEME)" $@
crypto\aes\bsaes-x86_64.obj: "crypto\aes\bsaes-x86_64.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\aes\bsaes-x86_64.asm"
crypto\aes\bsaes-x86_64.asm: "crypto\aes\asm\bsaes-x86_64.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\aes\asm\bsaes-x86_64.pl" "$(PERLASM_SCHEME)" $@
crypto\aes\vpaes-x86_64.obj: "crypto\aes\vpaes-x86_64.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\aes\vpaes-x86_64.asm"
crypto\aes\vpaes-x86_64.asm: "crypto\aes\asm\vpaes-x86_64.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\aes\asm\vpaes-x86_64.pl" "$(PERLASM_SCHEME)" $@
crypto\asn1\a_bitstr.obj: "crypto\asn1\a_bitstr.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\a_bitstr.c"
crypto\asn1\a_d2i_fp.obj: "crypto\asn1\a_d2i_fp.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\a_d2i_fp.c"
crypto\asn1\a_digest.obj: "crypto\asn1\a_digest.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\a_digest.c"
crypto\asn1\a_dup.obj: "crypto\asn1\a_dup.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\a_dup.c"
crypto\asn1\a_gentm.obj: "crypto\asn1\a_gentm.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\a_gentm.c"
crypto\asn1\a_i2d_fp.obj: "crypto\asn1\a_i2d_fp.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\a_i2d_fp.c"
crypto\asn1\a_int.obj: "crypto\asn1\a_int.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\a_int.c"
crypto\asn1\a_mbstr.obj: "crypto\asn1\a_mbstr.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\a_mbstr.c"
crypto\asn1\a_object.obj: "crypto\asn1\a_object.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\a_object.c"
crypto\asn1\a_octet.obj: "crypto\asn1\a_octet.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\a_octet.c"
crypto\asn1\a_print.obj: "crypto\asn1\a_print.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\a_print.c"
crypto\asn1\a_sign.obj: "crypto\asn1\a_sign.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\a_sign.c"
crypto\asn1\a_strex.obj: "crypto\asn1\a_strex.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\a_strex.c"
crypto\asn1\a_strnid.obj: "crypto\asn1\a_strnid.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\a_strnid.c"
crypto\asn1\a_time.obj: "crypto\asn1\a_time.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\a_time.c"
crypto\asn1\a_type.obj: "crypto\asn1\a_type.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\a_type.c"
crypto\asn1\a_utctm.obj: "crypto\asn1\a_utctm.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\a_utctm.c"
crypto\asn1\a_utf8.obj: "crypto\asn1\a_utf8.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\a_utf8.c"
crypto\asn1\a_verify.obj: "crypto\asn1\a_verify.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\a_verify.c"
crypto\asn1\ameth_lib.obj: "crypto\asn1\ameth_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\ameth_lib.c"
crypto\asn1\asn1_err.obj: "crypto\asn1\asn1_err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\asn1_err.c"
crypto\asn1\asn1_gen.obj: "crypto\asn1\asn1_gen.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\asn1_gen.c"
crypto\asn1\asn1_item_list.obj: "crypto\asn1\asn1_item_list.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\asn1_item_list.c"
crypto\asn1\asn1_lib.obj: "crypto\asn1\asn1_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\asn1_lib.c"
crypto\asn1\asn1_par.obj: "crypto\asn1\asn1_par.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\asn1_par.c"
crypto\asn1\asn_mime.obj: "crypto\asn1\asn_mime.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\asn_mime.c"
crypto\asn1\asn_moid.obj: "crypto\asn1\asn_moid.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\asn_moid.c"
crypto\asn1\asn_mstbl.obj: "crypto\asn1\asn_mstbl.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\asn_mstbl.c"
crypto\asn1\asn_pack.obj: "crypto\asn1\asn_pack.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\asn_pack.c"
crypto\asn1\bio_asn1.obj: "crypto\asn1\bio_asn1.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\bio_asn1.c"
crypto\asn1\bio_ndef.obj: "crypto\asn1\bio_ndef.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\bio_ndef.c"
crypto\asn1\d2i_pr.obj: "crypto\asn1\d2i_pr.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\d2i_pr.c"
crypto\asn1\d2i_pu.obj: "crypto\asn1\d2i_pu.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\d2i_pu.c"
crypto\asn1\evp_asn1.obj: "crypto\asn1\evp_asn1.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\evp_asn1.c"
crypto\asn1\f_int.obj: "crypto\asn1\f_int.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\f_int.c"
crypto\asn1\f_string.obj: "crypto\asn1\f_string.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\f_string.c"
crypto\asn1\i2d_pr.obj: "crypto\asn1\i2d_pr.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\i2d_pr.c"
crypto\asn1\i2d_pu.obj: "crypto\asn1\i2d_pu.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\i2d_pu.c"
crypto\asn1\n_pkey.obj: "crypto\asn1\n_pkey.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\n_pkey.c"
crypto\asn1\nsseq.obj: "crypto\asn1\nsseq.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\nsseq.c"
crypto\asn1\p5_pbe.obj: "crypto\asn1\p5_pbe.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\p5_pbe.c"
crypto\asn1\p5_pbev2.obj: "crypto\asn1\p5_pbev2.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\p5_pbev2.c"
crypto\asn1\p5_scrypt.obj: "crypto\asn1\p5_scrypt.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\p5_scrypt.c"
crypto\asn1\p8_pkey.obj: "crypto\asn1\p8_pkey.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\p8_pkey.c"
crypto\asn1\t_bitst.obj: "crypto\asn1\t_bitst.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\t_bitst.c"
crypto\asn1\t_pkey.obj: "crypto\asn1\t_pkey.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\t_pkey.c"
crypto\asn1\t_spki.obj: "crypto\asn1\t_spki.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\t_spki.c"
crypto\asn1\tasn_dec.obj: "crypto\asn1\tasn_dec.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\tasn_dec.c"
crypto\asn1\tasn_enc.obj: "crypto\asn1\tasn_enc.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\tasn_enc.c"
crypto\asn1\tasn_fre.obj: "crypto\asn1\tasn_fre.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\tasn_fre.c"
crypto\asn1\tasn_new.obj: "crypto\asn1\tasn_new.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\tasn_new.c"
crypto\asn1\tasn_prn.obj: "crypto\asn1\tasn_prn.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\tasn_prn.c"
crypto\asn1\tasn_scn.obj: "crypto\asn1\tasn_scn.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\tasn_scn.c"
crypto\asn1\tasn_typ.obj: "crypto\asn1\tasn_typ.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\tasn_typ.c"
crypto\asn1\tasn_utl.obj: "crypto\asn1\tasn_utl.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\tasn_utl.c"
crypto\asn1\x_algor.obj: "crypto\asn1\x_algor.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\x_algor.c"
crypto\asn1\x_bignum.obj: "crypto\asn1\x_bignum.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\x_bignum.c"
crypto\asn1\x_info.obj: "crypto\asn1\x_info.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\x_info.c"
crypto\asn1\x_int64.obj: "crypto\asn1\x_int64.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\x_int64.c"
crypto\asn1\x_long.obj: "crypto\asn1\x_long.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\x_long.c"
crypto\asn1\x_pkey.obj: "crypto\asn1\x_pkey.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\x_pkey.c"
crypto\asn1\x_sig.obj: "crypto\asn1\x_sig.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\x_sig.c"
crypto\asn1\x_spki.obj: "crypto\asn1\x_spki.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\x_spki.c"
crypto\asn1\x_val.obj: "crypto\asn1\x_val.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\asn1\x_val.c"
crypto\async\arch\async_null.obj: "crypto\async\arch\async_null.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\async\arch\async_null.c"
crypto\async\arch\async_posix.obj: "crypto\async\arch\async_posix.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\async\arch\async_posix.c"
crypto\async\arch\async_win.obj: "crypto\async\arch\async_win.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\async\arch\async_win.c"
crypto\async\async.obj: "crypto\async\async.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\async\async.c"
crypto\async\async_err.obj: "crypto\async\async_err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\async\async_err.c"
crypto\async\async_wait.obj: "crypto\async\async_wait.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\async\async_wait.c"
crypto\bf\bf_cfb64.obj: "crypto\bf\bf_cfb64.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bf\bf_cfb64.c"
crypto\bf\bf_ecb.obj: "crypto\bf\bf_ecb.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bf\bf_ecb.c"
crypto\bf\bf_enc.obj: "crypto\bf\bf_enc.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bf\bf_enc.c"
crypto\bf\bf_ofb64.obj: "crypto\bf\bf_ofb64.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bf\bf_ofb64.c"
crypto\bf\bf_skey.obj: "crypto\bf\bf_skey.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bf\bf_skey.c"
crypto\bio\b_addr.obj: "crypto\bio\b_addr.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bio\b_addr.c"
crypto\bio\b_dump.obj: "crypto\bio\b_dump.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bio\b_dump.c"
crypto\bio\b_print.obj: "crypto\bio\b_print.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bio\b_print.c"
crypto\bio\b_sock.obj: "crypto\bio\b_sock.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bio\b_sock.c"
crypto\bio\b_sock2.obj: "crypto\bio\b_sock2.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bio\b_sock2.c"
crypto\bio\bf_buff.obj: "crypto\bio\bf_buff.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bio\bf_buff.c"
crypto\bio\bf_lbuf.obj: "crypto\bio\bf_lbuf.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bio\bf_lbuf.c"
crypto\bio\bf_nbio.obj: "crypto\bio\bf_nbio.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bio\bf_nbio.c"
crypto\bio\bf_null.obj: "crypto\bio\bf_null.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bio\bf_null.c"
crypto\bio\bio_cb.obj: "crypto\bio\bio_cb.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bio\bio_cb.c"
crypto\bio\bio_err.obj: "crypto\bio\bio_err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bio\bio_err.c"
crypto\bio\bio_lib.obj: "crypto\bio\bio_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bio\bio_lib.c"
crypto\bio\bio_meth.obj: "crypto\bio\bio_meth.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bio\bio_meth.c"
crypto\bio\bss_acpt.obj: "crypto\bio\bss_acpt.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bio\bss_acpt.c"
crypto\bio\bss_bio.obj: "crypto\bio\bss_bio.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bio\bss_bio.c"
crypto\bio\bss_conn.obj: "crypto\bio\bss_conn.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bio\bss_conn.c"
crypto\bio\bss_dgram.obj: "crypto\bio\bss_dgram.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bio\bss_dgram.c"
crypto\bio\bss_fd.obj: "crypto\bio\bss_fd.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bio\bss_fd.c"
crypto\bio\bss_file.obj: "crypto\bio\bss_file.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bio\bss_file.c"
crypto\bio\bss_log.obj: "crypto\bio\bss_log.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bio\bss_log.c"
crypto\bio\bss_mem.obj: "crypto\bio\bss_mem.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bio\bss_mem.c"
crypto\bio\bss_null.obj: "crypto\bio\bss_null.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bio\bss_null.c"
crypto\bio\bss_sock.obj: "crypto\bio\bss_sock.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bio\bss_sock.c"
crypto\blake2\blake2b.obj: "crypto\blake2\blake2b.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\blake2\blake2b.c"
crypto\blake2\blake2s.obj: "crypto\blake2\blake2s.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\blake2\blake2s.c"
crypto\blake2\m_blake2b.obj: "crypto\blake2\m_blake2b.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\blake2\m_blake2b.c"
crypto\blake2\m_blake2s.obj: "crypto\blake2\m_blake2s.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\blake2\m_blake2s.c"
crypto\bn\bn_add.obj: "crypto\bn\bn_add.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_add.c"
crypto\bn\bn_asm.obj: "crypto\bn\bn_asm.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_asm.c"
crypto\bn\bn_blind.obj: "crypto\bn\bn_blind.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_blind.c"
crypto\bn\bn_const.obj: "crypto\bn\bn_const.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_const.c"
crypto\bn\bn_ctx.obj: "crypto\bn\bn_ctx.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_ctx.c"
crypto\bn\bn_depr.obj: "crypto\bn\bn_depr.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_depr.c"
crypto\bn\bn_dh.obj: "crypto\bn\bn_dh.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_dh.c"
crypto\bn\bn_div.obj: "crypto\bn\bn_div.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_div.c"
crypto\bn\bn_err.obj: "crypto\bn\bn_err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_err.c"
crypto\bn\bn_exp.obj: "crypto\bn\bn_exp.c"
	$(CC)  /I "." /I "crypto\include" /I "include" /I "crypto" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_exp.c"
crypto\bn\bn_exp2.obj: "crypto\bn\bn_exp2.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_exp2.c"
crypto\bn\bn_gcd.obj: "crypto\bn\bn_gcd.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_gcd.c"
crypto\bn\bn_gf2m.obj: "crypto\bn\bn_gf2m.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_gf2m.c"
crypto\bn\bn_intern.obj: "crypto\bn\bn_intern.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_intern.c"
crypto\bn\bn_kron.obj: "crypto\bn\bn_kron.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_kron.c"
crypto\bn\bn_lib.obj: "crypto\bn\bn_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_lib.c"
crypto\bn\bn_mod.obj: "crypto\bn\bn_mod.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_mod.c"
crypto\bn\bn_mont.obj: "crypto\bn\bn_mont.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_mont.c"
crypto\bn\bn_mpi.obj: "crypto\bn\bn_mpi.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_mpi.c"
crypto\bn\bn_mul.obj: "crypto\bn\bn_mul.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_mul.c"
crypto\bn\bn_nist.obj: "crypto\bn\bn_nist.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_nist.c"
crypto\bn\bn_prime.obj: "crypto\bn\bn_prime.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_prime.c"
crypto\bn\bn_print.obj: "crypto\bn\bn_print.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_print.c"
crypto\bn\bn_rand.obj: "crypto\bn\bn_rand.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_rand.c"
crypto\bn\bn_recp.obj: "crypto\bn\bn_recp.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_recp.c"
crypto\bn\bn_shift.obj: "crypto\bn\bn_shift.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_shift.c"
crypto\bn\bn_sqr.obj: "crypto\bn\bn_sqr.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_sqr.c"
crypto\bn\bn_sqrt.obj: "crypto\bn\bn_sqrt.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_sqrt.c"
crypto\bn\bn_srp.obj: "crypto\bn\bn_srp.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_srp.c"
crypto\bn\bn_word.obj: "crypto\bn\bn_word.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_word.c"
crypto\bn\bn_x931p.obj: "crypto\bn\bn_x931p.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\bn_x931p.c"
crypto\bn\rsaz-avx2.obj: "crypto\bn\rsaz-avx2.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\bn\rsaz-avx2.asm"
crypto\bn\rsaz-avx2.asm: "crypto\bn\asm\rsaz-avx2.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\bn\asm\rsaz-avx2.pl" "$(PERLASM_SCHEME)" $@
crypto\bn\rsaz-x86_64.obj: "crypto\bn\rsaz-x86_64.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\bn\rsaz-x86_64.asm"
crypto\bn\rsaz-x86_64.asm: "crypto\bn\asm\rsaz-x86_64.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\bn\asm\rsaz-x86_64.pl" "$(PERLASM_SCHEME)" $@
crypto\bn\rsaz_exp.obj: "crypto\bn\rsaz_exp.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\bn\rsaz_exp.c"
crypto\bn\x86_64-gf2m.obj: "crypto\bn\x86_64-gf2m.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\bn\x86_64-gf2m.asm"
crypto\bn\x86_64-gf2m.asm: "crypto\bn\asm\x86_64-gf2m.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\bn\asm\x86_64-gf2m.pl" "$(PERLASM_SCHEME)" $@
crypto\bn\x86_64-mont.obj: "crypto\bn\x86_64-mont.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\bn\x86_64-mont.asm"
crypto\bn\x86_64-mont.asm: "crypto\bn\asm\x86_64-mont.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\bn\asm\x86_64-mont.pl" "$(PERLASM_SCHEME)" $@
crypto\bn\x86_64-mont5.obj: "crypto\bn\x86_64-mont5.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\bn\x86_64-mont5.asm"
crypto\bn\x86_64-mont5.asm: "crypto\bn\asm\x86_64-mont5.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\bn\asm\x86_64-mont5.pl" "$(PERLASM_SCHEME)" $@
crypto\buffer\buf_err.obj: "crypto\buffer\buf_err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\buffer\buf_err.c"
crypto\buffer\buffer.obj: "crypto\buffer\buffer.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\buffer\buffer.c"
crypto\camellia\cmll-x86_64.obj: "crypto\camellia\cmll-x86_64.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\camellia\cmll-x86_64.asm"
crypto\camellia\cmll-x86_64.asm: "crypto\camellia\asm\cmll-x86_64.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\camellia\asm\cmll-x86_64.pl" "$(PERLASM_SCHEME)" $@
crypto\camellia\cmll_cfb.obj: "crypto\camellia\cmll_cfb.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\camellia\cmll_cfb.c"
crypto\camellia\cmll_ctr.obj: "crypto\camellia\cmll_ctr.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\camellia\cmll_ctr.c"
crypto\camellia\cmll_ecb.obj: "crypto\camellia\cmll_ecb.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\camellia\cmll_ecb.c"
crypto\camellia\cmll_misc.obj: "crypto\camellia\cmll_misc.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\camellia\cmll_misc.c"
crypto\camellia\cmll_ofb.obj: "crypto\camellia\cmll_ofb.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\camellia\cmll_ofb.c"
crypto\cast\c_cfb64.obj: "crypto\cast\c_cfb64.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\cast\c_cfb64.c"
crypto\cast\c_ecb.obj: "crypto\cast\c_ecb.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\cast\c_ecb.c"
crypto\cast\c_enc.obj: "crypto\cast\c_enc.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\cast\c_enc.c"
crypto\cast\c_ofb64.obj: "crypto\cast\c_ofb64.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\cast\c_ofb64.c"
crypto\cast\c_skey.obj: "crypto\cast\c_skey.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\cast\c_skey.c"
crypto\chacha\chacha-x86_64.obj: "crypto\chacha\chacha-x86_64.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\chacha\chacha-x86_64.asm"
crypto\chacha\chacha-x86_64.asm: "crypto\chacha\asm\chacha-x86_64.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\chacha\asm\chacha-x86_64.pl" "$(PERLASM_SCHEME)" $@
crypto\cmac\cm_ameth.obj: "crypto\cmac\cm_ameth.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\cmac\cm_ameth.c"
crypto\cmac\cm_pmeth.obj: "crypto\cmac\cm_pmeth.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\cmac\cm_pmeth.c"
crypto\cmac\cmac.obj: "crypto\cmac\cmac.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\cmac\cmac.c"
crypto\cms\cms_asn1.obj: "crypto\cms\cms_asn1.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\cms\cms_asn1.c"
crypto\cms\cms_att.obj: "crypto\cms\cms_att.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\cms\cms_att.c"
crypto\cms\cms_cd.obj: "crypto\cms\cms_cd.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\cms\cms_cd.c"
crypto\cms\cms_dd.obj: "crypto\cms\cms_dd.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\cms\cms_dd.c"
crypto\cms\cms_enc.obj: "crypto\cms\cms_enc.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\cms\cms_enc.c"
crypto\cms\cms_env.obj: "crypto\cms\cms_env.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\cms\cms_env.c"
crypto\cms\cms_err.obj: "crypto\cms\cms_err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\cms\cms_err.c"
crypto\cms\cms_ess.obj: "crypto\cms\cms_ess.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\cms\cms_ess.c"
crypto\cms\cms_io.obj: "crypto\cms\cms_io.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\cms\cms_io.c"
crypto\cms\cms_kari.obj: "crypto\cms\cms_kari.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\cms\cms_kari.c"
crypto\cms\cms_lib.obj: "crypto\cms\cms_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\cms\cms_lib.c"
crypto\cms\cms_pwri.obj: "crypto\cms\cms_pwri.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\cms\cms_pwri.c"
crypto\cms\cms_sd.obj: "crypto\cms\cms_sd.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\cms\cms_sd.c"
crypto\cms\cms_smime.obj: "crypto\cms\cms_smime.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\cms\cms_smime.c"
crypto\comp\c_zlib.obj: "crypto\comp\c_zlib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\comp\c_zlib.c"
crypto\comp\comp_err.obj: "crypto\comp\comp_err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\comp\comp_err.c"
crypto\comp\comp_lib.obj: "crypto\comp\comp_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\comp\comp_lib.c"
crypto\conf\conf_api.obj: "crypto\conf\conf_api.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\conf\conf_api.c"
crypto\conf\conf_def.obj: "crypto\conf\conf_def.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\conf\conf_def.c"
crypto\conf\conf_err.obj: "crypto\conf\conf_err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\conf\conf_err.c"
crypto\conf\conf_lib.obj: "crypto\conf\conf_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\conf\conf_lib.c"
crypto\conf\conf_mall.obj: "crypto\conf\conf_mall.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\conf\conf_mall.c"
crypto\conf\conf_mod.obj: "crypto\conf\conf_mod.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\conf\conf_mod.c"
crypto\conf\conf_sap.obj: "crypto\conf\conf_sap.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\conf\conf_sap.c"
crypto\cpt_err.obj: "crypto\cpt_err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\cpt_err.c"
crypto\cryptlib.obj: "crypto\cryptlib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\cryptlib.c"
crypto\ct\ct_b64.obj: "crypto\ct\ct_b64.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ct\ct_b64.c"
crypto\ct\ct_err.obj: "crypto\ct\ct_err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ct\ct_err.c"
crypto\ct\ct_log.obj: "crypto\ct\ct_log.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ct\ct_log.c"
crypto\ct\ct_oct.obj: "crypto\ct\ct_oct.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ct\ct_oct.c"
crypto\ct\ct_policy.obj: "crypto\ct\ct_policy.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ct\ct_policy.c"
crypto\ct\ct_prn.obj: "crypto\ct\ct_prn.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ct\ct_prn.c"
crypto\ct\ct_sct.obj: "crypto\ct\ct_sct.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ct\ct_sct.c"
crypto\ct\ct_sct_ctx.obj: "crypto\ct\ct_sct_ctx.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ct\ct_sct_ctx.c"
crypto\ct\ct_vfy.obj: "crypto\ct\ct_vfy.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ct\ct_vfy.c"
crypto\ct\ct_x509v3.obj: "crypto\ct\ct_x509v3.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ct\ct_x509v3.c"
crypto\ctype.obj: "crypto\ctype.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ctype.c"
crypto\cversion.obj: "crypto\cversion.c" "crypto\buildinf.h"
	$(CC)  /I "." /I "crypto\include" /I "include" /I "crypto" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\cversion.c"
crypto\buildinf.h: "util\mkbuildinf.pl" "configdata.pm"
	"$(PERL)" "util\mkbuildinf.pl" ""$(CC)" "$(CFLAGS_Q)"" ""$(PLATFORM)"" > $@
crypto\des\cbc_cksm.obj: "crypto\des\cbc_cksm.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\des\cbc_cksm.c"
crypto\des\cbc_enc.obj: "crypto\des\cbc_enc.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\des\cbc_enc.c"
crypto\des\cfb64ede.obj: "crypto\des\cfb64ede.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\des\cfb64ede.c"
crypto\des\cfb64enc.obj: "crypto\des\cfb64enc.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\des\cfb64enc.c"
crypto\des\cfb_enc.obj: "crypto\des\cfb_enc.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\des\cfb_enc.c"
crypto\des\des_enc.obj: "crypto\des\des_enc.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\des\des_enc.c"
crypto\des\ecb3_enc.obj: "crypto\des\ecb3_enc.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\des\ecb3_enc.c"
crypto\des\ecb_enc.obj: "crypto\des\ecb_enc.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\des\ecb_enc.c"
crypto\des\fcrypt.obj: "crypto\des\fcrypt.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\des\fcrypt.c"
crypto\des\fcrypt_b.obj: "crypto\des\fcrypt_b.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\des\fcrypt_b.c"
crypto\des\ofb64ede.obj: "crypto\des\ofb64ede.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\des\ofb64ede.c"
crypto\des\ofb64enc.obj: "crypto\des\ofb64enc.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\des\ofb64enc.c"
crypto\des\ofb_enc.obj: "crypto\des\ofb_enc.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\des\ofb_enc.c"
crypto\des\pcbc_enc.obj: "crypto\des\pcbc_enc.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\des\pcbc_enc.c"
crypto\des\qud_cksm.obj: "crypto\des\qud_cksm.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\des\qud_cksm.c"
crypto\des\rand_key.obj: "crypto\des\rand_key.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\des\rand_key.c"
crypto\des\set_key.obj: "crypto\des\set_key.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\des\set_key.c"
crypto\des\str2key.obj: "crypto\des\str2key.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\des\str2key.c"
crypto\des\xcbc_enc.obj: "crypto\des\xcbc_enc.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\des\xcbc_enc.c"
crypto\dh\dh_ameth.obj: "crypto\dh\dh_ameth.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dh\dh_ameth.c"
crypto\dh\dh_asn1.obj: "crypto\dh\dh_asn1.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dh\dh_asn1.c"
crypto\dh\dh_check.obj: "crypto\dh\dh_check.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dh\dh_check.c"
crypto\dh\dh_depr.obj: "crypto\dh\dh_depr.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dh\dh_depr.c"
crypto\dh\dh_err.obj: "crypto\dh\dh_err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dh\dh_err.c"
crypto\dh\dh_gen.obj: "crypto\dh\dh_gen.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dh\dh_gen.c"
crypto\dh\dh_kdf.obj: "crypto\dh\dh_kdf.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dh\dh_kdf.c"
crypto\dh\dh_key.obj: "crypto\dh\dh_key.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dh\dh_key.c"
crypto\dh\dh_lib.obj: "crypto\dh\dh_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dh\dh_lib.c"
crypto\dh\dh_meth.obj: "crypto\dh\dh_meth.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dh\dh_meth.c"
crypto\dh\dh_pmeth.obj: "crypto\dh\dh_pmeth.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dh\dh_pmeth.c"
crypto\dh\dh_prn.obj: "crypto\dh\dh_prn.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dh\dh_prn.c"
crypto\dh\dh_rfc5114.obj: "crypto\dh\dh_rfc5114.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dh\dh_rfc5114.c"
crypto\dh\dh_rfc7919.obj: "crypto\dh\dh_rfc7919.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dh\dh_rfc7919.c"
crypto\dsa\dsa_ameth.obj: "crypto\dsa\dsa_ameth.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dsa\dsa_ameth.c"
crypto\dsa\dsa_asn1.obj: "crypto\dsa\dsa_asn1.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dsa\dsa_asn1.c"
crypto\dsa\dsa_depr.obj: "crypto\dsa\dsa_depr.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dsa\dsa_depr.c"
crypto\dsa\dsa_err.obj: "crypto\dsa\dsa_err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dsa\dsa_err.c"
crypto\dsa\dsa_gen.obj: "crypto\dsa\dsa_gen.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dsa\dsa_gen.c"
crypto\dsa\dsa_key.obj: "crypto\dsa\dsa_key.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dsa\dsa_key.c"
crypto\dsa\dsa_lib.obj: "crypto\dsa\dsa_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dsa\dsa_lib.c"
crypto\dsa\dsa_meth.obj: "crypto\dsa\dsa_meth.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dsa\dsa_meth.c"
crypto\dsa\dsa_ossl.obj: "crypto\dsa\dsa_ossl.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dsa\dsa_ossl.c"
crypto\dsa\dsa_pmeth.obj: "crypto\dsa\dsa_pmeth.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dsa\dsa_pmeth.c"
crypto\dsa\dsa_prn.obj: "crypto\dsa\dsa_prn.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dsa\dsa_prn.c"
crypto\dsa\dsa_sign.obj: "crypto\dsa\dsa_sign.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dsa\dsa_sign.c"
crypto\dsa\dsa_vrf.obj: "crypto\dsa\dsa_vrf.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dsa\dsa_vrf.c"
crypto\dso\dso_dl.obj: "crypto\dso\dso_dl.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dso\dso_dl.c"
crypto\dso\dso_dlfcn.obj: "crypto\dso\dso_dlfcn.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dso\dso_dlfcn.c"
crypto\dso\dso_err.obj: "crypto\dso\dso_err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dso\dso_err.c"
crypto\dso\dso_lib.obj: "crypto\dso\dso_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dso\dso_lib.c"
crypto\dso\dso_openssl.obj: "crypto\dso\dso_openssl.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dso\dso_openssl.c"
crypto\dso\dso_vms.obj: "crypto\dso\dso_vms.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dso\dso_vms.c"
crypto\dso\dso_win32.obj: "crypto\dso\dso_win32.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\dso\dso_win32.c"
crypto\ebcdic.obj: "crypto\ebcdic.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ebcdic.c"
crypto\ec\curve25519.obj: "crypto\ec\curve25519.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\curve25519.c"
crypto\ec\ec2_mult.obj: "crypto\ec\ec2_mult.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ec2_mult.c"
crypto\ec\ec2_oct.obj: "crypto\ec\ec2_oct.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ec2_oct.c"
crypto\ec\ec2_smpl.obj: "crypto\ec\ec2_smpl.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ec2_smpl.c"
crypto\ec\ec_ameth.obj: "crypto\ec\ec_ameth.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ec_ameth.c"
crypto\ec\ec_asn1.obj: "crypto\ec\ec_asn1.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ec_asn1.c"
crypto\ec\ec_check.obj: "crypto\ec\ec_check.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ec_check.c"
crypto\ec\ec_curve.obj: "crypto\ec\ec_curve.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ec_curve.c"
crypto\ec\ec_cvt.obj: "crypto\ec\ec_cvt.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ec_cvt.c"
crypto\ec\ec_err.obj: "crypto\ec\ec_err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ec_err.c"
crypto\ec\ec_key.obj: "crypto\ec\ec_key.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ec_key.c"
crypto\ec\ec_kmeth.obj: "crypto\ec\ec_kmeth.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ec_kmeth.c"
crypto\ec\ec_lib.obj: "crypto\ec\ec_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ec_lib.c"
crypto\ec\ec_mult.obj: "crypto\ec\ec_mult.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ec_mult.c"
crypto\ec\ec_oct.obj: "crypto\ec\ec_oct.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ec_oct.c"
crypto\ec\ec_pmeth.obj: "crypto\ec\ec_pmeth.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ec_pmeth.c"
crypto\ec\ec_print.obj: "crypto\ec\ec_print.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ec_print.c"
crypto\ec\ecdh_kdf.obj: "crypto\ec\ecdh_kdf.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ecdh_kdf.c"
crypto\ec\ecdh_ossl.obj: "crypto\ec\ecdh_ossl.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ecdh_ossl.c"
crypto\ec\ecdsa_ossl.obj: "crypto\ec\ecdsa_ossl.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ecdsa_ossl.c"
crypto\ec\ecdsa_sign.obj: "crypto\ec\ecdsa_sign.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ecdsa_sign.c"
crypto\ec\ecdsa_vrf.obj: "crypto\ec\ecdsa_vrf.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ecdsa_vrf.c"
crypto\ec\eck_prn.obj: "crypto\ec\eck_prn.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\eck_prn.c"
crypto\ec\ecp_mont.obj: "crypto\ec\ecp_mont.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ecp_mont.c"
crypto\ec\ecp_nist.obj: "crypto\ec\ecp_nist.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ecp_nist.c"
crypto\ec\ecp_nistp224.obj: "crypto\ec\ecp_nistp224.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ecp_nistp224.c"
crypto\ec\ecp_nistp256.obj: "crypto\ec\ecp_nistp256.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ecp_nistp256.c"
crypto\ec\ecp_nistp521.obj: "crypto\ec\ecp_nistp521.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ecp_nistp521.c"
crypto\ec\ecp_nistputil.obj: "crypto\ec\ecp_nistputil.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ecp_nistputil.c"
crypto\ec\ecp_nistz256-x86_64.obj: "crypto\ec\ecp_nistz256-x86_64.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\ec\ecp_nistz256-x86_64.asm"
crypto\ec\ecp_nistz256-x86_64.asm: "crypto\ec\asm\ecp_nistz256-x86_64.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\ec\asm\ecp_nistz256-x86_64.pl" "$(PERLASM_SCHEME)" $@
crypto\ec\ecp_nistz256.obj: "crypto\ec\ecp_nistz256.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ecp_nistz256.c"
crypto\ec\ecp_oct.obj: "crypto\ec\ecp_oct.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ecp_oct.c"
crypto\ec\ecp_smpl.obj: "crypto\ec\ecp_smpl.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ecp_smpl.c"
crypto\ec\ecx_meth.obj: "crypto\ec\ecx_meth.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ec\ecx_meth.c"
crypto\engine\eng_all.obj: "crypto\engine\eng_all.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\engine\eng_all.c"
crypto\engine\eng_cnf.obj: "crypto\engine\eng_cnf.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\engine\eng_cnf.c"
crypto\engine\eng_ctrl.obj: "crypto\engine\eng_ctrl.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\engine\eng_ctrl.c"
crypto\engine\eng_dyn.obj: "crypto\engine\eng_dyn.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\engine\eng_dyn.c"
crypto\engine\eng_err.obj: "crypto\engine\eng_err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\engine\eng_err.c"
crypto\engine\eng_fat.obj: "crypto\engine\eng_fat.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\engine\eng_fat.c"
crypto\engine\eng_init.obj: "crypto\engine\eng_init.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\engine\eng_init.c"
crypto\engine\eng_lib.obj: "crypto\engine\eng_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\engine\eng_lib.c"
crypto\engine\eng_list.obj: "crypto\engine\eng_list.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\engine\eng_list.c"
crypto\engine\eng_openssl.obj: "crypto\engine\eng_openssl.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\engine\eng_openssl.c"
crypto\engine\eng_pkey.obj: "crypto\engine\eng_pkey.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\engine\eng_pkey.c"
crypto\engine\eng_rdrand.obj: "crypto\engine\eng_rdrand.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\engine\eng_rdrand.c"
crypto\engine\eng_table.obj: "crypto\engine\eng_table.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\engine\eng_table.c"
crypto\engine\tb_asnmth.obj: "crypto\engine\tb_asnmth.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\engine\tb_asnmth.c"
crypto\engine\tb_cipher.obj: "crypto\engine\tb_cipher.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\engine\tb_cipher.c"
crypto\engine\tb_dh.obj: "crypto\engine\tb_dh.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\engine\tb_dh.c"
crypto\engine\tb_digest.obj: "crypto\engine\tb_digest.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\engine\tb_digest.c"
crypto\engine\tb_dsa.obj: "crypto\engine\tb_dsa.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\engine\tb_dsa.c"
crypto\engine\tb_eckey.obj: "crypto\engine\tb_eckey.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\engine\tb_eckey.c"
crypto\engine\tb_pkmeth.obj: "crypto\engine\tb_pkmeth.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\engine\tb_pkmeth.c"
crypto\engine\tb_rand.obj: "crypto\engine\tb_rand.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\engine\tb_rand.c"
crypto\engine\tb_rsa.obj: "crypto\engine\tb_rsa.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\engine\tb_rsa.c"
crypto\err\err.obj: "crypto\err\err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\err\err.c"
crypto\err\err_all.obj: "crypto\err\err_all.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\err\err_all.c"
crypto\err\err_prn.obj: "crypto\err\err_prn.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\err\err_prn.c"
crypto\evp\bio_b64.obj: "crypto\evp\bio_b64.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\bio_b64.c"
crypto\evp\bio_enc.obj: "crypto\evp\bio_enc.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\bio_enc.c"
crypto\evp\bio_md.obj: "crypto\evp\bio_md.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\bio_md.c"
crypto\evp\bio_ok.obj: "crypto\evp\bio_ok.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\bio_ok.c"
crypto\evp\c_allc.obj: "crypto\evp\c_allc.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\c_allc.c"
crypto\evp\c_alld.obj: "crypto\evp\c_alld.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\c_alld.c"
crypto\evp\cmeth_lib.obj: "crypto\evp\cmeth_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\cmeth_lib.c"
crypto\evp\digest.obj: "crypto\evp\digest.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\digest.c"
crypto\evp\e_aes.obj: "crypto\evp\e_aes.c"
	$(CC)  /I "." /I "crypto\include" /I "include" /I "crypto" /I "crypto\modes" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\e_aes.c"
crypto\evp\e_aes_cbc_hmac_sha1.obj: "crypto\evp\e_aes_cbc_hmac_sha1.c"
	$(CC)  /I "." /I "crypto\include" /I "include" /I "crypto\modes" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\e_aes_cbc_hmac_sha1.c"
crypto\evp\e_aes_cbc_hmac_sha256.obj: "crypto\evp\e_aes_cbc_hmac_sha256.c"
	$(CC)  /I "." /I "crypto\include" /I "include" /I "crypto\modes" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\e_aes_cbc_hmac_sha256.c"
crypto\evp\e_aria.obj: "crypto\evp\e_aria.c"
	$(CC)  /I "." /I "crypto\include" /I "include" /I "crypto" /I "crypto\modes" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\e_aria.c"
crypto\evp\e_bf.obj: "crypto\evp\e_bf.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\e_bf.c"
crypto\evp\e_camellia.obj: "crypto\evp\e_camellia.c"
	$(CC)  /I "." /I "crypto\include" /I "include" /I "crypto" /I "crypto\modes" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\e_camellia.c"
crypto\evp\e_cast.obj: "crypto\evp\e_cast.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\e_cast.c"
crypto\evp\e_chacha20_poly1305.obj: "crypto\evp\e_chacha20_poly1305.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\e_chacha20_poly1305.c"
crypto\evp\e_des.obj: "crypto\evp\e_des.c"
	$(CC)  /I "." /I "crypto\include" /I "include" /I "crypto" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\e_des.c"
crypto\evp\e_des3.obj: "crypto\evp\e_des3.c"
	$(CC)  /I "." /I "crypto\include" /I "include" /I "crypto" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\e_des3.c"
crypto\evp\e_idea.obj: "crypto\evp\e_idea.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\e_idea.c"
crypto\evp\e_null.obj: "crypto\evp\e_null.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\e_null.c"
crypto\evp\e_old.obj: "crypto\evp\e_old.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\e_old.c"
crypto\evp\e_rc2.obj: "crypto\evp\e_rc2.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\e_rc2.c"
crypto\evp\e_rc4.obj: "crypto\evp\e_rc4.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\e_rc4.c"
crypto\evp\e_rc4_hmac_md5.obj: "crypto\evp\e_rc4_hmac_md5.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\e_rc4_hmac_md5.c"
crypto\evp\e_rc5.obj: "crypto\evp\e_rc5.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\e_rc5.c"
crypto\evp\e_seed.obj: "crypto\evp\e_seed.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\e_seed.c"
crypto\evp\e_sm4.obj: "crypto\evp\e_sm4.c"
	$(CC)  /I "." /I "crypto\include" /I "include" /I "crypto" /I "crypto\modes" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\e_sm4.c"
crypto\evp\e_xcbc_d.obj: "crypto\evp\e_xcbc_d.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\e_xcbc_d.c"
crypto\evp\encode.obj: "crypto\evp\encode.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\encode.c"
crypto\evp\evp_cnf.obj: "crypto\evp\evp_cnf.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\evp_cnf.c"
crypto\evp\evp_enc.obj: "crypto\evp\evp_enc.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\evp_enc.c"
crypto\evp\evp_err.obj: "crypto\evp\evp_err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\evp_err.c"
crypto\evp\evp_key.obj: "crypto\evp\evp_key.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\evp_key.c"
crypto\evp\evp_lib.obj: "crypto\evp\evp_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\evp_lib.c"
crypto\evp\evp_pbe.obj: "crypto\evp\evp_pbe.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\evp_pbe.c"
crypto\evp\evp_pkey.obj: "crypto\evp\evp_pkey.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\evp_pkey.c"
crypto\evp\m_md2.obj: "crypto\evp\m_md2.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\m_md2.c"
crypto\evp\m_md4.obj: "crypto\evp\m_md4.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\m_md4.c"
crypto\evp\m_md5.obj: "crypto\evp\m_md5.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\m_md5.c"
crypto\evp\m_md5_sha1.obj: "crypto\evp\m_md5_sha1.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\m_md5_sha1.c"
crypto\evp\m_mdc2.obj: "crypto\evp\m_mdc2.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\m_mdc2.c"
crypto\evp\m_null.obj: "crypto\evp\m_null.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\m_null.c"
crypto\evp\m_ripemd.obj: "crypto\evp\m_ripemd.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\m_ripemd.c"
crypto\evp\m_sha1.obj: "crypto\evp\m_sha1.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\m_sha1.c"
crypto\evp\m_sha3.obj: "crypto\evp\m_sha3.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\m_sha3.c"
crypto\evp\m_sigver.obj: "crypto\evp\m_sigver.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\m_sigver.c"
crypto\evp\m_wp.obj: "crypto\evp\m_wp.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\m_wp.c"
crypto\evp\names.obj: "crypto\evp\names.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\names.c"
crypto\evp\p5_crpt.obj: "crypto\evp\p5_crpt.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\p5_crpt.c"
crypto\evp\p5_crpt2.obj: "crypto\evp\p5_crpt2.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\p5_crpt2.c"
crypto\evp\p_dec.obj: "crypto\evp\p_dec.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\p_dec.c"
crypto\evp\p_enc.obj: "crypto\evp\p_enc.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\p_enc.c"
crypto\evp\p_lib.obj: "crypto\evp\p_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\p_lib.c"
crypto\evp\p_open.obj: "crypto\evp\p_open.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\p_open.c"
crypto\evp\p_seal.obj: "crypto\evp\p_seal.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\p_seal.c"
crypto\evp\p_sign.obj: "crypto\evp\p_sign.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\p_sign.c"
crypto\evp\p_verify.obj: "crypto\evp\p_verify.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\p_verify.c"
crypto\evp\pbe_scrypt.obj: "crypto\evp\pbe_scrypt.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\pbe_scrypt.c"
crypto\evp\pmeth_fn.obj: "crypto\evp\pmeth_fn.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\pmeth_fn.c"
crypto\evp\pmeth_gn.obj: "crypto\evp\pmeth_gn.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\pmeth_gn.c"
crypto\evp\pmeth_lib.obj: "crypto\evp\pmeth_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\evp\pmeth_lib.c"
crypto\ex_data.obj: "crypto\ex_data.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ex_data.c"
crypto\hmac\hm_ameth.obj: "crypto\hmac\hm_ameth.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\hmac\hm_ameth.c"
crypto\hmac\hm_pmeth.obj: "crypto\hmac\hm_pmeth.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\hmac\hm_pmeth.c"
crypto\hmac\hmac.obj: "crypto\hmac\hmac.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\hmac\hmac.c"
crypto\idea\i_cbc.obj: "crypto\idea\i_cbc.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\idea\i_cbc.c"
crypto\idea\i_cfb64.obj: "crypto\idea\i_cfb64.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\idea\i_cfb64.c"
crypto\idea\i_ecb.obj: "crypto\idea\i_ecb.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\idea\i_ecb.c"
crypto\idea\i_ofb64.obj: "crypto\idea\i_ofb64.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\idea\i_ofb64.c"
crypto\idea\i_skey.obj: "crypto\idea\i_skey.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\idea\i_skey.c"
crypto\init.obj: "crypto\init.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\init.c"
crypto\kdf\hkdf.obj: "crypto\kdf\hkdf.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\kdf\hkdf.c"
crypto\kdf\kdf_err.obj: "crypto\kdf\kdf_err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\kdf\kdf_err.c"
crypto\kdf\scrypt.obj: "crypto\kdf\scrypt.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\kdf\scrypt.c"
crypto\kdf\tls1_prf.obj: "crypto\kdf\tls1_prf.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\kdf\tls1_prf.c"
crypto\lhash\lh_stats.obj: "crypto\lhash\lh_stats.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\lhash\lh_stats.c"
crypto\lhash\lhash.obj: "crypto\lhash\lhash.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\lhash\lhash.c"
crypto\md4\md4_dgst.obj: "crypto\md4\md4_dgst.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\md4\md4_dgst.c"
crypto\md4\md4_one.obj: "crypto\md4\md4_one.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\md4\md4_one.c"
crypto\md5\md5-x86_64.obj: "crypto\md5\md5-x86_64.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\md5\md5-x86_64.asm"
crypto\md5\md5-x86_64.asm: "crypto\md5\asm\md5-x86_64.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\md5\asm\md5-x86_64.pl" "$(PERLASM_SCHEME)" $@
crypto\md5\md5_dgst.obj: "crypto\md5\md5_dgst.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\md5\md5_dgst.c"
crypto\md5\md5_one.obj: "crypto\md5\md5_one.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\md5\md5_one.c"
crypto\mdc2\mdc2_one.obj: "crypto\mdc2\mdc2_one.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\mdc2\mdc2_one.c"
crypto\mdc2\mdc2dgst.obj: "crypto\mdc2\mdc2dgst.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\mdc2\mdc2dgst.c"
crypto\mem.obj: "crypto\mem.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\mem.c"
crypto\mem_dbg.obj: "crypto\mem_dbg.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\mem_dbg.c"
crypto\mem_sec.obj: "crypto\mem_sec.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\mem_sec.c"
crypto\modes\aesni-gcm-x86_64.obj: "crypto\modes\aesni-gcm-x86_64.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\modes\aesni-gcm-x86_64.asm"
crypto\modes\aesni-gcm-x86_64.asm: "crypto\modes\asm\aesni-gcm-x86_64.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\modes\asm\aesni-gcm-x86_64.pl" "$(PERLASM_SCHEME)" $@
crypto\modes\cbc128.obj: "crypto\modes\cbc128.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\modes\cbc128.c"
crypto\modes\ccm128.obj: "crypto\modes\ccm128.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\modes\ccm128.c"
crypto\modes\cfb128.obj: "crypto\modes\cfb128.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\modes\cfb128.c"
crypto\modes\ctr128.obj: "crypto\modes\ctr128.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\modes\ctr128.c"
crypto\modes\cts128.obj: "crypto\modes\cts128.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\modes\cts128.c"
crypto\modes\gcm128.obj: "crypto\modes\gcm128.c"
	$(CC)  /I "." /I "crypto\include" /I "include" /I "crypto" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\modes\gcm128.c"
crypto\modes\ghash-x86_64.obj: "crypto\modes\ghash-x86_64.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\modes\ghash-x86_64.asm"
crypto\modes\ghash-x86_64.asm: "crypto\modes\asm\ghash-x86_64.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\modes\asm\ghash-x86_64.pl" "$(PERLASM_SCHEME)" $@
crypto\modes\ocb128.obj: "crypto\modes\ocb128.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\modes\ocb128.c"
crypto\modes\ofb128.obj: "crypto\modes\ofb128.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\modes\ofb128.c"
crypto\modes\wrap128.obj: "crypto\modes\wrap128.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\modes\wrap128.c"
crypto\modes\xts128.obj: "crypto\modes\xts128.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\modes\xts128.c"
crypto\o_dir.obj: "crypto\o_dir.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\o_dir.c"
crypto\o_fips.obj: "crypto\o_fips.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\o_fips.c"
crypto\o_fopen.obj: "crypto\o_fopen.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\o_fopen.c"
crypto\o_init.obj: "crypto\o_init.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\o_init.c"
crypto\o_str.obj: "crypto\o_str.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\o_str.c"
crypto\o_time.obj: "crypto\o_time.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\o_time.c"
crypto\objects\o_names.obj: "crypto\objects\o_names.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\objects\o_names.c"
crypto\objects\obj_dat.obj: "crypto\objects\obj_dat.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\objects\obj_dat.c"
crypto\objects\obj_err.obj: "crypto\objects\obj_err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\objects\obj_err.c"
crypto\objects\obj_lib.obj: "crypto\objects\obj_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\objects\obj_lib.c"
crypto\objects\obj_xref.obj: "crypto\objects\obj_xref.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\objects\obj_xref.c"
crypto\ocsp\ocsp_asn.obj: "crypto\ocsp\ocsp_asn.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ocsp\ocsp_asn.c"
crypto\ocsp\ocsp_cl.obj: "crypto\ocsp\ocsp_cl.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ocsp\ocsp_cl.c"
crypto\ocsp\ocsp_err.obj: "crypto\ocsp\ocsp_err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ocsp\ocsp_err.c"
crypto\ocsp\ocsp_ext.obj: "crypto\ocsp\ocsp_ext.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ocsp\ocsp_ext.c"
crypto\ocsp\ocsp_ht.obj: "crypto\ocsp\ocsp_ht.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ocsp\ocsp_ht.c"
crypto\ocsp\ocsp_lib.obj: "crypto\ocsp\ocsp_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ocsp\ocsp_lib.c"
crypto\ocsp\ocsp_prn.obj: "crypto\ocsp\ocsp_prn.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ocsp\ocsp_prn.c"
crypto\ocsp\ocsp_srv.obj: "crypto\ocsp\ocsp_srv.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ocsp\ocsp_srv.c"
crypto\ocsp\ocsp_vfy.obj: "crypto\ocsp\ocsp_vfy.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ocsp\ocsp_vfy.c"
crypto\ocsp\v3_ocsp.obj: "crypto\ocsp\v3_ocsp.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ocsp\v3_ocsp.c"
crypto\pem\pem_all.obj: "crypto\pem\pem_all.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pem\pem_all.c"
crypto\pem\pem_err.obj: "crypto\pem\pem_err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pem\pem_err.c"
crypto\pem\pem_info.obj: "crypto\pem\pem_info.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pem\pem_info.c"
crypto\pem\pem_lib.obj: "crypto\pem\pem_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pem\pem_lib.c"
crypto\pem\pem_oth.obj: "crypto\pem\pem_oth.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pem\pem_oth.c"
crypto\pem\pem_pk8.obj: "crypto\pem\pem_pk8.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pem\pem_pk8.c"
crypto\pem\pem_pkey.obj: "crypto\pem\pem_pkey.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pem\pem_pkey.c"
crypto\pem\pem_sign.obj: "crypto\pem\pem_sign.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pem\pem_sign.c"
crypto\pem\pem_x509.obj: "crypto\pem\pem_x509.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pem\pem_x509.c"
crypto\pem\pem_xaux.obj: "crypto\pem\pem_xaux.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pem\pem_xaux.c"
crypto\pem\pvkfmt.obj: "crypto\pem\pvkfmt.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pem\pvkfmt.c"
crypto\pkcs12\p12_add.obj: "crypto\pkcs12\p12_add.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pkcs12\p12_add.c"
crypto\pkcs12\p12_asn.obj: "crypto\pkcs12\p12_asn.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pkcs12\p12_asn.c"
crypto\pkcs12\p12_attr.obj: "crypto\pkcs12\p12_attr.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pkcs12\p12_attr.c"
crypto\pkcs12\p12_crpt.obj: "crypto\pkcs12\p12_crpt.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pkcs12\p12_crpt.c"
crypto\pkcs12\p12_crt.obj: "crypto\pkcs12\p12_crt.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pkcs12\p12_crt.c"
crypto\pkcs12\p12_decr.obj: "crypto\pkcs12\p12_decr.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pkcs12\p12_decr.c"
crypto\pkcs12\p12_init.obj: "crypto\pkcs12\p12_init.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pkcs12\p12_init.c"
crypto\pkcs12\p12_key.obj: "crypto\pkcs12\p12_key.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pkcs12\p12_key.c"
crypto\pkcs12\p12_kiss.obj: "crypto\pkcs12\p12_kiss.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pkcs12\p12_kiss.c"
crypto\pkcs12\p12_mutl.obj: "crypto\pkcs12\p12_mutl.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pkcs12\p12_mutl.c"
crypto\pkcs12\p12_npas.obj: "crypto\pkcs12\p12_npas.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pkcs12\p12_npas.c"
crypto\pkcs12\p12_p8d.obj: "crypto\pkcs12\p12_p8d.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pkcs12\p12_p8d.c"
crypto\pkcs12\p12_p8e.obj: "crypto\pkcs12\p12_p8e.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pkcs12\p12_p8e.c"
crypto\pkcs12\p12_sbag.obj: "crypto\pkcs12\p12_sbag.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pkcs12\p12_sbag.c"
crypto\pkcs12\p12_utl.obj: "crypto\pkcs12\p12_utl.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pkcs12\p12_utl.c"
crypto\pkcs12\pk12err.obj: "crypto\pkcs12\pk12err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pkcs12\pk12err.c"
crypto\pkcs7\bio_pk7.obj: "crypto\pkcs7\bio_pk7.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pkcs7\bio_pk7.c"
crypto\pkcs7\pk7_asn1.obj: "crypto\pkcs7\pk7_asn1.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pkcs7\pk7_asn1.c"
crypto\pkcs7\pk7_attr.obj: "crypto\pkcs7\pk7_attr.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pkcs7\pk7_attr.c"
crypto\pkcs7\pk7_doit.obj: "crypto\pkcs7\pk7_doit.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pkcs7\pk7_doit.c"
crypto\pkcs7\pk7_lib.obj: "crypto\pkcs7\pk7_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pkcs7\pk7_lib.c"
crypto\pkcs7\pk7_mime.obj: "crypto\pkcs7\pk7_mime.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pkcs7\pk7_mime.c"
crypto\pkcs7\pk7_smime.obj: "crypto\pkcs7\pk7_smime.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pkcs7\pk7_smime.c"
crypto\pkcs7\pkcs7err.obj: "crypto\pkcs7\pkcs7err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\pkcs7\pkcs7err.c"
crypto\poly1305\poly1305-x86_64.obj: "crypto\poly1305\poly1305-x86_64.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\poly1305\poly1305-x86_64.asm"
crypto\poly1305\poly1305-x86_64.asm: "crypto\poly1305\asm\poly1305-x86_64.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\poly1305\asm\poly1305-x86_64.pl" "$(PERLASM_SCHEME)" $@
crypto\poly1305\poly1305.obj: "crypto\poly1305\poly1305.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\poly1305\poly1305.c"
crypto\poly1305\poly1305_ameth.obj: "crypto\poly1305\poly1305_ameth.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\poly1305\poly1305_ameth.c"
crypto\poly1305\poly1305_pmeth.obj: "crypto\poly1305\poly1305_pmeth.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\poly1305\poly1305_pmeth.c"
crypto\rand\drbg_lib.obj: "crypto\rand\drbg_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rand\drbg_lib.c"
crypto\rand\drbg_rand.obj: "crypto\rand\drbg_rand.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rand\drbg_rand.c"
crypto\rand\rand_egd.obj: "crypto\rand\rand_egd.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rand\rand_egd.c"
crypto\rand\rand_err.obj: "crypto\rand\rand_err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rand\rand_err.c"
crypto\rand\rand_lib.obj: "crypto\rand\rand_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rand\rand_lib.c"
crypto\rand\rand_unix.obj: "crypto\rand\rand_unix.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rand\rand_unix.c"
crypto\rand\rand_vms.obj: "crypto\rand\rand_vms.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rand\rand_vms.c"
crypto\rand\rand_win.obj: "crypto\rand\rand_win.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rand\rand_win.c"
crypto\rand\randfile.obj: "crypto\rand\randfile.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rand\randfile.c"
crypto\rc2\rc2_cbc.obj: "crypto\rc2\rc2_cbc.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rc2\rc2_cbc.c"
crypto\rc2\rc2_ecb.obj: "crypto\rc2\rc2_ecb.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rc2\rc2_ecb.c"
crypto\rc2\rc2_skey.obj: "crypto\rc2\rc2_skey.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rc2\rc2_skey.c"
crypto\rc2\rc2cfb64.obj: "crypto\rc2\rc2cfb64.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rc2\rc2cfb64.c"
crypto\rc2\rc2ofb64.obj: "crypto\rc2\rc2ofb64.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rc2\rc2ofb64.c"
crypto\rc4\rc4-md5-x86_64.obj: "crypto\rc4\rc4-md5-x86_64.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\rc4\rc4-md5-x86_64.asm"
crypto\rc4\rc4-md5-x86_64.asm: "crypto\rc4\asm\rc4-md5-x86_64.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\rc4\asm\rc4-md5-x86_64.pl" "$(PERLASM_SCHEME)" $@
crypto\rc4\rc4-x86_64.obj: "crypto\rc4\rc4-x86_64.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\rc4\rc4-x86_64.asm"
crypto\rc4\rc4-x86_64.asm: "crypto\rc4\asm\rc4-x86_64.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\rc4\asm\rc4-x86_64.pl" "$(PERLASM_SCHEME)" $@
crypto\ripemd\rmd_dgst.obj: "crypto\ripemd\rmd_dgst.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ripemd\rmd_dgst.c"
crypto\ripemd\rmd_one.obj: "crypto\ripemd\rmd_one.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ripemd\rmd_one.c"
crypto\rsa\rsa_ameth.obj: "crypto\rsa\rsa_ameth.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rsa\rsa_ameth.c"
crypto\rsa\rsa_asn1.obj: "crypto\rsa\rsa_asn1.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rsa\rsa_asn1.c"
crypto\rsa\rsa_chk.obj: "crypto\rsa\rsa_chk.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rsa\rsa_chk.c"
crypto\rsa\rsa_crpt.obj: "crypto\rsa\rsa_crpt.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rsa\rsa_crpt.c"
crypto\rsa\rsa_depr.obj: "crypto\rsa\rsa_depr.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rsa\rsa_depr.c"
crypto\rsa\rsa_err.obj: "crypto\rsa\rsa_err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rsa\rsa_err.c"
crypto\rsa\rsa_gen.obj: "crypto\rsa\rsa_gen.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rsa\rsa_gen.c"
crypto\rsa\rsa_lib.obj: "crypto\rsa\rsa_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rsa\rsa_lib.c"
crypto\rsa\rsa_meth.obj: "crypto\rsa\rsa_meth.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rsa\rsa_meth.c"
crypto\rsa\rsa_mp.obj: "crypto\rsa\rsa_mp.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rsa\rsa_mp.c"
crypto\rsa\rsa_none.obj: "crypto\rsa\rsa_none.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rsa\rsa_none.c"
crypto\rsa\rsa_oaep.obj: "crypto\rsa\rsa_oaep.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rsa\rsa_oaep.c"
crypto\rsa\rsa_ossl.obj: "crypto\rsa\rsa_ossl.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rsa\rsa_ossl.c"
crypto\rsa\rsa_pk1.obj: "crypto\rsa\rsa_pk1.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rsa\rsa_pk1.c"
crypto\rsa\rsa_pmeth.obj: "crypto\rsa\rsa_pmeth.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rsa\rsa_pmeth.c"
crypto\rsa\rsa_prn.obj: "crypto\rsa\rsa_prn.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rsa\rsa_prn.c"
crypto\rsa\rsa_pss.obj: "crypto\rsa\rsa_pss.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rsa\rsa_pss.c"
crypto\rsa\rsa_saos.obj: "crypto\rsa\rsa_saos.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rsa\rsa_saos.c"
crypto\rsa\rsa_sign.obj: "crypto\rsa\rsa_sign.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rsa\rsa_sign.c"
crypto\rsa\rsa_ssl.obj: "crypto\rsa\rsa_ssl.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rsa\rsa_ssl.c"
crypto\rsa\rsa_x931.obj: "crypto\rsa\rsa_x931.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rsa\rsa_x931.c"
crypto\rsa\rsa_x931g.obj: "crypto\rsa\rsa_x931g.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\rsa\rsa_x931g.c"
crypto\seed\seed.obj: "crypto\seed\seed.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\seed\seed.c"
crypto\seed\seed_cbc.obj: "crypto\seed\seed_cbc.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\seed\seed_cbc.c"
crypto\seed\seed_cfb.obj: "crypto\seed\seed_cfb.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\seed\seed_cfb.c"
crypto\seed\seed_ecb.obj: "crypto\seed\seed_ecb.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\seed\seed_ecb.c"
crypto\seed\seed_ofb.obj: "crypto\seed\seed_ofb.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\seed\seed_ofb.c"
crypto\sha\keccak1600.obj: "crypto\sha\keccak1600.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\sha\keccak1600.c"
crypto\sha\sha1-mb-x86_64.obj: "crypto\sha\sha1-mb-x86_64.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\sha\sha1-mb-x86_64.asm"
crypto\sha\sha1-mb-x86_64.asm: "crypto\sha\asm\sha1-mb-x86_64.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\sha\asm\sha1-mb-x86_64.pl" "$(PERLASM_SCHEME)" $@
crypto\sha\sha1-x86_64.obj: "crypto\sha\sha1-x86_64.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\sha\sha1-x86_64.asm"
crypto\sha\sha1-x86_64.asm: "crypto\sha\asm\sha1-x86_64.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\sha\asm\sha1-x86_64.pl" "$(PERLASM_SCHEME)" $@
crypto\sha\sha1_one.obj: "crypto\sha\sha1_one.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\sha\sha1_one.c"
crypto\sha\sha1dgst.obj: "crypto\sha\sha1dgst.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\sha\sha1dgst.c"
crypto\sha\sha256-mb-x86_64.obj: "crypto\sha\sha256-mb-x86_64.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\sha\sha256-mb-x86_64.asm"
crypto\sha\sha256-mb-x86_64.asm: "crypto\sha\asm\sha256-mb-x86_64.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\sha\asm\sha256-mb-x86_64.pl" "$(PERLASM_SCHEME)" $@
crypto\sha\sha256-x86_64.obj: "crypto\sha\sha256-x86_64.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\sha\sha256-x86_64.asm"
crypto\sha\sha256-x86_64.asm: "crypto\sha\asm\sha512-x86_64.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\sha\asm\sha512-x86_64.pl" "$(PERLASM_SCHEME)" $@
crypto\sha\sha256.obj: "crypto\sha\sha256.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\sha\sha256.c"
crypto\sha\sha512-x86_64.obj: "crypto\sha\sha512-x86_64.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\sha\sha512-x86_64.asm"
crypto\sha\sha512-x86_64.asm: "crypto\sha\asm\sha512-x86_64.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\sha\asm\sha512-x86_64.pl" "$(PERLASM_SCHEME)" $@
crypto\sha\sha512.obj: "crypto\sha\sha512.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\sha\sha512.c"
crypto\siphash\siphash.obj: "crypto\siphash\siphash.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\siphash\siphash.c"
crypto\siphash\siphash_ameth.obj: "crypto\siphash\siphash_ameth.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\siphash\siphash_ameth.c"
crypto\siphash\siphash_pmeth.obj: "crypto\siphash\siphash_pmeth.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\siphash\siphash_pmeth.c"
crypto\sm3\m_sm3.obj: "crypto\sm3\m_sm3.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\sm3\m_sm3.c"
crypto\sm3\sm3.obj: "crypto\sm3\sm3.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\sm3\sm3.c"
crypto\sm4\sm4.obj: "crypto\sm4\sm4.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\sm4\sm4.c"
crypto\srp\srp_lib.obj: "crypto\srp\srp_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\srp\srp_lib.c"
crypto\srp\srp_vfy.obj: "crypto\srp\srp_vfy.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\srp\srp_vfy.c"
crypto\stack\stack.obj: "crypto\stack\stack.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\stack\stack.c"
crypto\store\loader_file.obj: "crypto\store\loader_file.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\store\loader_file.c"
crypto\store\store_err.obj: "crypto\store\store_err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\store\store_err.c"
crypto\store\store_init.obj: "crypto\store\store_init.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\store\store_init.c"
crypto\store\store_lib.obj: "crypto\store\store_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\store\store_lib.c"
crypto\store\store_register.obj: "crypto\store\store_register.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\store\store_register.c"
crypto\store\store_strings.obj: "crypto\store\store_strings.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\store\store_strings.c"
crypto\threads_none.obj: "crypto\threads_none.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\threads_none.c"
crypto\threads_pthread.obj: "crypto\threads_pthread.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\threads_pthread.c"
crypto\threads_win.obj: "crypto\threads_win.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\threads_win.c"
crypto\ts\ts_asn1.obj: "crypto\ts\ts_asn1.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ts\ts_asn1.c"
crypto\ts\ts_conf.obj: "crypto\ts\ts_conf.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ts\ts_conf.c"
crypto\ts\ts_err.obj: "crypto\ts\ts_err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ts\ts_err.c"
crypto\ts\ts_lib.obj: "crypto\ts\ts_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ts\ts_lib.c"
crypto\ts\ts_req_print.obj: "crypto\ts\ts_req_print.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ts\ts_req_print.c"
crypto\ts\ts_req_utils.obj: "crypto\ts\ts_req_utils.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ts\ts_req_utils.c"
crypto\ts\ts_rsp_print.obj: "crypto\ts\ts_rsp_print.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ts\ts_rsp_print.c"
crypto\ts\ts_rsp_sign.obj: "crypto\ts\ts_rsp_sign.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ts\ts_rsp_sign.c"
crypto\ts\ts_rsp_utils.obj: "crypto\ts\ts_rsp_utils.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ts\ts_rsp_utils.c"
crypto\ts\ts_rsp_verify.obj: "crypto\ts\ts_rsp_verify.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ts\ts_rsp_verify.c"
crypto\ts\ts_verify_ctx.obj: "crypto\ts\ts_verify_ctx.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ts\ts_verify_ctx.c"
crypto\txt_db\txt_db.obj: "crypto\txt_db\txt_db.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\txt_db\txt_db.c"
crypto\ui\ui_err.obj: "crypto\ui\ui_err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ui\ui_err.c"
crypto\ui\ui_lib.obj: "crypto\ui\ui_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ui\ui_lib.c"
crypto\ui\ui_null.obj: "crypto\ui\ui_null.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ui\ui_null.c"
crypto\ui\ui_openssl.obj: "crypto\ui\ui_openssl.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ui\ui_openssl.c"
crypto\ui\ui_util.obj: "crypto\ui\ui_util.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\ui\ui_util.c"
crypto\uid.obj: "crypto\uid.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\uid.c"
crypto\uplink-x86_64.obj: "crypto\uplink-x86_64.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\uplink-x86_64.asm"
crypto\uplink-x86_64.asm: "ms\uplink-x86_64.pl" 
	set ASM=$(AS)
	"$(PERL)" "ms\uplink-x86_64.pl" "$(PERLASM_SCHEME)" $@
crypto\whrlpool\wp-x86_64.obj: "crypto\whrlpool\wp-x86_64.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\whrlpool\wp-x86_64.asm"
crypto\whrlpool\wp-x86_64.asm: "crypto\whrlpool\asm\wp-x86_64.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\whrlpool\asm\wp-x86_64.pl" "$(PERLASM_SCHEME)" $@
crypto\whrlpool\wp_dgst.obj: "crypto\whrlpool\wp_dgst.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\whrlpool\wp_dgst.c"
crypto\x509\by_dir.obj: "crypto\x509\by_dir.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\by_dir.c"
crypto\x509\by_file.obj: "crypto\x509\by_file.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\by_file.c"
crypto\x509\t_crl.obj: "crypto\x509\t_crl.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\t_crl.c"
crypto\x509\t_req.obj: "crypto\x509\t_req.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\t_req.c"
crypto\x509\t_x509.obj: "crypto\x509\t_x509.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\t_x509.c"
crypto\x509\x509_att.obj: "crypto\x509\x509_att.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x509_att.c"
crypto\x509\x509_cmp.obj: "crypto\x509\x509_cmp.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x509_cmp.c"
crypto\x509\x509_d2.obj: "crypto\x509\x509_d2.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x509_d2.c"
crypto\x509\x509_def.obj: "crypto\x509\x509_def.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x509_def.c"
crypto\x509\x509_err.obj: "crypto\x509\x509_err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x509_err.c"
crypto\x509\x509_ext.obj: "crypto\x509\x509_ext.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x509_ext.c"
crypto\x509\x509_lu.obj: "crypto\x509\x509_lu.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x509_lu.c"
crypto\x509\x509_obj.obj: "crypto\x509\x509_obj.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x509_obj.c"
crypto\x509\x509_r2x.obj: "crypto\x509\x509_r2x.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x509_r2x.c"
crypto\x509\x509_req.obj: "crypto\x509\x509_req.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x509_req.c"
crypto\x509\x509_set.obj: "crypto\x509\x509_set.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x509_set.c"
crypto\x509\x509_trs.obj: "crypto\x509\x509_trs.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x509_trs.c"
crypto\x509\x509_txt.obj: "crypto\x509\x509_txt.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x509_txt.c"
crypto\x509\x509_v3.obj: "crypto\x509\x509_v3.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x509_v3.c"
crypto\x509\x509_vfy.obj: "crypto\x509\x509_vfy.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x509_vfy.c"
crypto\x509\x509_vpm.obj: "crypto\x509\x509_vpm.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x509_vpm.c"
crypto\x509\x509cset.obj: "crypto\x509\x509cset.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x509cset.c"
crypto\x509\x509name.obj: "crypto\x509\x509name.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x509name.c"
crypto\x509\x509rset.obj: "crypto\x509\x509rset.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x509rset.c"
crypto\x509\x509spki.obj: "crypto\x509\x509spki.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x509spki.c"
crypto\x509\x509type.obj: "crypto\x509\x509type.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x509type.c"
crypto\x509\x_all.obj: "crypto\x509\x_all.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x_all.c"
crypto\x509\x_attrib.obj: "crypto\x509\x_attrib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x_attrib.c"
crypto\x509\x_crl.obj: "crypto\x509\x_crl.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x_crl.c"
crypto\x509\x_exten.obj: "crypto\x509\x_exten.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x_exten.c"
crypto\x509\x_name.obj: "crypto\x509\x_name.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x_name.c"
crypto\x509\x_pubkey.obj: "crypto\x509\x_pubkey.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x_pubkey.c"
crypto\x509\x_req.obj: "crypto\x509\x_req.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x_req.c"
crypto\x509\x_x509.obj: "crypto\x509\x_x509.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x_x509.c"
crypto\x509\x_x509a.obj: "crypto\x509\x_x509a.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509\x_x509a.c"
crypto\x509v3\pcy_cache.obj: "crypto\x509v3\pcy_cache.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\pcy_cache.c"
crypto\x509v3\pcy_data.obj: "crypto\x509v3\pcy_data.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\pcy_data.c"
crypto\x509v3\pcy_lib.obj: "crypto\x509v3\pcy_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\pcy_lib.c"
crypto\x509v3\pcy_map.obj: "crypto\x509v3\pcy_map.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\pcy_map.c"
crypto\x509v3\pcy_node.obj: "crypto\x509v3\pcy_node.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\pcy_node.c"
crypto\x509v3\pcy_tree.obj: "crypto\x509v3\pcy_tree.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\pcy_tree.c"
crypto\x509v3\v3_addr.obj: "crypto\x509v3\v3_addr.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_addr.c"
crypto\x509v3\v3_admis.obj: "crypto\x509v3\v3_admis.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_admis.c"
crypto\x509v3\v3_akey.obj: "crypto\x509v3\v3_akey.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_akey.c"
crypto\x509v3\v3_akeya.obj: "crypto\x509v3\v3_akeya.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_akeya.c"
crypto\x509v3\v3_alt.obj: "crypto\x509v3\v3_alt.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_alt.c"
crypto\x509v3\v3_asid.obj: "crypto\x509v3\v3_asid.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_asid.c"
crypto\x509v3\v3_bcons.obj: "crypto\x509v3\v3_bcons.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_bcons.c"
crypto\x509v3\v3_bitst.obj: "crypto\x509v3\v3_bitst.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_bitst.c"
crypto\x509v3\v3_conf.obj: "crypto\x509v3\v3_conf.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_conf.c"
crypto\x509v3\v3_cpols.obj: "crypto\x509v3\v3_cpols.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_cpols.c"
crypto\x509v3\v3_crld.obj: "crypto\x509v3\v3_crld.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_crld.c"
crypto\x509v3\v3_enum.obj: "crypto\x509v3\v3_enum.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_enum.c"
crypto\x509v3\v3_extku.obj: "crypto\x509v3\v3_extku.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_extku.c"
crypto\x509v3\v3_genn.obj: "crypto\x509v3\v3_genn.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_genn.c"
crypto\x509v3\v3_ia5.obj: "crypto\x509v3\v3_ia5.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_ia5.c"
crypto\x509v3\v3_info.obj: "crypto\x509v3\v3_info.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_info.c"
crypto\x509v3\v3_int.obj: "crypto\x509v3\v3_int.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_int.c"
crypto\x509v3\v3_lib.obj: "crypto\x509v3\v3_lib.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_lib.c"
crypto\x509v3\v3_ncons.obj: "crypto\x509v3\v3_ncons.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_ncons.c"
crypto\x509v3\v3_pci.obj: "crypto\x509v3\v3_pci.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_pci.c"
crypto\x509v3\v3_pcia.obj: "crypto\x509v3\v3_pcia.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_pcia.c"
crypto\x509v3\v3_pcons.obj: "crypto\x509v3\v3_pcons.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_pcons.c"
crypto\x509v3\v3_pku.obj: "crypto\x509v3\v3_pku.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_pku.c"
crypto\x509v3\v3_pmaps.obj: "crypto\x509v3\v3_pmaps.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_pmaps.c"
crypto\x509v3\v3_prn.obj: "crypto\x509v3\v3_prn.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_prn.c"
crypto\x509v3\v3_purp.obj: "crypto\x509v3\v3_purp.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_purp.c"
crypto\x509v3\v3_skey.obj: "crypto\x509v3\v3_skey.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_skey.c"
crypto\x509v3\v3_sxnet.obj: "crypto\x509v3\v3_sxnet.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_sxnet.c"
crypto\x509v3\v3_tlsf.obj: "crypto\x509v3\v3_tlsf.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_tlsf.c"
crypto\x509v3\v3_utl.obj: "crypto\x509v3\v3_utl.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3_utl.c"
crypto\x509v3\v3err.obj: "crypto\x509v3\v3err.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "crypto\x509v3\v3err.c"
crypto\x86_64cpuid.obj: "crypto\x86_64cpuid.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "crypto\x86_64cpuid.asm"
crypto\x86_64cpuid.asm: "crypto\x86_64cpuid.pl" 
	set ASM=$(AS)
	"$(PERL)" "crypto\x86_64cpuid.pl" "$(PERLASM_SCHEME)" $@
ms\uplink.obj: "ms\uplink.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ms\uplink.c"
libssl.lib: ssl\bio_ssl.obj ssl\d1_lib.obj ssl\d1_msg.obj ssl\d1_srtp.obj ssl\methods.obj ssl\packet.obj ssl\pqueue.obj ssl\record\dtls1_bitmap.obj ssl\record\rec_layer_d1.obj ssl\record\rec_layer_s3.obj ssl\record\ssl3_buffer.obj ssl\record\ssl3_record.obj ssl\record\ssl3_record_tls13.obj ssl\s3_cbc.obj ssl\s3_enc.obj ssl\s3_lib.obj ssl\s3_msg.obj ssl\ssl_asn1.obj ssl\ssl_cert.obj ssl\ssl_ciph.obj ssl\ssl_conf.obj ssl\ssl_err.obj ssl\ssl_init.obj ssl\ssl_lib.obj ssl\ssl_mcnf.obj ssl\ssl_rsa.obj ssl\ssl_sess.obj ssl\ssl_stat.obj ssl\ssl_txt.obj ssl\ssl_utst.obj ssl\statem\extensions.obj ssl\statem\extensions_clnt.obj ssl\statem\extensions_cust.obj ssl\statem\extensions_srvr.obj ssl\statem\statem.obj ssl\statem\statem_clnt.obj ssl\statem\statem_dtls.obj ssl\statem\statem_lib.obj ssl\statem\statem_srvr.obj ssl\t1_enc.obj ssl\t1_lib.obj ssl\t1_trce.obj ssl\tls13_enc.obj ssl\tls_srp.obj libcrypto.lib "util\libssl.num" "util\mkdef.pl"
	"$(PERL)" "util\mkdef.pl" "ssl" 32 > libssl-1_1-x64.def
	"$(PERL)" -i.tmp -pe "s|^LIBRARY\s+ssl32|LIBRARY libssl-1_1-x64|;" libssl-1_1-x64.def
	DEL libssl-1_1-x64.def.tmp
	"$(PERL)" "util\mkrc.pl" libssl-1_1-x64.dll > libssl-1_1-x64.rc
	$(RC) $(RCOUTFLAG)libssl-1_1-x64.res libssl-1_1-x64.rc
	IF EXIST libssl-1_1-x64.dll.manifest DEL /F /Q libssl-1_1-x64.dll.manifest
	$(LD) $(LDFLAGS) $(LIB_LDFLAGS) \
		/implib:$@ $(LDOUTFLAG)libssl-1_1-x64.dll /def:libssl-1_1-x64.def @<< || (DEL /Q $(@B).* libssl-1_1-x64.* && EXIT 1)
ssl\bio_ssl.obj
ssl\d1_lib.obj
ssl\d1_msg.obj
ssl\d1_srtp.obj
ssl\methods.obj
ssl\packet.obj
ssl\pqueue.obj
ssl\record\dtls1_bitmap.obj
ssl\record\rec_layer_d1.obj
ssl\record\rec_layer_s3.obj
ssl\record\ssl3_buffer.obj
ssl\record\ssl3_record.obj
ssl\record\ssl3_record_tls13.obj
ssl\s3_cbc.obj
ssl\s3_enc.obj
ssl\s3_lib.obj
ssl\s3_msg.obj
ssl\ssl_asn1.obj
ssl\ssl_cert.obj
ssl\ssl_ciph.obj
ssl\ssl_conf.obj
ssl\ssl_err.obj
ssl\ssl_init.obj
ssl\ssl_lib.obj
ssl\ssl_mcnf.obj
ssl\ssl_rsa.obj
ssl\ssl_sess.obj
ssl\ssl_stat.obj
ssl\ssl_txt.obj
ssl\ssl_utst.obj
ssl\statem\extensions.obj
ssl\statem\extensions_clnt.obj
ssl\statem\extensions_cust.obj
ssl\statem\extensions_srvr.obj
ssl\statem\statem.obj
ssl\statem\statem_clnt.obj
ssl\statem\statem_dtls.obj
ssl\statem\statem_lib.obj
ssl\statem\statem_srvr.obj
ssl\t1_enc.obj
ssl\t1_lib.obj
ssl\t1_trce.obj
ssl\tls13_enc.obj
ssl\tls_srp.obj libssl-1_1-x64.res
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST libssl-1_1-x64.dll.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)libssl-1_1-x64.dll.manifest $(MTOUTFLAG)libssl-1_1-x64.dll
	IF EXIST apps\libssl-1_1-x64.dll DEL /Q /F apps\libssl-1_1-x64.dll
	IF EXIST test\libssl-1_1-x64.dll DEL /Q /F test\libssl-1_1-x64.dll
	IF EXIST fuzz\libssl-1_1-x64.dll DEL /Q /F fuzz\libssl-1_1-x64.dll
	COPY libssl-1_1-x64.dll apps
	COPY libssl-1_1-x64.dll test
	COPY libssl-1_1-x64.dll fuzz
ssl\bio_ssl.obj: "ssl\bio_ssl.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\bio_ssl.c"
ssl\d1_lib.obj: "ssl\d1_lib.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\d1_lib.c"
ssl\d1_msg.obj: "ssl\d1_msg.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\d1_msg.c"
ssl\d1_srtp.obj: "ssl\d1_srtp.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\d1_srtp.c"
ssl\methods.obj: "ssl\methods.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\methods.c"
ssl\packet.obj: "ssl\packet.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\packet.c"
ssl\pqueue.obj: "ssl\pqueue.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\pqueue.c"
ssl\record\dtls1_bitmap.obj: "ssl\record\dtls1_bitmap.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\record\dtls1_bitmap.c"
ssl\record\rec_layer_d1.obj: "ssl\record\rec_layer_d1.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\record\rec_layer_d1.c"
ssl\record\rec_layer_s3.obj: "ssl\record\rec_layer_s3.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\record\rec_layer_s3.c"
ssl\record\ssl3_buffer.obj: "ssl\record\ssl3_buffer.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\record\ssl3_buffer.c"
ssl\record\ssl3_record.obj: "ssl\record\ssl3_record.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\record\ssl3_record.c"
ssl\record\ssl3_record_tls13.obj: "ssl\record\ssl3_record_tls13.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\record\ssl3_record_tls13.c"
ssl\s3_cbc.obj: "ssl\s3_cbc.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\s3_cbc.c"
ssl\s3_enc.obj: "ssl\s3_enc.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\s3_enc.c"
ssl\s3_lib.obj: "ssl\s3_lib.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\s3_lib.c"
ssl\s3_msg.obj: "ssl\s3_msg.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\s3_msg.c"
ssl\ssl_asn1.obj: "ssl\ssl_asn1.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\ssl_asn1.c"
ssl\ssl_cert.obj: "ssl\ssl_cert.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\ssl_cert.c"
ssl\ssl_ciph.obj: "ssl\ssl_ciph.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\ssl_ciph.c"
ssl\ssl_conf.obj: "ssl\ssl_conf.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\ssl_conf.c"
ssl\ssl_err.obj: "ssl\ssl_err.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\ssl_err.c"
ssl\ssl_init.obj: "ssl\ssl_init.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\ssl_init.c"
ssl\ssl_lib.obj: "ssl\ssl_lib.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\ssl_lib.c"
ssl\ssl_mcnf.obj: "ssl\ssl_mcnf.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\ssl_mcnf.c"
ssl\ssl_rsa.obj: "ssl\ssl_rsa.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\ssl_rsa.c"
ssl\ssl_sess.obj: "ssl\ssl_sess.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\ssl_sess.c"
ssl\ssl_stat.obj: "ssl\ssl_stat.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\ssl_stat.c"
ssl\ssl_txt.obj: "ssl\ssl_txt.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\ssl_txt.c"
ssl\ssl_utst.obj: "ssl\ssl_utst.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\ssl_utst.c"
ssl\statem\extensions.obj: "ssl\statem\extensions.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\statem\extensions.c"
ssl\statem\extensions_clnt.obj: "ssl\statem\extensions_clnt.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\statem\extensions_clnt.c"
ssl\statem\extensions_cust.obj: "ssl\statem\extensions_cust.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\statem\extensions_cust.c"
ssl\statem\extensions_srvr.obj: "ssl\statem\extensions_srvr.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\statem\extensions_srvr.c"
ssl\statem\statem.obj: "ssl\statem\statem.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\statem\statem.c"
ssl\statem\statem_clnt.obj: "ssl\statem\statem_clnt.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\statem\statem_clnt.c"
ssl\statem\statem_dtls.obj: "ssl\statem\statem_dtls.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\statem\statem_dtls.c"
ssl\statem\statem_lib.obj: "ssl\statem\statem_lib.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\statem\statem_lib.c"
ssl\statem\statem_srvr.obj: "ssl\statem\statem_srvr.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\statem\statem_srvr.c"
ssl\t1_enc.obj: "ssl\t1_enc.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\t1_enc.c"
ssl\t1_lib.obj: "ssl\t1_lib.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\t1_lib.c"
ssl\t1_trce.obj: "ssl\t1_trce.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\t1_trce.c"
ssl\tls13_enc.obj: "ssl\tls13_enc.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\tls13_enc.c"
ssl\tls_srp.obj: "ssl\tls_srp.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ssl\tls_srp.c"
test\libtestutil.lib: apps\win32_init.obj ms\applink.obj test\testutil\basic_output.obj test\testutil\cb.obj test\testutil\driver.obj test\testutil\format_output.obj test\testutil\init.obj test\testutil\main.obj test\testutil\output_helpers.obj test\testutil\stanza.obj test\testutil\tap_bio.obj test\testutil\test_cleanup.obj test\testutil\tests.obj
	$(AR) $(ARFLAGS) $(AROUTFLAG)test\libtestutil.lib @<<
$**
<<
apps\win32_init.obj: "apps\win32_init.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "apps\win32_init.c"
apps\progs.h: "apps\progs.pl" "configdata.pm"
	"$(PERL)" "apps\progs.pl" "$(APPS_OPENSSL)" > $@
ms\applink.obj: "ms\applink.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "ms\applink.c"
test\testutil\basic_output.obj: "test\testutil\basic_output.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "test\testutil\basic_output.c"
test\testutil\cb.obj: "test\testutil\cb.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "test\testutil\cb.c"
test\testutil\driver.obj: "test\testutil\driver.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "test\testutil\driver.c"
test\testutil\format_output.obj: "test\testutil\format_output.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "test\testutil\format_output.c"
test\testutil\init.obj: "test\testutil\init.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "test\testutil\init.c"
test\testutil\main.obj: "test\testutil\main.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "test\testutil\main.c"
test\testutil\output_helpers.obj: "test\testutil\output_helpers.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "test\testutil\output_helpers.c"
test\testutil\stanza.obj: "test\testutil\stanza.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "test\testutil\stanza.c"
test\testutil\tap_bio.obj: "test\testutil\tap_bio.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "test\testutil\tap_bio.c"
test\testutil\test_cleanup.obj: "test\testutil\test_cleanup.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "test\testutil\test_cleanup.c"
test\testutil\tests.obj: "test\testutil\tests.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(LIB_CFLAGS) -c $(COUTFLAG)$@ "test\testutil\tests.c"
engines\capi.dll: engines\e_capi.obj libcrypto.lib
	IF EXIST engines\capi.dll.manifest DEL /F /Q engines\capi.dll.manifest
	$(LD) $(LDFLAGS) $(DSO_LDFLAGS) $(LDOUTFLAG)engines\capi.dll /def:<< @<<
LIBRARY         capi
EXPORTS
    bind_engine		
    v_check		
<<
engines\e_capi.obj
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST engines\capi.dll.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)engines\capi.dll.manifest $(MTOUTFLAG)engines\capi.dll
engines\e_capi.obj: "engines\e_capi.c"
	$(CC)  /I "include" $(CFLAGS) $(DSO_CFLAGS) -c $(COUTFLAG)$@ "engines\e_capi.c"
engines\dasync.dll: engines\e_dasync.obj libcrypto.lib
	IF EXIST engines\dasync.dll.manifest DEL /F /Q engines\dasync.dll.manifest
	$(LD) $(LDFLAGS) $(DSO_LDFLAGS) $(LDOUTFLAG)engines\dasync.dll /def:<< @<<
LIBRARY         dasync
EXPORTS
    bind_engine		
    v_check		
<<
engines\e_dasync.obj
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST engines\dasync.dll.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)engines\dasync.dll.manifest $(MTOUTFLAG)engines\dasync.dll
engines\e_dasync.obj: "engines\e_dasync.c"
	$(CC)  /I "include" $(CFLAGS) $(DSO_CFLAGS) -c $(COUTFLAG)$@ "engines\e_dasync.c"
engines\ossltest.dll: engines\e_ossltest.obj libcrypto.lib
	IF EXIST engines\ossltest.dll.manifest DEL /F /Q engines\ossltest.dll.manifest
	$(LD) $(LDFLAGS) $(DSO_LDFLAGS) $(LDOUTFLAG)engines\ossltest.dll /def:<< @<<
LIBRARY         ossltest
EXPORTS
    bind_engine		
    v_check		
<<
engines\e_ossltest.obj
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST engines\ossltest.dll.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)engines\ossltest.dll.manifest $(MTOUTFLAG)engines\ossltest.dll
engines\e_ossltest.obj: "engines\e_ossltest.c"
	$(CC)  /I "include" $(CFLAGS) $(DSO_CFLAGS) -c $(COUTFLAG)$@ "engines\e_ossltest.c"
engines\padlock.dll: engines\e_padlock-x86_64.obj engines\e_padlock.obj libcrypto.lib
	IF EXIST engines\padlock.dll.manifest DEL /F /Q engines\padlock.dll.manifest
	$(LD) $(LDFLAGS) $(DSO_LDFLAGS) $(LDOUTFLAG)engines\padlock.dll /def:<< @<<
LIBRARY         padlock
EXPORTS
    bind_engine		
    v_check		
<<
engines\e_padlock-x86_64.obj
engines\e_padlock.obj
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST engines\padlock.dll.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)engines\padlock.dll.manifest $(MTOUTFLAG)engines\padlock.dll
engines\e_padlock-x86_64.obj: "engines\e_padlock-x86_64.asm"
	$(AS) $(ASFLAGS) $(ASOUTFLAG)$@ "engines\e_padlock-x86_64.asm"
engines\e_padlock-x86_64.asm: "engines\asm\e_padlock-x86_64.pl" 
	set ASM=$(AS)
	"$(PERL)" "engines\asm\e_padlock-x86_64.pl" "$(PERLASM_SCHEME)" $@
engines\e_padlock.obj: "engines\e_padlock.c"
	$(CC)  /I "include" $(CFLAGS) $(DSO_CFLAGS) -c $(COUTFLAG)$@ "engines\e_padlock.c"
apps\openssl.exe: apps\app_rand.obj apps\apps.obj apps\asn1pars.obj apps\ca.obj apps\ciphers.obj apps\cms.obj apps\crl.obj apps\crl2p7.obj apps\dgst.obj apps\dhparam.obj apps\dsa.obj apps\dsaparam.obj apps\ec.obj apps\ecparam.obj apps\enc.obj apps\engine.obj apps\errstr.obj apps\gendsa.obj apps\genpkey.obj apps\genrsa.obj apps\nseq.obj apps\ocsp.obj apps\openssl.obj apps\opt.obj apps\passwd.obj apps\pkcs12.obj apps\pkcs7.obj apps\pkcs8.obj apps\pkey.obj apps\pkeyparam.obj apps\pkeyutl.obj apps\prime.obj apps\rand.obj apps\rehash.obj apps\req.obj apps\rsa.obj apps\rsautl.obj apps\s_cb.obj apps\s_client.obj apps\s_server.obj apps\s_socket.obj apps\s_time.obj apps\sess_id.obj apps\smime.obj apps\speed.obj apps\spkac.obj apps\srp.obj apps\storeutl.obj apps\ts.obj apps\verify.obj apps\version.obj apps\win32_init.obj apps\x509.obj ms\applink.obj libssl.lib libcrypto.lib
	IF EXIST apps\openssl.exe.manifest DEL /F /Q apps\openssl.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)apps\openssl.exe @<<
apps\app_rand.obj
apps\apps.obj
apps\asn1pars.obj
apps\ca.obj
apps\ciphers.obj
apps\cms.obj
apps\crl.obj
apps\crl2p7.obj
apps\dgst.obj
apps\dhparam.obj
apps\dsa.obj
apps\dsaparam.obj
apps\ec.obj
apps\ecparam.obj
apps\enc.obj
apps\engine.obj
apps\errstr.obj
apps\gendsa.obj
apps\genpkey.obj
apps\genrsa.obj
apps\nseq.obj
apps\ocsp.obj
apps\openssl.obj
apps\opt.obj
apps\passwd.obj
apps\pkcs12.obj
apps\pkcs7.obj
apps\pkcs8.obj
apps\pkey.obj
apps\pkeyparam.obj
apps\pkeyutl.obj
apps\prime.obj
apps\rand.obj
apps\rehash.obj
apps\req.obj
apps\rsa.obj
apps\rsautl.obj
apps\s_cb.obj
apps\s_client.obj
apps\s_server.obj
apps\s_socket.obj
apps\s_time.obj
apps\sess_id.obj
apps\smime.obj
apps\speed.obj
apps\spkac.obj
apps\srp.obj
apps\storeutl.obj
apps\ts.obj
apps\verify.obj
apps\version.obj
apps\win32_init.obj
apps\x509.obj
ms\applink.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST apps\openssl.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)apps\openssl.exe.manifest $(MTOUTFLAG)apps\openssl.exe
apps\app_rand.obj: "apps\app_rand.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\app_rand.c"
apps\apps.obj: "apps\apps.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\apps.c"
apps\asn1pars.obj: "apps\asn1pars.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\asn1pars.c"
apps\ca.obj: "apps\ca.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\ca.c"
apps\ciphers.obj: "apps\ciphers.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\ciphers.c"
apps\cms.obj: "apps\cms.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\cms.c"
apps\crl.obj: "apps\crl.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\crl.c"
apps\crl2p7.obj: "apps\crl2p7.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\crl2p7.c"
apps\dgst.obj: "apps\dgst.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\dgst.c"
apps\dhparam.obj: "apps\dhparam.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\dhparam.c"
apps\dsa.obj: "apps\dsa.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\dsa.c"
apps\dsaparam.obj: "apps\dsaparam.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\dsaparam.c"
apps\ec.obj: "apps\ec.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\ec.c"
apps\ecparam.obj: "apps\ecparam.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\ecparam.c"
apps\enc.obj: "apps\enc.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\enc.c"
apps\engine.obj: "apps\engine.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\engine.c"
apps\errstr.obj: "apps\errstr.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\errstr.c"
apps\gendsa.obj: "apps\gendsa.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\gendsa.c"
apps\genpkey.obj: "apps\genpkey.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\genpkey.c"
apps\genrsa.obj: "apps\genrsa.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\genrsa.c"
apps\nseq.obj: "apps\nseq.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\nseq.c"
apps\ocsp.obj: "apps\ocsp.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\ocsp.c"
apps\openssl.obj: "apps\openssl.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\openssl.c"
apps\opt.obj: "apps\opt.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\opt.c"
apps\passwd.obj: "apps\passwd.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\passwd.c"
apps\pkcs12.obj: "apps\pkcs12.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\pkcs12.c"
apps\pkcs7.obj: "apps\pkcs7.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\pkcs7.c"
apps\pkcs8.obj: "apps\pkcs8.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\pkcs8.c"
apps\pkey.obj: "apps\pkey.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\pkey.c"
apps\pkeyparam.obj: "apps\pkeyparam.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\pkeyparam.c"
apps\pkeyutl.obj: "apps\pkeyutl.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\pkeyutl.c"
apps\prime.obj: "apps\prime.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\prime.c"
apps\rand.obj: "apps\rand.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\rand.c"
apps\rehash.obj: "apps\rehash.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\rehash.c"
apps\req.obj: "apps\req.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\req.c"
apps\rsa.obj: "apps\rsa.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\rsa.c"
apps\rsautl.obj: "apps\rsautl.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\rsautl.c"
apps\s_cb.obj: "apps\s_cb.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\s_cb.c"
apps\s_client.obj: "apps\s_client.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\s_client.c"
apps\s_server.obj: "apps\s_server.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\s_server.c"
apps\s_socket.obj: "apps\s_socket.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\s_socket.c"
apps\s_time.obj: "apps\s_time.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\s_time.c"
apps\sess_id.obj: "apps\sess_id.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\sess_id.c"
apps\smime.obj: "apps\smime.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\smime.c"
apps\speed.obj: "apps\speed.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\speed.c"
apps\spkac.obj: "apps\spkac.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\spkac.c"
apps\srp.obj: "apps\srp.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\srp.c"
apps\storeutl.obj: "apps\storeutl.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\storeutl.c"
apps\ts.obj: "apps\ts.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\ts.c"
apps\verify.obj: "apps\verify.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\verify.c"
apps\version.obj: "apps\version.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\version.c"
apps\x509.obj: "apps\x509.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "apps\x509.c"
fuzz\asn1-test.exe: fuzz\asn1.obj fuzz\test-corpus.obj libssl.lib libcrypto.lib
	IF EXIST fuzz\asn1-test.exe.manifest DEL /F /Q fuzz\asn1-test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)fuzz\asn1-test.exe @<<
fuzz\asn1.obj
fuzz\test-corpus.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST fuzz\asn1-test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)fuzz\asn1-test.exe.manifest $(MTOUTFLAG)fuzz\asn1-test.exe
fuzz\asn1.obj: "fuzz\asn1.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "fuzz\asn1.c"
fuzz\test-corpus.obj: "fuzz\test-corpus.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "fuzz\test-corpus.c"
fuzz\asn1parse-test.exe: fuzz\asn1parse.obj fuzz\test-corpus.obj libcrypto.lib
	IF EXIST fuzz\asn1parse-test.exe.manifest DEL /F /Q fuzz\asn1parse-test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)fuzz\asn1parse-test.exe @<<
fuzz\asn1parse.obj
fuzz\test-corpus.obj setargv.obj
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST fuzz\asn1parse-test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)fuzz\asn1parse-test.exe.manifest $(MTOUTFLAG)fuzz\asn1parse-test.exe
fuzz\asn1parse.obj: "fuzz\asn1parse.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "fuzz\asn1parse.c"
fuzz\bignum-test.exe: fuzz\bignum.obj fuzz\test-corpus.obj libcrypto.lib
	IF EXIST fuzz\bignum-test.exe.manifest DEL /F /Q fuzz\bignum-test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)fuzz\bignum-test.exe @<<
fuzz\bignum.obj
fuzz\test-corpus.obj setargv.obj
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST fuzz\bignum-test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)fuzz\bignum-test.exe.manifest $(MTOUTFLAG)fuzz\bignum-test.exe
fuzz\bignum.obj: "fuzz\bignum.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "fuzz\bignum.c"
fuzz\bndiv-test.exe: fuzz\bndiv.obj fuzz\test-corpus.obj libcrypto.lib
	IF EXIST fuzz\bndiv-test.exe.manifest DEL /F /Q fuzz\bndiv-test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)fuzz\bndiv-test.exe @<<
fuzz\bndiv.obj
fuzz\test-corpus.obj setargv.obj
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST fuzz\bndiv-test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)fuzz\bndiv-test.exe.manifest $(MTOUTFLAG)fuzz\bndiv-test.exe
fuzz\bndiv.obj: "fuzz\bndiv.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "fuzz\bndiv.c"
fuzz\client-test.exe: fuzz\client.obj fuzz\test-corpus.obj libssl.lib libcrypto.lib
	IF EXIST fuzz\client-test.exe.manifest DEL /F /Q fuzz\client-test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)fuzz\client-test.exe @<<
fuzz\client.obj
fuzz\test-corpus.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST fuzz\client-test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)fuzz\client-test.exe.manifest $(MTOUTFLAG)fuzz\client-test.exe
fuzz\client.obj: "fuzz\client.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "fuzz\client.c"
fuzz\cms-test.exe: fuzz\cms.obj fuzz\test-corpus.obj libcrypto.lib
	IF EXIST fuzz\cms-test.exe.manifest DEL /F /Q fuzz\cms-test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)fuzz\cms-test.exe @<<
fuzz\cms.obj
fuzz\test-corpus.obj setargv.obj
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST fuzz\cms-test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)fuzz\cms-test.exe.manifest $(MTOUTFLAG)fuzz\cms-test.exe
fuzz\cms.obj: "fuzz\cms.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "fuzz\cms.c"
fuzz\conf-test.exe: fuzz\conf.obj fuzz\test-corpus.obj libcrypto.lib
	IF EXIST fuzz\conf-test.exe.manifest DEL /F /Q fuzz\conf-test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)fuzz\conf-test.exe @<<
fuzz\conf.obj
fuzz\test-corpus.obj setargv.obj
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST fuzz\conf-test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)fuzz\conf-test.exe.manifest $(MTOUTFLAG)fuzz\conf-test.exe
fuzz\conf.obj: "fuzz\conf.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "fuzz\conf.c"
fuzz\crl-test.exe: fuzz\crl.obj fuzz\test-corpus.obj libcrypto.lib
	IF EXIST fuzz\crl-test.exe.manifest DEL /F /Q fuzz\crl-test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)fuzz\crl-test.exe @<<
fuzz\crl.obj
fuzz\test-corpus.obj setargv.obj
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST fuzz\crl-test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)fuzz\crl-test.exe.manifest $(MTOUTFLAG)fuzz\crl-test.exe
fuzz\crl.obj: "fuzz\crl.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "fuzz\crl.c"
fuzz\ct-test.exe: fuzz\ct.obj fuzz\test-corpus.obj libcrypto.lib
	IF EXIST fuzz\ct-test.exe.manifest DEL /F /Q fuzz\ct-test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)fuzz\ct-test.exe @<<
fuzz\ct.obj
fuzz\test-corpus.obj setargv.obj
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST fuzz\ct-test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)fuzz\ct-test.exe.manifest $(MTOUTFLAG)fuzz\ct-test.exe
fuzz\ct.obj: "fuzz\ct.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "fuzz\ct.c"
fuzz\server-test.exe: fuzz\server.obj fuzz\test-corpus.obj libssl.lib libcrypto.lib
	IF EXIST fuzz\server-test.exe.manifest DEL /F /Q fuzz\server-test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)fuzz\server-test.exe @<<
fuzz\server.obj
fuzz\test-corpus.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST fuzz\server-test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)fuzz\server-test.exe.manifest $(MTOUTFLAG)fuzz\server-test.exe
fuzz\server.obj: "fuzz\server.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "fuzz\server.c"
fuzz\x509-test.exe: fuzz\test-corpus.obj fuzz\x509.obj libcrypto.lib
	IF EXIST fuzz\x509-test.exe.manifest DEL /F /Q fuzz\x509-test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)fuzz\x509-test.exe @<<
fuzz\test-corpus.obj
fuzz\x509.obj setargv.obj
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST fuzz\x509-test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)fuzz\x509-test.exe.manifest $(MTOUTFLAG)fuzz\x509-test.exe
fuzz\x509.obj: "fuzz\x509.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "fuzz\x509.c"
test\aborttest.exe: test\aborttest.obj libcrypto.lib
	IF EXIST test\aborttest.exe.manifest DEL /F /Q test\aborttest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\aborttest.exe @<<
test\aborttest.obj setargv.obj
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\aborttest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\aborttest.exe.manifest $(MTOUTFLAG)test\aborttest.exe
test\aborttest.obj: "test\aborttest.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\aborttest.c"
test\afalgtest.exe: test\afalgtest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\afalgtest.exe.manifest DEL /F /Q test\afalgtest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\afalgtest.exe @<<
test\afalgtest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\afalgtest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\afalgtest.exe.manifest $(MTOUTFLAG)test\afalgtest.exe
test\afalgtest.obj: "test\afalgtest.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\afalgtest.c"
test\asn1_encode_test.exe: test\asn1_encode_test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\asn1_encode_test.exe.manifest DEL /F /Q test\asn1_encode_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\asn1_encode_test.exe @<<
test\asn1_encode_test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\asn1_encode_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\asn1_encode_test.exe.manifest $(MTOUTFLAG)test\asn1_encode_test.exe
test\asn1_encode_test.obj: "test\asn1_encode_test.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\asn1_encode_test.c"
test\asn1_string_table_test.exe: test\asn1_string_table_test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\asn1_string_table_test.exe.manifest DEL /F /Q test\asn1_string_table_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\asn1_string_table_test.exe @<<
test\asn1_string_table_test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\asn1_string_table_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\asn1_string_table_test.exe.manifest $(MTOUTFLAG)test\asn1_string_table_test.exe
test\asn1_string_table_test.obj: "test\asn1_string_table_test.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\asn1_string_table_test.c"
test\asn1_time_test.exe: test\asn1_time_test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\asn1_time_test.exe.manifest DEL /F /Q test\asn1_time_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\asn1_time_test.exe @<<
test\asn1_time_test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\asn1_time_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\asn1_time_test.exe.manifest $(MTOUTFLAG)test\asn1_time_test.exe
test\asn1_time_test.obj: "test\asn1_time_test.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\asn1_time_test.c"
test\asynciotest.exe: test\asynciotest.obj test\ssltestlib.obj libssl.lib test\libtestutil.lib libcrypto.lib
	IF EXIST test\asynciotest.exe.manifest DEL /F /Q test\asynciotest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\asynciotest.exe @<<
test\asynciotest.obj
test\ssltestlib.obj setargv.obj
libssl.lib
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\asynciotest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\asynciotest.exe.manifest $(MTOUTFLAG)test\asynciotest.exe
test\asynciotest.obj: "test\asynciotest.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\asynciotest.c"
test\ssltestlib.obj: "test\ssltestlib.c"
	$(CC)  /I "include" /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\ssltestlib.c"
test\asynctest.exe: test\asynctest.obj libcrypto.lib
	IF EXIST test\asynctest.exe.manifest DEL /F /Q test\asynctest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\asynctest.exe @<<
test\asynctest.obj setargv.obj
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\asynctest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\asynctest.exe.manifest $(MTOUTFLAG)test\asynctest.exe
test\asynctest.obj: "test\asynctest.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\asynctest.c"
test\bad_dtls_test.exe: test\bad_dtls_test.obj libssl.lib test\libtestutil.lib libcrypto.lib
	IF EXIST test\bad_dtls_test.exe.manifest DEL /F /Q test\bad_dtls_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\bad_dtls_test.exe @<<
test\bad_dtls_test.obj setargv.obj
libssl.lib
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\bad_dtls_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\bad_dtls_test.exe.manifest $(MTOUTFLAG)test\bad_dtls_test.exe
test\bad_dtls_test.obj: "test\bad_dtls_test.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\bad_dtls_test.c"
test\bftest.exe: test\bftest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\bftest.exe.manifest DEL /F /Q test\bftest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\bftest.exe @<<
test\bftest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\bftest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\bftest.exe.manifest $(MTOUTFLAG)test\bftest.exe
test\bftest.obj: "test\bftest.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\bftest.c"
test\bio_enc_test.exe: test\bio_enc_test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\bio_enc_test.exe.manifest DEL /F /Q test\bio_enc_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\bio_enc_test.exe @<<
test\bio_enc_test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\bio_enc_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\bio_enc_test.exe.manifest $(MTOUTFLAG)test\bio_enc_test.exe
test\bio_enc_test.obj: "test\bio_enc_test.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\bio_enc_test.c"
test\bioprinttest.exe: test\bioprinttest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\bioprinttest.exe.manifest DEL /F /Q test\bioprinttest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\bioprinttest.exe @<<
test\bioprinttest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\bioprinttest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\bioprinttest.exe.manifest $(MTOUTFLAG)test\bioprinttest.exe
test\bioprinttest.obj: "test\bioprinttest.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\bioprinttest.c"
test\bntest.exe: test\bntest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\bntest.exe.manifest DEL /F /Q test\bntest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\bntest.exe @<<
test\bntest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\bntest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\bntest.exe.manifest $(MTOUTFLAG)test\bntest.exe
test\bntest.obj: "test\bntest.c"
	$(CC)  /I "." /I "crypto\include" /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\bntest.c"
test\buildtest_aes.exe: test\buildtest_aes.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_aes.exe.manifest DEL /F /Q test\buildtest_aes.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_aes.exe @<<
test\buildtest_aes.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_aes.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_aes.exe.manifest $(MTOUTFLAG)test\buildtest_aes.exe
test\buildtest_aes.obj: "test\buildtest_aes.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_aes.c"
test\buildtest_aes.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "aes" > $@
test\buildtest_asn1.exe: test\buildtest_asn1.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_asn1.exe.manifest DEL /F /Q test\buildtest_asn1.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_asn1.exe @<<
test\buildtest_asn1.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_asn1.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_asn1.exe.manifest $(MTOUTFLAG)test\buildtest_asn1.exe
test\buildtest_asn1.obj: "test\buildtest_asn1.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_asn1.c"
test\buildtest_asn1.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "asn1" > $@
test\buildtest_asn1err.exe: test\buildtest_asn1err.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_asn1err.exe.manifest DEL /F /Q test\buildtest_asn1err.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_asn1err.exe @<<
test\buildtest_asn1err.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_asn1err.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_asn1err.exe.manifest $(MTOUTFLAG)test\buildtest_asn1err.exe
test\buildtest_asn1err.obj: "test\buildtest_asn1err.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_asn1err.c"
test\buildtest_asn1err.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "asn1err" > $@
test\buildtest_asn1t.exe: test\buildtest_asn1t.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_asn1t.exe.manifest DEL /F /Q test\buildtest_asn1t.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_asn1t.exe @<<
test\buildtest_asn1t.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_asn1t.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_asn1t.exe.manifest $(MTOUTFLAG)test\buildtest_asn1t.exe
test\buildtest_asn1t.obj: "test\buildtest_asn1t.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_asn1t.c"
test\buildtest_asn1t.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "asn1t" > $@
test\buildtest_async.exe: test\buildtest_async.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_async.exe.manifest DEL /F /Q test\buildtest_async.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_async.exe @<<
test\buildtest_async.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_async.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_async.exe.manifest $(MTOUTFLAG)test\buildtest_async.exe
test\buildtest_async.obj: "test\buildtest_async.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_async.c"
test\buildtest_async.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "async" > $@
test\buildtest_asyncerr.exe: test\buildtest_asyncerr.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_asyncerr.exe.manifest DEL /F /Q test\buildtest_asyncerr.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_asyncerr.exe @<<
test\buildtest_asyncerr.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_asyncerr.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_asyncerr.exe.manifest $(MTOUTFLAG)test\buildtest_asyncerr.exe
test\buildtest_asyncerr.obj: "test\buildtest_asyncerr.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_asyncerr.c"
test\buildtest_asyncerr.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "asyncerr" > $@
test\buildtest_bio.exe: test\buildtest_bio.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_bio.exe.manifest DEL /F /Q test\buildtest_bio.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_bio.exe @<<
test\buildtest_bio.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_bio.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_bio.exe.manifest $(MTOUTFLAG)test\buildtest_bio.exe
test\buildtest_bio.obj: "test\buildtest_bio.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_bio.c"
test\buildtest_bio.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "bio" > $@
test\buildtest_bioerr.exe: test\buildtest_bioerr.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_bioerr.exe.manifest DEL /F /Q test\buildtest_bioerr.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_bioerr.exe @<<
test\buildtest_bioerr.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_bioerr.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_bioerr.exe.manifest $(MTOUTFLAG)test\buildtest_bioerr.exe
test\buildtest_bioerr.obj: "test\buildtest_bioerr.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_bioerr.c"
test\buildtest_bioerr.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "bioerr" > $@
test\buildtest_blowfish.exe: test\buildtest_blowfish.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_blowfish.exe.manifest DEL /F /Q test\buildtest_blowfish.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_blowfish.exe @<<
test\buildtest_blowfish.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_blowfish.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_blowfish.exe.manifest $(MTOUTFLAG)test\buildtest_blowfish.exe
test\buildtest_blowfish.obj: "test\buildtest_blowfish.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_blowfish.c"
test\buildtest_blowfish.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "blowfish" > $@
test\buildtest_bn.exe: test\buildtest_bn.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_bn.exe.manifest DEL /F /Q test\buildtest_bn.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_bn.exe @<<
test\buildtest_bn.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_bn.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_bn.exe.manifest $(MTOUTFLAG)test\buildtest_bn.exe
test\buildtest_bn.obj: "test\buildtest_bn.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_bn.c"
test\buildtest_bn.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "bn" > $@
test\buildtest_bnerr.exe: test\buildtest_bnerr.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_bnerr.exe.manifest DEL /F /Q test\buildtest_bnerr.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_bnerr.exe @<<
test\buildtest_bnerr.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_bnerr.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_bnerr.exe.manifest $(MTOUTFLAG)test\buildtest_bnerr.exe
test\buildtest_bnerr.obj: "test\buildtest_bnerr.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_bnerr.c"
test\buildtest_bnerr.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "bnerr" > $@
test\buildtest_buffer.exe: test\buildtest_buffer.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_buffer.exe.manifest DEL /F /Q test\buildtest_buffer.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_buffer.exe @<<
test\buildtest_buffer.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_buffer.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_buffer.exe.manifest $(MTOUTFLAG)test\buildtest_buffer.exe
test\buildtest_buffer.obj: "test\buildtest_buffer.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_buffer.c"
test\buildtest_buffer.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "buffer" > $@
test\buildtest_buffererr.exe: test\buildtest_buffererr.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_buffererr.exe.manifest DEL /F /Q test\buildtest_buffererr.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_buffererr.exe @<<
test\buildtest_buffererr.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_buffererr.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_buffererr.exe.manifest $(MTOUTFLAG)test\buildtest_buffererr.exe
test\buildtest_buffererr.obj: "test\buildtest_buffererr.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_buffererr.c"
test\buildtest_buffererr.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "buffererr" > $@
test\buildtest_camellia.exe: test\buildtest_camellia.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_camellia.exe.manifest DEL /F /Q test\buildtest_camellia.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_camellia.exe @<<
test\buildtest_camellia.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_camellia.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_camellia.exe.manifest $(MTOUTFLAG)test\buildtest_camellia.exe
test\buildtest_camellia.obj: "test\buildtest_camellia.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_camellia.c"
test\buildtest_camellia.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "camellia" > $@
test\buildtest_cast.exe: test\buildtest_cast.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_cast.exe.manifest DEL /F /Q test\buildtest_cast.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_cast.exe @<<
test\buildtest_cast.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_cast.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_cast.exe.manifest $(MTOUTFLAG)test\buildtest_cast.exe
test\buildtest_cast.obj: "test\buildtest_cast.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_cast.c"
test\buildtest_cast.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "cast" > $@
test\buildtest_cmac.exe: test\buildtest_cmac.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_cmac.exe.manifest DEL /F /Q test\buildtest_cmac.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_cmac.exe @<<
test\buildtest_cmac.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_cmac.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_cmac.exe.manifest $(MTOUTFLAG)test\buildtest_cmac.exe
test\buildtest_cmac.obj: "test\buildtest_cmac.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_cmac.c"
test\buildtest_cmac.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "cmac" > $@
test\buildtest_cms.exe: test\buildtest_cms.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_cms.exe.manifest DEL /F /Q test\buildtest_cms.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_cms.exe @<<
test\buildtest_cms.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_cms.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_cms.exe.manifest $(MTOUTFLAG)test\buildtest_cms.exe
test\buildtest_cms.obj: "test\buildtest_cms.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_cms.c"
test\buildtest_cms.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "cms" > $@
test\buildtest_cmserr.exe: test\buildtest_cmserr.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_cmserr.exe.manifest DEL /F /Q test\buildtest_cmserr.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_cmserr.exe @<<
test\buildtest_cmserr.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_cmserr.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_cmserr.exe.manifest $(MTOUTFLAG)test\buildtest_cmserr.exe
test\buildtest_cmserr.obj: "test\buildtest_cmserr.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_cmserr.c"
test\buildtest_cmserr.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "cmserr" > $@
test\buildtest_comp.exe: test\buildtest_comp.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_comp.exe.manifest DEL /F /Q test\buildtest_comp.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_comp.exe @<<
test\buildtest_comp.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_comp.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_comp.exe.manifest $(MTOUTFLAG)test\buildtest_comp.exe
test\buildtest_comp.obj: "test\buildtest_comp.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_comp.c"
test\buildtest_comp.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "comp" > $@
test\buildtest_comperr.exe: test\buildtest_comperr.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_comperr.exe.manifest DEL /F /Q test\buildtest_comperr.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_comperr.exe @<<
test\buildtest_comperr.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_comperr.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_comperr.exe.manifest $(MTOUTFLAG)test\buildtest_comperr.exe
test\buildtest_comperr.obj: "test\buildtest_comperr.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_comperr.c"
test\buildtest_comperr.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "comperr" > $@
test\buildtest_conf.exe: test\buildtest_conf.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_conf.exe.manifest DEL /F /Q test\buildtest_conf.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_conf.exe @<<
test\buildtest_conf.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_conf.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_conf.exe.manifest $(MTOUTFLAG)test\buildtest_conf.exe
test\buildtest_conf.obj: "test\buildtest_conf.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_conf.c"
test\buildtest_conf.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "conf" > $@
test\buildtest_conf_api.exe: test\buildtest_conf_api.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_conf_api.exe.manifest DEL /F /Q test\buildtest_conf_api.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_conf_api.exe @<<
test\buildtest_conf_api.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_conf_api.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_conf_api.exe.manifest $(MTOUTFLAG)test\buildtest_conf_api.exe
test\buildtest_conf_api.obj: "test\buildtest_conf_api.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_conf_api.c"
test\buildtest_conf_api.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "conf_api" > $@
test\buildtest_conferr.exe: test\buildtest_conferr.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_conferr.exe.manifest DEL /F /Q test\buildtest_conferr.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_conferr.exe @<<
test\buildtest_conferr.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_conferr.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_conferr.exe.manifest $(MTOUTFLAG)test\buildtest_conferr.exe
test\buildtest_conferr.obj: "test\buildtest_conferr.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_conferr.c"
test\buildtest_conferr.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "conferr" > $@
test\buildtest_crypto.exe: test\buildtest_crypto.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_crypto.exe.manifest DEL /F /Q test\buildtest_crypto.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_crypto.exe @<<
test\buildtest_crypto.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_crypto.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_crypto.exe.manifest $(MTOUTFLAG)test\buildtest_crypto.exe
test\buildtest_crypto.obj: "test\buildtest_crypto.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_crypto.c"
test\buildtest_crypto.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "crypto" > $@
test\buildtest_cryptoerr.exe: test\buildtest_cryptoerr.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_cryptoerr.exe.manifest DEL /F /Q test\buildtest_cryptoerr.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_cryptoerr.exe @<<
test\buildtest_cryptoerr.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_cryptoerr.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_cryptoerr.exe.manifest $(MTOUTFLAG)test\buildtest_cryptoerr.exe
test\buildtest_cryptoerr.obj: "test\buildtest_cryptoerr.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_cryptoerr.c"
test\buildtest_cryptoerr.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "cryptoerr" > $@
test\buildtest_ct.exe: test\buildtest_ct.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_ct.exe.manifest DEL /F /Q test\buildtest_ct.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_ct.exe @<<
test\buildtest_ct.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_ct.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_ct.exe.manifest $(MTOUTFLAG)test\buildtest_ct.exe
test\buildtest_ct.obj: "test\buildtest_ct.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_ct.c"
test\buildtest_ct.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "ct" > $@
test\buildtest_cterr.exe: test\buildtest_cterr.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_cterr.exe.manifest DEL /F /Q test\buildtest_cterr.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_cterr.exe @<<
test\buildtest_cterr.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_cterr.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_cterr.exe.manifest $(MTOUTFLAG)test\buildtest_cterr.exe
test\buildtest_cterr.obj: "test\buildtest_cterr.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_cterr.c"
test\buildtest_cterr.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "cterr" > $@
test\buildtest_des.exe: test\buildtest_des.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_des.exe.manifest DEL /F /Q test\buildtest_des.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_des.exe @<<
test\buildtest_des.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_des.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_des.exe.manifest $(MTOUTFLAG)test\buildtest_des.exe
test\buildtest_des.obj: "test\buildtest_des.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_des.c"
test\buildtest_des.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "des" > $@
test\buildtest_dh.exe: test\buildtest_dh.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_dh.exe.manifest DEL /F /Q test\buildtest_dh.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_dh.exe @<<
test\buildtest_dh.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_dh.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_dh.exe.manifest $(MTOUTFLAG)test\buildtest_dh.exe
test\buildtest_dh.obj: "test\buildtest_dh.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_dh.c"
test\buildtest_dh.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "dh" > $@
test\buildtest_dherr.exe: test\buildtest_dherr.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_dherr.exe.manifest DEL /F /Q test\buildtest_dherr.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_dherr.exe @<<
test\buildtest_dherr.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_dherr.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_dherr.exe.manifest $(MTOUTFLAG)test\buildtest_dherr.exe
test\buildtest_dherr.obj: "test\buildtest_dherr.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_dherr.c"
test\buildtest_dherr.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "dherr" > $@
test\buildtest_dsa.exe: test\buildtest_dsa.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_dsa.exe.manifest DEL /F /Q test\buildtest_dsa.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_dsa.exe @<<
test\buildtest_dsa.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_dsa.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_dsa.exe.manifest $(MTOUTFLAG)test\buildtest_dsa.exe
test\buildtest_dsa.obj: "test\buildtest_dsa.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_dsa.c"
test\buildtest_dsa.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "dsa" > $@
test\buildtest_dsaerr.exe: test\buildtest_dsaerr.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_dsaerr.exe.manifest DEL /F /Q test\buildtest_dsaerr.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_dsaerr.exe @<<
test\buildtest_dsaerr.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_dsaerr.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_dsaerr.exe.manifest $(MTOUTFLAG)test\buildtest_dsaerr.exe
test\buildtest_dsaerr.obj: "test\buildtest_dsaerr.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_dsaerr.c"
test\buildtest_dsaerr.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "dsaerr" > $@
test\buildtest_dtls1.exe: test\buildtest_dtls1.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_dtls1.exe.manifest DEL /F /Q test\buildtest_dtls1.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_dtls1.exe @<<
test\buildtest_dtls1.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_dtls1.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_dtls1.exe.manifest $(MTOUTFLAG)test\buildtest_dtls1.exe
test\buildtest_dtls1.obj: "test\buildtest_dtls1.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_dtls1.c"
test\buildtest_dtls1.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "dtls1" > $@
test\buildtest_e_os2.exe: test\buildtest_e_os2.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_e_os2.exe.manifest DEL /F /Q test\buildtest_e_os2.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_e_os2.exe @<<
test\buildtest_e_os2.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_e_os2.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_e_os2.exe.manifest $(MTOUTFLAG)test\buildtest_e_os2.exe
test\buildtest_e_os2.obj: "test\buildtest_e_os2.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_e_os2.c"
test\buildtest_e_os2.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "e_os2" > $@
test\buildtest_ebcdic.exe: test\buildtest_ebcdic.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_ebcdic.exe.manifest DEL /F /Q test\buildtest_ebcdic.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_ebcdic.exe @<<
test\buildtest_ebcdic.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_ebcdic.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_ebcdic.exe.manifest $(MTOUTFLAG)test\buildtest_ebcdic.exe
test\buildtest_ebcdic.obj: "test\buildtest_ebcdic.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_ebcdic.c"
test\buildtest_ebcdic.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "ebcdic" > $@
test\buildtest_ec.exe: test\buildtest_ec.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_ec.exe.manifest DEL /F /Q test\buildtest_ec.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_ec.exe @<<
test\buildtest_ec.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_ec.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_ec.exe.manifest $(MTOUTFLAG)test\buildtest_ec.exe
test\buildtest_ec.obj: "test\buildtest_ec.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_ec.c"
test\buildtest_ec.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "ec" > $@
test\buildtest_ecdh.exe: test\buildtest_ecdh.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_ecdh.exe.manifest DEL /F /Q test\buildtest_ecdh.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_ecdh.exe @<<
test\buildtest_ecdh.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_ecdh.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_ecdh.exe.manifest $(MTOUTFLAG)test\buildtest_ecdh.exe
test\buildtest_ecdh.obj: "test\buildtest_ecdh.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_ecdh.c"
test\buildtest_ecdh.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "ecdh" > $@
test\buildtest_ecdsa.exe: test\buildtest_ecdsa.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_ecdsa.exe.manifest DEL /F /Q test\buildtest_ecdsa.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_ecdsa.exe @<<
test\buildtest_ecdsa.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_ecdsa.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_ecdsa.exe.manifest $(MTOUTFLAG)test\buildtest_ecdsa.exe
test\buildtest_ecdsa.obj: "test\buildtest_ecdsa.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_ecdsa.c"
test\buildtest_ecdsa.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "ecdsa" > $@
test\buildtest_ecerr.exe: test\buildtest_ecerr.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_ecerr.exe.manifest DEL /F /Q test\buildtest_ecerr.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_ecerr.exe @<<
test\buildtest_ecerr.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_ecerr.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_ecerr.exe.manifest $(MTOUTFLAG)test\buildtest_ecerr.exe
test\buildtest_ecerr.obj: "test\buildtest_ecerr.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_ecerr.c"
test\buildtest_ecerr.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "ecerr" > $@
test\buildtest_engine.exe: test\buildtest_engine.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_engine.exe.manifest DEL /F /Q test\buildtest_engine.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_engine.exe @<<
test\buildtest_engine.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_engine.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_engine.exe.manifest $(MTOUTFLAG)test\buildtest_engine.exe
test\buildtest_engine.obj: "test\buildtest_engine.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_engine.c"
test\buildtest_engine.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "engine" > $@
test\buildtest_engineerr.exe: test\buildtest_engineerr.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_engineerr.exe.manifest DEL /F /Q test\buildtest_engineerr.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_engineerr.exe @<<
test\buildtest_engineerr.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_engineerr.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_engineerr.exe.manifest $(MTOUTFLAG)test\buildtest_engineerr.exe
test\buildtest_engineerr.obj: "test\buildtest_engineerr.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_engineerr.c"
test\buildtest_engineerr.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "engineerr" > $@
test\buildtest_err.exe: test\buildtest_err.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_err.exe.manifest DEL /F /Q test\buildtest_err.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_err.exe @<<
test\buildtest_err.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_err.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_err.exe.manifest $(MTOUTFLAG)test\buildtest_err.exe
test\buildtest_err.obj: "test\buildtest_err.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_err.c"
test\buildtest_err.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "err" > $@
test\buildtest_evp.exe: test\buildtest_evp.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_evp.exe.manifest DEL /F /Q test\buildtest_evp.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_evp.exe @<<
test\buildtest_evp.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_evp.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_evp.exe.manifest $(MTOUTFLAG)test\buildtest_evp.exe
test\buildtest_evp.obj: "test\buildtest_evp.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_evp.c"
test\buildtest_evp.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "evp" > $@
test\buildtest_evperr.exe: test\buildtest_evperr.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_evperr.exe.manifest DEL /F /Q test\buildtest_evperr.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_evperr.exe @<<
test\buildtest_evperr.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_evperr.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_evperr.exe.manifest $(MTOUTFLAG)test\buildtest_evperr.exe
test\buildtest_evperr.obj: "test\buildtest_evperr.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_evperr.c"
test\buildtest_evperr.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "evperr" > $@
test\buildtest_hmac.exe: test\buildtest_hmac.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_hmac.exe.manifest DEL /F /Q test\buildtest_hmac.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_hmac.exe @<<
test\buildtest_hmac.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_hmac.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_hmac.exe.manifest $(MTOUTFLAG)test\buildtest_hmac.exe
test\buildtest_hmac.obj: "test\buildtest_hmac.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_hmac.c"
test\buildtest_hmac.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "hmac" > $@
test\buildtest_idea.exe: test\buildtest_idea.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_idea.exe.manifest DEL /F /Q test\buildtest_idea.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_idea.exe @<<
test\buildtest_idea.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_idea.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_idea.exe.manifest $(MTOUTFLAG)test\buildtest_idea.exe
test\buildtest_idea.obj: "test\buildtest_idea.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_idea.c"
test\buildtest_idea.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "idea" > $@
test\buildtest_kdf.exe: test\buildtest_kdf.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_kdf.exe.manifest DEL /F /Q test\buildtest_kdf.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_kdf.exe @<<
test\buildtest_kdf.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_kdf.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_kdf.exe.manifest $(MTOUTFLAG)test\buildtest_kdf.exe
test\buildtest_kdf.obj: "test\buildtest_kdf.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_kdf.c"
test\buildtest_kdf.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "kdf" > $@
test\buildtest_kdferr.exe: test\buildtest_kdferr.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_kdferr.exe.manifest DEL /F /Q test\buildtest_kdferr.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_kdferr.exe @<<
test\buildtest_kdferr.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_kdferr.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_kdferr.exe.manifest $(MTOUTFLAG)test\buildtest_kdferr.exe
test\buildtest_kdferr.obj: "test\buildtest_kdferr.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_kdferr.c"
test\buildtest_kdferr.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "kdferr" > $@
test\buildtest_lhash.exe: test\buildtest_lhash.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_lhash.exe.manifest DEL /F /Q test\buildtest_lhash.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_lhash.exe @<<
test\buildtest_lhash.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_lhash.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_lhash.exe.manifest $(MTOUTFLAG)test\buildtest_lhash.exe
test\buildtest_lhash.obj: "test\buildtest_lhash.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_lhash.c"
test\buildtest_lhash.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "lhash" > $@
test\buildtest_md4.exe: test\buildtest_md4.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_md4.exe.manifest DEL /F /Q test\buildtest_md4.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_md4.exe @<<
test\buildtest_md4.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_md4.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_md4.exe.manifest $(MTOUTFLAG)test\buildtest_md4.exe
test\buildtest_md4.obj: "test\buildtest_md4.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_md4.c"
test\buildtest_md4.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "md4" > $@
test\buildtest_md5.exe: test\buildtest_md5.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_md5.exe.manifest DEL /F /Q test\buildtest_md5.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_md5.exe @<<
test\buildtest_md5.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_md5.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_md5.exe.manifest $(MTOUTFLAG)test\buildtest_md5.exe
test\buildtest_md5.obj: "test\buildtest_md5.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_md5.c"
test\buildtest_md5.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "md5" > $@
test\buildtest_mdc2.exe: test\buildtest_mdc2.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_mdc2.exe.manifest DEL /F /Q test\buildtest_mdc2.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_mdc2.exe @<<
test\buildtest_mdc2.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_mdc2.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_mdc2.exe.manifest $(MTOUTFLAG)test\buildtest_mdc2.exe
test\buildtest_mdc2.obj: "test\buildtest_mdc2.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_mdc2.c"
test\buildtest_mdc2.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "mdc2" > $@
test\buildtest_modes.exe: test\buildtest_modes.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_modes.exe.manifest DEL /F /Q test\buildtest_modes.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_modes.exe @<<
test\buildtest_modes.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_modes.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_modes.exe.manifest $(MTOUTFLAG)test\buildtest_modes.exe
test\buildtest_modes.obj: "test\buildtest_modes.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_modes.c"
test\buildtest_modes.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "modes" > $@
test\buildtest_obj_mac.exe: test\buildtest_obj_mac.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_obj_mac.exe.manifest DEL /F /Q test\buildtest_obj_mac.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_obj_mac.exe @<<
test\buildtest_obj_mac.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_obj_mac.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_obj_mac.exe.manifest $(MTOUTFLAG)test\buildtest_obj_mac.exe
test\buildtest_obj_mac.obj: "test\buildtest_obj_mac.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_obj_mac.c"
test\buildtest_obj_mac.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "obj_mac" > $@
test\buildtest_objects.exe: test\buildtest_objects.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_objects.exe.manifest DEL /F /Q test\buildtest_objects.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_objects.exe @<<
test\buildtest_objects.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_objects.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_objects.exe.manifest $(MTOUTFLAG)test\buildtest_objects.exe
test\buildtest_objects.obj: "test\buildtest_objects.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_objects.c"
test\buildtest_objects.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "objects" > $@
test\buildtest_objectserr.exe: test\buildtest_objectserr.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_objectserr.exe.manifest DEL /F /Q test\buildtest_objectserr.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_objectserr.exe @<<
test\buildtest_objectserr.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_objectserr.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_objectserr.exe.manifest $(MTOUTFLAG)test\buildtest_objectserr.exe
test\buildtest_objectserr.obj: "test\buildtest_objectserr.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_objectserr.c"
test\buildtest_objectserr.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "objectserr" > $@
test\buildtest_ocsp.exe: test\buildtest_ocsp.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_ocsp.exe.manifest DEL /F /Q test\buildtest_ocsp.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_ocsp.exe @<<
test\buildtest_ocsp.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_ocsp.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_ocsp.exe.manifest $(MTOUTFLAG)test\buildtest_ocsp.exe
test\buildtest_ocsp.obj: "test\buildtest_ocsp.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_ocsp.c"
test\buildtest_ocsp.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "ocsp" > $@
test\buildtest_ocsperr.exe: test\buildtest_ocsperr.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_ocsperr.exe.manifest DEL /F /Q test\buildtest_ocsperr.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_ocsperr.exe @<<
test\buildtest_ocsperr.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_ocsperr.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_ocsperr.exe.manifest $(MTOUTFLAG)test\buildtest_ocsperr.exe
test\buildtest_ocsperr.obj: "test\buildtest_ocsperr.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_ocsperr.c"
test\buildtest_ocsperr.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "ocsperr" > $@
test\buildtest_opensslv.exe: test\buildtest_opensslv.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_opensslv.exe.manifest DEL /F /Q test\buildtest_opensslv.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_opensslv.exe @<<
test\buildtest_opensslv.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_opensslv.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_opensslv.exe.manifest $(MTOUTFLAG)test\buildtest_opensslv.exe
test\buildtest_opensslv.obj: "test\buildtest_opensslv.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_opensslv.c"
test\buildtest_opensslv.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "opensslv" > $@
test\buildtest_ossl_typ.exe: test\buildtest_ossl_typ.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_ossl_typ.exe.manifest DEL /F /Q test\buildtest_ossl_typ.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_ossl_typ.exe @<<
test\buildtest_ossl_typ.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_ossl_typ.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_ossl_typ.exe.manifest $(MTOUTFLAG)test\buildtest_ossl_typ.exe
test\buildtest_ossl_typ.obj: "test\buildtest_ossl_typ.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_ossl_typ.c"
test\buildtest_ossl_typ.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "ossl_typ" > $@
test\buildtest_pem.exe: test\buildtest_pem.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_pem.exe.manifest DEL /F /Q test\buildtest_pem.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_pem.exe @<<
test\buildtest_pem.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_pem.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_pem.exe.manifest $(MTOUTFLAG)test\buildtest_pem.exe
test\buildtest_pem.obj: "test\buildtest_pem.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_pem.c"
test\buildtest_pem.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "pem" > $@
test\buildtest_pem2.exe: test\buildtest_pem2.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_pem2.exe.manifest DEL /F /Q test\buildtest_pem2.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_pem2.exe @<<
test\buildtest_pem2.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_pem2.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_pem2.exe.manifest $(MTOUTFLAG)test\buildtest_pem2.exe
test\buildtest_pem2.obj: "test\buildtest_pem2.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_pem2.c"
test\buildtest_pem2.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "pem2" > $@
test\buildtest_pemerr.exe: test\buildtest_pemerr.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_pemerr.exe.manifest DEL /F /Q test\buildtest_pemerr.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_pemerr.exe @<<
test\buildtest_pemerr.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_pemerr.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_pemerr.exe.manifest $(MTOUTFLAG)test\buildtest_pemerr.exe
test\buildtest_pemerr.obj: "test\buildtest_pemerr.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_pemerr.c"
test\buildtest_pemerr.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "pemerr" > $@
test\buildtest_pkcs12.exe: test\buildtest_pkcs12.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_pkcs12.exe.manifest DEL /F /Q test\buildtest_pkcs12.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_pkcs12.exe @<<
test\buildtest_pkcs12.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_pkcs12.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_pkcs12.exe.manifest $(MTOUTFLAG)test\buildtest_pkcs12.exe
test\buildtest_pkcs12.obj: "test\buildtest_pkcs12.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_pkcs12.c"
test\buildtest_pkcs12.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "pkcs12" > $@
test\buildtest_pkcs12err.exe: test\buildtest_pkcs12err.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_pkcs12err.exe.manifest DEL /F /Q test\buildtest_pkcs12err.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_pkcs12err.exe @<<
test\buildtest_pkcs12err.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_pkcs12err.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_pkcs12err.exe.manifest $(MTOUTFLAG)test\buildtest_pkcs12err.exe
test\buildtest_pkcs12err.obj: "test\buildtest_pkcs12err.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_pkcs12err.c"
test\buildtest_pkcs12err.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "pkcs12err" > $@
test\buildtest_pkcs7.exe: test\buildtest_pkcs7.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_pkcs7.exe.manifest DEL /F /Q test\buildtest_pkcs7.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_pkcs7.exe @<<
test\buildtest_pkcs7.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_pkcs7.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_pkcs7.exe.manifest $(MTOUTFLAG)test\buildtest_pkcs7.exe
test\buildtest_pkcs7.obj: "test\buildtest_pkcs7.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_pkcs7.c"
test\buildtest_pkcs7.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "pkcs7" > $@
test\buildtest_pkcs7err.exe: test\buildtest_pkcs7err.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_pkcs7err.exe.manifest DEL /F /Q test\buildtest_pkcs7err.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_pkcs7err.exe @<<
test\buildtest_pkcs7err.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_pkcs7err.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_pkcs7err.exe.manifest $(MTOUTFLAG)test\buildtest_pkcs7err.exe
test\buildtest_pkcs7err.obj: "test\buildtest_pkcs7err.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_pkcs7err.c"
test\buildtest_pkcs7err.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "pkcs7err" > $@
test\buildtest_rand.exe: test\buildtest_rand.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_rand.exe.manifest DEL /F /Q test\buildtest_rand.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_rand.exe @<<
test\buildtest_rand.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_rand.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_rand.exe.manifest $(MTOUTFLAG)test\buildtest_rand.exe
test\buildtest_rand.obj: "test\buildtest_rand.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_rand.c"
test\buildtest_rand.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "rand" > $@
test\buildtest_randerr.exe: test\buildtest_randerr.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_randerr.exe.manifest DEL /F /Q test\buildtest_randerr.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_randerr.exe @<<
test\buildtest_randerr.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_randerr.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_randerr.exe.manifest $(MTOUTFLAG)test\buildtest_randerr.exe
test\buildtest_randerr.obj: "test\buildtest_randerr.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_randerr.c"
test\buildtest_randerr.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "randerr" > $@
test\buildtest_rc2.exe: test\buildtest_rc2.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_rc2.exe.manifest DEL /F /Q test\buildtest_rc2.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_rc2.exe @<<
test\buildtest_rc2.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_rc2.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_rc2.exe.manifest $(MTOUTFLAG)test\buildtest_rc2.exe
test\buildtest_rc2.obj: "test\buildtest_rc2.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_rc2.c"
test\buildtest_rc2.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "rc2" > $@
test\buildtest_rc4.exe: test\buildtest_rc4.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_rc4.exe.manifest DEL /F /Q test\buildtest_rc4.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_rc4.exe @<<
test\buildtest_rc4.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_rc4.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_rc4.exe.manifest $(MTOUTFLAG)test\buildtest_rc4.exe
test\buildtest_rc4.obj: "test\buildtest_rc4.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_rc4.c"
test\buildtest_rc4.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "rc4" > $@
test\buildtest_ripemd.exe: test\buildtest_ripemd.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_ripemd.exe.manifest DEL /F /Q test\buildtest_ripemd.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_ripemd.exe @<<
test\buildtest_ripemd.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_ripemd.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_ripemd.exe.manifest $(MTOUTFLAG)test\buildtest_ripemd.exe
test\buildtest_ripemd.obj: "test\buildtest_ripemd.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_ripemd.c"
test\buildtest_ripemd.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "ripemd" > $@
test\buildtest_rsa.exe: test\buildtest_rsa.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_rsa.exe.manifest DEL /F /Q test\buildtest_rsa.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_rsa.exe @<<
test\buildtest_rsa.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_rsa.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_rsa.exe.manifest $(MTOUTFLAG)test\buildtest_rsa.exe
test\buildtest_rsa.obj: "test\buildtest_rsa.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_rsa.c"
test\buildtest_rsa.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "rsa" > $@
test\buildtest_rsaerr.exe: test\buildtest_rsaerr.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_rsaerr.exe.manifest DEL /F /Q test\buildtest_rsaerr.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_rsaerr.exe @<<
test\buildtest_rsaerr.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_rsaerr.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_rsaerr.exe.manifest $(MTOUTFLAG)test\buildtest_rsaerr.exe
test\buildtest_rsaerr.obj: "test\buildtest_rsaerr.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_rsaerr.c"
test\buildtest_rsaerr.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "rsaerr" > $@
test\buildtest_safestack.exe: test\buildtest_safestack.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_safestack.exe.manifest DEL /F /Q test\buildtest_safestack.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_safestack.exe @<<
test\buildtest_safestack.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_safestack.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_safestack.exe.manifest $(MTOUTFLAG)test\buildtest_safestack.exe
test\buildtest_safestack.obj: "test\buildtest_safestack.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_safestack.c"
test\buildtest_safestack.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "safestack" > $@
test\buildtest_seed.exe: test\buildtest_seed.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_seed.exe.manifest DEL /F /Q test\buildtest_seed.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_seed.exe @<<
test\buildtest_seed.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_seed.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_seed.exe.manifest $(MTOUTFLAG)test\buildtest_seed.exe
test\buildtest_seed.obj: "test\buildtest_seed.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_seed.c"
test\buildtest_seed.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "seed" > $@
test\buildtest_sha.exe: test\buildtest_sha.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_sha.exe.manifest DEL /F /Q test\buildtest_sha.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_sha.exe @<<
test\buildtest_sha.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_sha.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_sha.exe.manifest $(MTOUTFLAG)test\buildtest_sha.exe
test\buildtest_sha.obj: "test\buildtest_sha.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_sha.c"
test\buildtest_sha.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "sha" > $@
test\buildtest_srp.exe: test\buildtest_srp.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_srp.exe.manifest DEL /F /Q test\buildtest_srp.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_srp.exe @<<
test\buildtest_srp.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_srp.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_srp.exe.manifest $(MTOUTFLAG)test\buildtest_srp.exe
test\buildtest_srp.obj: "test\buildtest_srp.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_srp.c"
test\buildtest_srp.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "srp" > $@
test\buildtest_srtp.exe: test\buildtest_srtp.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_srtp.exe.manifest DEL /F /Q test\buildtest_srtp.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_srtp.exe @<<
test\buildtest_srtp.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_srtp.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_srtp.exe.manifest $(MTOUTFLAG)test\buildtest_srtp.exe
test\buildtest_srtp.obj: "test\buildtest_srtp.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_srtp.c"
test\buildtest_srtp.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "srtp" > $@
test\buildtest_ssl.exe: test\buildtest_ssl.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_ssl.exe.manifest DEL /F /Q test\buildtest_ssl.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_ssl.exe @<<
test\buildtest_ssl.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_ssl.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_ssl.exe.manifest $(MTOUTFLAG)test\buildtest_ssl.exe
test\buildtest_ssl.obj: "test\buildtest_ssl.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_ssl.c"
test\buildtest_ssl.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "ssl" > $@
test\buildtest_ssl2.exe: test\buildtest_ssl2.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_ssl2.exe.manifest DEL /F /Q test\buildtest_ssl2.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_ssl2.exe @<<
test\buildtest_ssl2.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_ssl2.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_ssl2.exe.manifest $(MTOUTFLAG)test\buildtest_ssl2.exe
test\buildtest_ssl2.obj: "test\buildtest_ssl2.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_ssl2.c"
test\buildtest_ssl2.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "ssl2" > $@
test\buildtest_sslerr.exe: test\buildtest_sslerr.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_sslerr.exe.manifest DEL /F /Q test\buildtest_sslerr.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_sslerr.exe @<<
test\buildtest_sslerr.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_sslerr.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_sslerr.exe.manifest $(MTOUTFLAG)test\buildtest_sslerr.exe
test\buildtest_sslerr.obj: "test\buildtest_sslerr.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_sslerr.c"
test\buildtest_sslerr.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "sslerr" > $@
test\buildtest_stack.exe: test\buildtest_stack.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_stack.exe.manifest DEL /F /Q test\buildtest_stack.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_stack.exe @<<
test\buildtest_stack.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_stack.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_stack.exe.manifest $(MTOUTFLAG)test\buildtest_stack.exe
test\buildtest_stack.obj: "test\buildtest_stack.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_stack.c"
test\buildtest_stack.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "stack" > $@
test\buildtest_store.exe: test\buildtest_store.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_store.exe.manifest DEL /F /Q test\buildtest_store.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_store.exe @<<
test\buildtest_store.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_store.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_store.exe.manifest $(MTOUTFLAG)test\buildtest_store.exe
test\buildtest_store.obj: "test\buildtest_store.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_store.c"
test\buildtest_store.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "store" > $@
test\buildtest_storeerr.exe: test\buildtest_storeerr.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_storeerr.exe.manifest DEL /F /Q test\buildtest_storeerr.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_storeerr.exe @<<
test\buildtest_storeerr.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_storeerr.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_storeerr.exe.manifest $(MTOUTFLAG)test\buildtest_storeerr.exe
test\buildtest_storeerr.obj: "test\buildtest_storeerr.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_storeerr.c"
test\buildtest_storeerr.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "storeerr" > $@
test\buildtest_symhacks.exe: test\buildtest_symhacks.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_symhacks.exe.manifest DEL /F /Q test\buildtest_symhacks.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_symhacks.exe @<<
test\buildtest_symhacks.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_symhacks.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_symhacks.exe.manifest $(MTOUTFLAG)test\buildtest_symhacks.exe
test\buildtest_symhacks.obj: "test\buildtest_symhacks.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_symhacks.c"
test\buildtest_symhacks.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "symhacks" > $@
test\buildtest_tls1.exe: test\buildtest_tls1.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_tls1.exe.manifest DEL /F /Q test\buildtest_tls1.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_tls1.exe @<<
test\buildtest_tls1.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_tls1.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_tls1.exe.manifest $(MTOUTFLAG)test\buildtest_tls1.exe
test\buildtest_tls1.obj: "test\buildtest_tls1.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_tls1.c"
test\buildtest_tls1.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "tls1" > $@
test\buildtest_ts.exe: test\buildtest_ts.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_ts.exe.manifest DEL /F /Q test\buildtest_ts.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_ts.exe @<<
test\buildtest_ts.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_ts.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_ts.exe.manifest $(MTOUTFLAG)test\buildtest_ts.exe
test\buildtest_ts.obj: "test\buildtest_ts.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_ts.c"
test\buildtest_ts.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "ts" > $@
test\buildtest_tserr.exe: test\buildtest_tserr.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_tserr.exe.manifest DEL /F /Q test\buildtest_tserr.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_tserr.exe @<<
test\buildtest_tserr.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_tserr.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_tserr.exe.manifest $(MTOUTFLAG)test\buildtest_tserr.exe
test\buildtest_tserr.obj: "test\buildtest_tserr.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_tserr.c"
test\buildtest_tserr.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "tserr" > $@
test\buildtest_txt_db.exe: test\buildtest_txt_db.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_txt_db.exe.manifest DEL /F /Q test\buildtest_txt_db.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_txt_db.exe @<<
test\buildtest_txt_db.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_txt_db.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_txt_db.exe.manifest $(MTOUTFLAG)test\buildtest_txt_db.exe
test\buildtest_txt_db.obj: "test\buildtest_txt_db.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_txt_db.c"
test\buildtest_txt_db.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "txt_db" > $@
test\buildtest_ui.exe: test\buildtest_ui.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_ui.exe.manifest DEL /F /Q test\buildtest_ui.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_ui.exe @<<
test\buildtest_ui.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_ui.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_ui.exe.manifest $(MTOUTFLAG)test\buildtest_ui.exe
test\buildtest_ui.obj: "test\buildtest_ui.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_ui.c"
test\buildtest_ui.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "ui" > $@
test\buildtest_uierr.exe: test\buildtest_uierr.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_uierr.exe.manifest DEL /F /Q test\buildtest_uierr.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_uierr.exe @<<
test\buildtest_uierr.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_uierr.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_uierr.exe.manifest $(MTOUTFLAG)test\buildtest_uierr.exe
test\buildtest_uierr.obj: "test\buildtest_uierr.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_uierr.c"
test\buildtest_uierr.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "uierr" > $@
test\buildtest_whrlpool.exe: test\buildtest_whrlpool.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_whrlpool.exe.manifest DEL /F /Q test\buildtest_whrlpool.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_whrlpool.exe @<<
test\buildtest_whrlpool.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_whrlpool.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_whrlpool.exe.manifest $(MTOUTFLAG)test\buildtest_whrlpool.exe
test\buildtest_whrlpool.obj: "test\buildtest_whrlpool.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_whrlpool.c"
test\buildtest_whrlpool.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "whrlpool" > $@
test\buildtest_x509.exe: test\buildtest_x509.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_x509.exe.manifest DEL /F /Q test\buildtest_x509.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_x509.exe @<<
test\buildtest_x509.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_x509.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_x509.exe.manifest $(MTOUTFLAG)test\buildtest_x509.exe
test\buildtest_x509.obj: "test\buildtest_x509.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_x509.c"
test\buildtest_x509.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "x509" > $@
test\buildtest_x509_vfy.exe: test\buildtest_x509_vfy.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_x509_vfy.exe.manifest DEL /F /Q test\buildtest_x509_vfy.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_x509_vfy.exe @<<
test\buildtest_x509_vfy.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_x509_vfy.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_x509_vfy.exe.manifest $(MTOUTFLAG)test\buildtest_x509_vfy.exe
test\buildtest_x509_vfy.obj: "test\buildtest_x509_vfy.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_x509_vfy.c"
test\buildtest_x509_vfy.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "x509_vfy" > $@
test\buildtest_x509err.exe: test\buildtest_x509err.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_x509err.exe.manifest DEL /F /Q test\buildtest_x509err.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_x509err.exe @<<
test\buildtest_x509err.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_x509err.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_x509err.exe.manifest $(MTOUTFLAG)test\buildtest_x509err.exe
test\buildtest_x509err.obj: "test\buildtest_x509err.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_x509err.c"
test\buildtest_x509err.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "x509err" > $@
test\buildtest_x509v3.exe: test\buildtest_x509v3.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_x509v3.exe.manifest DEL /F /Q test\buildtest_x509v3.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_x509v3.exe @<<
test\buildtest_x509v3.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_x509v3.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_x509v3.exe.manifest $(MTOUTFLAG)test\buildtest_x509v3.exe
test\buildtest_x509v3.obj: "test\buildtest_x509v3.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_x509v3.c"
test\buildtest_x509v3.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "x509v3" > $@
test\buildtest_x509v3err.exe: test\buildtest_x509v3err.obj libssl.lib libcrypto.lib
	IF EXIST test\buildtest_x509v3err.exe.manifest DEL /F /Q test\buildtest_x509v3err.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\buildtest_x509v3err.exe @<<
test\buildtest_x509v3err.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\buildtest_x509v3err.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\buildtest_x509v3err.exe.manifest $(MTOUTFLAG)test\buildtest_x509v3err.exe
test\buildtest_x509v3err.obj: "test\buildtest_x509v3err.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\buildtest_x509v3err.c"
test\buildtest_x509v3err.c: "test\generate_buildtest.pl" 
	"$(PERL)" "test\generate_buildtest.pl" "x509v3err" > $@
test\casttest.exe: test\casttest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\casttest.exe.manifest DEL /F /Q test\casttest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\casttest.exe @<<
test\casttest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\casttest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\casttest.exe.manifest $(MTOUTFLAG)test\casttest.exe
test\casttest.obj: "test\casttest.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\casttest.c"
test\cipherbytes_test.exe: test\cipherbytes_test.obj libssl.lib test\libtestutil.lib libcrypto.lib
	IF EXIST test\cipherbytes_test.exe.manifest DEL /F /Q test\cipherbytes_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\cipherbytes_test.exe @<<
test\cipherbytes_test.obj setargv.obj
libssl.lib
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\cipherbytes_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\cipherbytes_test.exe.manifest $(MTOUTFLAG)test\cipherbytes_test.exe
test\cipherbytes_test.obj: "test\cipherbytes_test.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\cipherbytes_test.c"
test\cipherlist_test.exe: test\cipherlist_test.obj libssl.lib test\libtestutil.lib libcrypto.lib
	IF EXIST test\cipherlist_test.exe.manifest DEL /F /Q test\cipherlist_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\cipherlist_test.exe @<<
test\cipherlist_test.obj setargv.obj
libssl.lib
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\cipherlist_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\cipherlist_test.exe.manifest $(MTOUTFLAG)test\cipherlist_test.exe
test\cipherlist_test.obj: "test\cipherlist_test.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\cipherlist_test.c"
test\ciphername_test.exe: test\ciphername_test.obj libssl.lib test\libtestutil.lib libcrypto.lib
	IF EXIST test\ciphername_test.exe.manifest DEL /F /Q test\ciphername_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\ciphername_test.exe @<<
test\ciphername_test.obj setargv.obj
libssl.lib
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\ciphername_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\ciphername_test.exe.manifest $(MTOUTFLAG)test\ciphername_test.exe
test\ciphername_test.obj: "test\ciphername_test.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\ciphername_test.c"
test\clienthellotest.exe: test\clienthellotest.obj libssl.lib test\libtestutil.lib libcrypto.lib
	IF EXIST test\clienthellotest.exe.manifest DEL /F /Q test\clienthellotest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\clienthellotest.exe @<<
test\clienthellotest.obj setargv.obj
libssl.lib
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\clienthellotest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\clienthellotest.exe.manifest $(MTOUTFLAG)test\clienthellotest.exe
test\clienthellotest.obj: "test\clienthellotest.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\clienthellotest.c"
test\constant_time_test.exe: test\constant_time_test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\constant_time_test.exe.manifest DEL /F /Q test\constant_time_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\constant_time_test.exe @<<
test\constant_time_test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\constant_time_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\constant_time_test.exe.manifest $(MTOUTFLAG)test\constant_time_test.exe
test\constant_time_test.obj: "test\constant_time_test.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\constant_time_test.c"
test\crltest.exe: test\crltest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\crltest.exe.manifest DEL /F /Q test\crltest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\crltest.exe @<<
test\crltest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\crltest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\crltest.exe.manifest $(MTOUTFLAG)test\crltest.exe
test\crltest.obj: "test\crltest.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\crltest.c"
test\ct_test.exe: test\ct_test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\ct_test.exe.manifest DEL /F /Q test\ct_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\ct_test.exe @<<
test\ct_test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\ct_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\ct_test.exe.manifest $(MTOUTFLAG)test\ct_test.exe
test\ct_test.obj: "test\ct_test.c"
	$(CC)  /I "crypto\include" /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\ct_test.c"
test\d2i_test.exe: test\d2i_test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\d2i_test.exe.manifest DEL /F /Q test\d2i_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\d2i_test.exe @<<
test\d2i_test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\d2i_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\d2i_test.exe.manifest $(MTOUTFLAG)test\d2i_test.exe
test\d2i_test.obj: "test\d2i_test.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\d2i_test.c"
test\danetest.exe: test\danetest.obj libssl.lib test\libtestutil.lib libcrypto.lib
	IF EXIST test\danetest.exe.manifest DEL /F /Q test\danetest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\danetest.exe @<<
test\danetest.obj setargv.obj
libssl.lib
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\danetest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\danetest.exe.manifest $(MTOUTFLAG)test\danetest.exe
test\danetest.obj: "test\danetest.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\danetest.c"
test\destest.exe: test\destest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\destest.exe.manifest DEL /F /Q test\destest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\destest.exe @<<
test\destest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\destest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\destest.exe.manifest $(MTOUTFLAG)test\destest.exe
test\destest.obj: "test\destest.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\destest.c"
test\dhtest.exe: test\dhtest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\dhtest.exe.manifest DEL /F /Q test\dhtest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\dhtest.exe @<<
test\dhtest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\dhtest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\dhtest.exe.manifest $(MTOUTFLAG)test\dhtest.exe
test\dhtest.obj: "test\dhtest.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\dhtest.c"
test\drbgtest.exe: test\drbgtest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\drbgtest.exe.manifest DEL /F /Q test\drbgtest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\drbgtest.exe @<<
test\drbgtest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\drbgtest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\drbgtest.exe.manifest $(MTOUTFLAG)test\drbgtest.exe
test\drbgtest.obj: "test\drbgtest.c"
	$(CC)  /I "include" /I "test" /I "." $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\drbgtest.c"
test\dsatest.exe: test\dsatest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\dsatest.exe.manifest DEL /F /Q test\dsatest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\dsatest.exe @<<
test\dsatest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\dsatest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\dsatest.exe.manifest $(MTOUTFLAG)test\dsatest.exe
test\dsatest.obj: "test\dsatest.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\dsatest.c"
test\dtls_mtu_test.exe: test\dtls_mtu_test.obj test\ssltestlib.obj libssl.lib test\libtestutil.lib libcrypto.lib
	IF EXIST test\dtls_mtu_test.exe.manifest DEL /F /Q test\dtls_mtu_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\dtls_mtu_test.exe @<<
test\dtls_mtu_test.obj
test\ssltestlib.obj setargv.obj
libssl.lib
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\dtls_mtu_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\dtls_mtu_test.exe.manifest $(MTOUTFLAG)test\dtls_mtu_test.exe
test\dtls_mtu_test.obj: "test\dtls_mtu_test.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\dtls_mtu_test.c"
test\dtlstest.exe: test\dtlstest.obj test\ssltestlib.obj libssl.lib test\libtestutil.lib libcrypto.lib
	IF EXIST test\dtlstest.exe.manifest DEL /F /Q test\dtlstest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\dtlstest.exe @<<
test\dtlstest.obj
test\ssltestlib.obj setargv.obj
libssl.lib
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\dtlstest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\dtlstest.exe.manifest $(MTOUTFLAG)test\dtlstest.exe
test\dtlstest.obj: "test\dtlstest.c"
	$(CC)  /I "include" /I "test" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\dtlstest.c"
test\dtlsv1listentest.exe: test\dtlsv1listentest.obj libssl.lib test\libtestutil.lib libcrypto.lib
	IF EXIST test\dtlsv1listentest.exe.manifest DEL /F /Q test\dtlsv1listentest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\dtlsv1listentest.exe @<<
test\dtlsv1listentest.obj setargv.obj
libssl.lib
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\dtlsv1listentest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\dtlsv1listentest.exe.manifest $(MTOUTFLAG)test\dtlsv1listentest.exe
test\dtlsv1listentest.obj: "test\dtlsv1listentest.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\dtlsv1listentest.c"
test\ecdsatest.exe: test\ecdsatest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\ecdsatest.exe.manifest DEL /F /Q test\ecdsatest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\ecdsatest.exe @<<
test\ecdsatest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\ecdsatest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\ecdsatest.exe.manifest $(MTOUTFLAG)test\ecdsatest.exe
test\ecdsatest.obj: "test\ecdsatest.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\ecdsatest.c"
test\ecstresstest.exe: test\ecstresstest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\ecstresstest.exe.manifest DEL /F /Q test\ecstresstest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\ecstresstest.exe @<<
test\ecstresstest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\ecstresstest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\ecstresstest.exe.manifest $(MTOUTFLAG)test\ecstresstest.exe
test\ecstresstest.obj: "test\ecstresstest.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\ecstresstest.c"
test\ectest.exe: test\ectest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\ectest.exe.manifest DEL /F /Q test\ectest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\ectest.exe @<<
test\ectest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\ectest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\ectest.exe.manifest $(MTOUTFLAG)test\ectest.exe
test\ectest.obj: "test\ectest.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\ectest.c"
test\enginetest.exe: test\enginetest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\enginetest.exe.manifest DEL /F /Q test\enginetest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\enginetest.exe @<<
test\enginetest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\enginetest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\enginetest.exe.manifest $(MTOUTFLAG)test\enginetest.exe
test\enginetest.obj: "test\enginetest.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\enginetest.c"
test\evp_extra_test.exe: test\evp_extra_test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\evp_extra_test.exe.manifest DEL /F /Q test\evp_extra_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\evp_extra_test.exe @<<
test\evp_extra_test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\evp_extra_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\evp_extra_test.exe.manifest $(MTOUTFLAG)test\evp_extra_test.exe
test\evp_extra_test.obj: "test\evp_extra_test.c"
	$(CC)  /I "." /I "include" /I "crypto\include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\evp_extra_test.c"
test\evp_test.exe: test\evp_test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\evp_test.exe.manifest DEL /F /Q test\evp_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\evp_test.exe @<<
test\evp_test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\evp_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\evp_test.exe.manifest $(MTOUTFLAG)test\evp_test.exe
test\evp_test.obj: "test\evp_test.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\evp_test.c"
test\exdatatest.exe: test\exdatatest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\exdatatest.exe.manifest DEL /F /Q test\exdatatest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\exdatatest.exe @<<
test\exdatatest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\exdatatest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\exdatatest.exe.manifest $(MTOUTFLAG)test\exdatatest.exe
test\exdatatest.obj: "test\exdatatest.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\exdatatest.c"
test\exptest.exe: test\exptest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\exptest.exe.manifest DEL /F /Q test\exptest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\exptest.exe @<<
test\exptest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\exptest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\exptest.exe.manifest $(MTOUTFLAG)test\exptest.exe
test\exptest.obj: "test\exptest.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\exptest.c"
test\fatalerrtest.exe: test\fatalerrtest.obj test\ssltestlib.obj libssl.lib test\libtestutil.lib libcrypto.lib
	IF EXIST test\fatalerrtest.exe.manifest DEL /F /Q test\fatalerrtest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\fatalerrtest.exe @<<
test\fatalerrtest.obj
test\ssltestlib.obj setargv.obj
libssl.lib
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\fatalerrtest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\fatalerrtest.exe.manifest $(MTOUTFLAG)test\fatalerrtest.exe
test\fatalerrtest.obj: "test\fatalerrtest.c"
	$(CC)  /I "include" /I "." $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\fatalerrtest.c"
test\gmdifftest.exe: test\gmdifftest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\gmdifftest.exe.manifest DEL /F /Q test\gmdifftest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\gmdifftest.exe @<<
test\gmdifftest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\gmdifftest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\gmdifftest.exe.manifest $(MTOUTFLAG)test\gmdifftest.exe
test\gmdifftest.obj: "test\gmdifftest.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\gmdifftest.c"
test\hmactest.exe: test\hmactest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\hmactest.exe.manifest DEL /F /Q test\hmactest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\hmactest.exe @<<
test\hmactest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\hmactest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\hmactest.exe.manifest $(MTOUTFLAG)test\hmactest.exe
test\hmactest.obj: "test\hmactest.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\hmactest.c"
test\ideatest.exe: test\ideatest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\ideatest.exe.manifest DEL /F /Q test\ideatest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\ideatest.exe @<<
test\ideatest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\ideatest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\ideatest.exe.manifest $(MTOUTFLAG)test\ideatest.exe
test\ideatest.obj: "test\ideatest.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\ideatest.c"
test\igetest.exe: test\igetest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\igetest.exe.manifest DEL /F /Q test\igetest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\igetest.exe @<<
test\igetest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\igetest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\igetest.exe.manifest $(MTOUTFLAG)test\igetest.exe
test\igetest.obj: "test\igetest.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\igetest.c"
test\lhash_test.exe: test\lhash_test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\lhash_test.exe.manifest DEL /F /Q test\lhash_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\lhash_test.exe @<<
test\lhash_test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\lhash_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\lhash_test.exe.manifest $(MTOUTFLAG)test\lhash_test.exe
test\lhash_test.obj: "test\lhash_test.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\lhash_test.c"
test\md2test.exe: test\md2test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\md2test.exe.manifest DEL /F /Q test\md2test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\md2test.exe @<<
test\md2test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\md2test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\md2test.exe.manifest $(MTOUTFLAG)test\md2test.exe
test\md2test.obj: "test\md2test.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\md2test.c"
test\mdc2_internal_test.exe: test\mdc2_internal_test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\mdc2_internal_test.exe.manifest DEL /F /Q test\mdc2_internal_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\mdc2_internal_test.exe @<<
test\mdc2_internal_test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\mdc2_internal_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\mdc2_internal_test.exe.manifest $(MTOUTFLAG)test\mdc2_internal_test.exe
test\mdc2_internal_test.obj: "test\mdc2_internal_test.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\mdc2_internal_test.c"
test\mdc2test.exe: test\mdc2test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\mdc2test.exe.manifest DEL /F /Q test\mdc2test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\mdc2test.exe @<<
test\mdc2test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\mdc2test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\mdc2test.exe.manifest $(MTOUTFLAG)test\mdc2test.exe
test\mdc2test.obj: "test\mdc2test.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\mdc2test.c"
test\memleaktest.exe: test\memleaktest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\memleaktest.exe.manifest DEL /F /Q test\memleaktest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\memleaktest.exe @<<
test\memleaktest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\memleaktest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\memleaktest.exe.manifest $(MTOUTFLAG)test\memleaktest.exe
test\memleaktest.obj: "test\memleaktest.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\memleaktest.c"
test\ocspapitest.exe: test\ocspapitest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\ocspapitest.exe.manifest DEL /F /Q test\ocspapitest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\ocspapitest.exe @<<
test\ocspapitest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\ocspapitest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\ocspapitest.exe.manifest $(MTOUTFLAG)test\ocspapitest.exe
test\ocspapitest.obj: "test\ocspapitest.c"
	$(CC)  /I "include" /I "." $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\ocspapitest.c"
test\packettest.exe: test\packettest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\packettest.exe.manifest DEL /F /Q test\packettest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\packettest.exe @<<
test\packettest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\packettest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\packettest.exe.manifest $(MTOUTFLAG)test\packettest.exe
test\packettest.obj: "test\packettest.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\packettest.c"
test\pbelutest.exe: test\pbelutest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\pbelutest.exe.manifest DEL /F /Q test\pbelutest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\pbelutest.exe @<<
test\pbelutest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\pbelutest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\pbelutest.exe.manifest $(MTOUTFLAG)test\pbelutest.exe
test\pbelutest.obj: "test\pbelutest.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\pbelutest.c"
test\pemtest.exe: test\pemtest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\pemtest.exe.manifest DEL /F /Q test\pemtest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\pemtest.exe @<<
test\pemtest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\pemtest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\pemtest.exe.manifest $(MTOUTFLAG)test\pemtest.exe
test\pemtest.obj: "test\pemtest.c"
	$(CC)  /I "include" /I "test" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\pemtest.c"
test\pkey_meth_kdf_test.exe: test\pkey_meth_kdf_test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\pkey_meth_kdf_test.exe.manifest DEL /F /Q test\pkey_meth_kdf_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\pkey_meth_kdf_test.exe @<<
test\pkey_meth_kdf_test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\pkey_meth_kdf_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\pkey_meth_kdf_test.exe.manifest $(MTOUTFLAG)test\pkey_meth_kdf_test.exe
test\pkey_meth_kdf_test.obj: "test\pkey_meth_kdf_test.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\pkey_meth_kdf_test.c"
test\pkey_meth_test.exe: test\pkey_meth_test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\pkey_meth_test.exe.manifest DEL /F /Q test\pkey_meth_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\pkey_meth_test.exe @<<
test\pkey_meth_test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\pkey_meth_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\pkey_meth_test.exe.manifest $(MTOUTFLAG)test\pkey_meth_test.exe
test\pkey_meth_test.obj: "test\pkey_meth_test.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\pkey_meth_test.c"
test\rc2test.exe: test\rc2test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\rc2test.exe.manifest DEL /F /Q test\rc2test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\rc2test.exe @<<
test\rc2test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\rc2test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\rc2test.exe.manifest $(MTOUTFLAG)test\rc2test.exe
test\rc2test.obj: "test\rc2test.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\rc2test.c"
test\rc4test.exe: test\rc4test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\rc4test.exe.manifest DEL /F /Q test\rc4test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\rc4test.exe @<<
test\rc4test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\rc4test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\rc4test.exe.manifest $(MTOUTFLAG)test\rc4test.exe
test\rc4test.obj: "test\rc4test.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\rc4test.c"
test\rc5test.exe: test\rc5test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\rc5test.exe.manifest DEL /F /Q test\rc5test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\rc5test.exe @<<
test\rc5test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\rc5test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\rc5test.exe.manifest $(MTOUTFLAG)test\rc5test.exe
test\rc5test.obj: "test\rc5test.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\rc5test.c"
test\recordlentest.exe: test\recordlentest.obj test\ssltestlib.obj libssl.lib test\libtestutil.lib libcrypto.lib
	IF EXIST test\recordlentest.exe.manifest DEL /F /Q test\recordlentest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\recordlentest.exe @<<
test\recordlentest.obj
test\ssltestlib.obj setargv.obj
libssl.lib
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\recordlentest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\recordlentest.exe.manifest $(MTOUTFLAG)test\recordlentest.exe
test\recordlentest.obj: "test\recordlentest.c"
	$(CC)  /I "include" /I "test" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\recordlentest.c"
test\rsa_mp_test.exe: test\rsa_mp_test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\rsa_mp_test.exe.manifest DEL /F /Q test\rsa_mp_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\rsa_mp_test.exe @<<
test\rsa_mp_test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\rsa_mp_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\rsa_mp_test.exe.manifest $(MTOUTFLAG)test\rsa_mp_test.exe
test\rsa_mp_test.obj: "test\rsa_mp_test.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\rsa_mp_test.c"
test\rsa_test.exe: test\rsa_test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\rsa_test.exe.manifest DEL /F /Q test\rsa_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\rsa_test.exe @<<
test\rsa_test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\rsa_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\rsa_test.exe.manifest $(MTOUTFLAG)test\rsa_test.exe
test\rsa_test.obj: "test\rsa_test.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\rsa_test.c"
test\sanitytest.exe: test\sanitytest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\sanitytest.exe.manifest DEL /F /Q test\sanitytest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\sanitytest.exe @<<
test\sanitytest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\sanitytest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\sanitytest.exe.manifest $(MTOUTFLAG)test\sanitytest.exe
test\sanitytest.obj: "test\sanitytest.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\sanitytest.c"
test\secmemtest.exe: test\secmemtest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\secmemtest.exe.manifest DEL /F /Q test\secmemtest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\secmemtest.exe @<<
test\secmemtest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\secmemtest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\secmemtest.exe.manifest $(MTOUTFLAG)test\secmemtest.exe
test\secmemtest.obj: "test\secmemtest.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\secmemtest.c"
test\servername_test.exe: test\servername_test.obj libssl.lib test\libtestutil.lib libcrypto.lib
	IF EXIST test\servername_test.exe.manifest DEL /F /Q test\servername_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\servername_test.exe @<<
test\servername_test.obj setargv.obj
libssl.lib
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\servername_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\servername_test.exe.manifest $(MTOUTFLAG)test\servername_test.exe
test\servername_test.obj: "test\servername_test.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\servername_test.c"
test\shlibloadtest.exe: test\shlibloadtest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\shlibloadtest.exe.manifest DEL /F /Q test\shlibloadtest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\shlibloadtest.exe @<<
test\shlibloadtest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\shlibloadtest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\shlibloadtest.exe.manifest $(MTOUTFLAG)test\shlibloadtest.exe
test\shlibloadtest.obj: "test\shlibloadtest.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\shlibloadtest.c"
test\srptest.exe: test\srptest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\srptest.exe.manifest DEL /F /Q test\srptest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\srptest.exe @<<
test\srptest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\srptest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\srptest.exe.manifest $(MTOUTFLAG)test\srptest.exe
test\srptest.obj: "test\srptest.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\srptest.c"
test\ssl_cert_table_internal_test.exe: test\ssl_cert_table_internal_test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\ssl_cert_table_internal_test.exe.manifest DEL /F /Q test\ssl_cert_table_internal_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\ssl_cert_table_internal_test.exe @<<
test\ssl_cert_table_internal_test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\ssl_cert_table_internal_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\ssl_cert_table_internal_test.exe.manifest $(MTOUTFLAG)test\ssl_cert_table_internal_test.exe
test\ssl_cert_table_internal_test.obj: "test\ssl_cert_table_internal_test.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\ssl_cert_table_internal_test.c"
test\ssl_test.exe: test\handshake_helper.obj test\ssl_test.obj test\ssl_test_ctx.obj libssl.lib test\libtestutil.lib libcrypto.lib
	IF EXIST test\ssl_test.exe.manifest DEL /F /Q test\ssl_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\ssl_test.exe @<<
test\handshake_helper.obj
test\ssl_test.obj
test\ssl_test_ctx.obj setargv.obj
libssl.lib
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\ssl_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\ssl_test.exe.manifest $(MTOUTFLAG)test\ssl_test.exe
test\handshake_helper.obj: "test\handshake_helper.c"
	$(CC)  /I "." /I "include" /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\handshake_helper.c"
test\ssl_test.obj: "test\ssl_test.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\ssl_test.c"
test\ssl_test_ctx.obj: "test\ssl_test_ctx.c"
	$(CC)  /I "." /I "include" /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\ssl_test_ctx.c"
test\ssl_test_ctx_test.exe: test\ssl_test_ctx.obj test\ssl_test_ctx_test.obj libssl.lib test\libtestutil.lib libcrypto.lib
	IF EXIST test\ssl_test_ctx_test.exe.manifest DEL /F /Q test\ssl_test_ctx_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\ssl_test_ctx_test.exe @<<
test\ssl_test_ctx.obj
test\ssl_test_ctx_test.obj setargv.obj
libssl.lib
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\ssl_test_ctx_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\ssl_test_ctx_test.exe.manifest $(MTOUTFLAG)test\ssl_test_ctx_test.exe
test\ssl_test_ctx_test.obj: "test\ssl_test_ctx_test.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\ssl_test_ctx_test.c"
test\sslapitest.exe: test\sslapitest.obj test\ssltestlib.obj libssl.lib test\libtestutil.lib libcrypto.lib
	IF EXIST test\sslapitest.exe.manifest DEL /F /Q test\sslapitest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\sslapitest.exe @<<
test\sslapitest.obj
test\ssltestlib.obj setargv.obj
libssl.lib
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\sslapitest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\sslapitest.exe.manifest $(MTOUTFLAG)test\sslapitest.exe
test\sslapitest.obj: "test\sslapitest.c"
	$(CC)  /I "include" /I "." $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\sslapitest.c"
test\sslbuffertest.exe: test\sslbuffertest.obj test\ssltestlib.obj libssl.lib test\libtestutil.lib libcrypto.lib
	IF EXIST test\sslbuffertest.exe.manifest DEL /F /Q test\sslbuffertest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\sslbuffertest.exe @<<
test\sslbuffertest.obj
test\ssltestlib.obj setargv.obj
libssl.lib
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\sslbuffertest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\sslbuffertest.exe.manifest $(MTOUTFLAG)test\sslbuffertest.exe
test\sslbuffertest.obj: "test\sslbuffertest.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\sslbuffertest.c"
test\sslcorrupttest.exe: test\sslcorrupttest.obj test\ssltestlib.obj libssl.lib test\libtestutil.lib libcrypto.lib
	IF EXIST test\sslcorrupttest.exe.manifest DEL /F /Q test\sslcorrupttest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\sslcorrupttest.exe @<<
test\sslcorrupttest.obj
test\ssltestlib.obj setargv.obj
libssl.lib
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\sslcorrupttest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\sslcorrupttest.exe.manifest $(MTOUTFLAG)test\sslcorrupttest.exe
test\sslcorrupttest.obj: "test\sslcorrupttest.c"
	$(CC)  /I "include" /I "test" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\sslcorrupttest.c"
test\ssltest_old.exe: test\ssltest_old.obj libssl.lib libcrypto.lib
	IF EXIST test\ssltest_old.exe.manifest DEL /F /Q test\ssltest_old.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\ssltest_old.exe @<<
test\ssltest_old.obj setargv.obj
libssl.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\ssltest_old.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\ssltest_old.exe.manifest $(MTOUTFLAG)test\ssltest_old.exe
test\ssltest_old.obj: "test\ssltest_old.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\ssltest_old.c"
test\stack_test.exe: test\stack_test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\stack_test.exe.manifest DEL /F /Q test\stack_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\stack_test.exe @<<
test\stack_test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\stack_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\stack_test.exe.manifest $(MTOUTFLAG)test\stack_test.exe
test\stack_test.obj: "test\stack_test.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\stack_test.c"
test\test_test.exe: test\test_test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\test_test.exe.manifest DEL /F /Q test\test_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\test_test.exe @<<
test\test_test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\test_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\test_test.exe.manifest $(MTOUTFLAG)test\test_test.exe
test\test_test.obj: "test\test_test.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\test_test.c"
test\threadstest.exe: test\threadstest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\threadstest.exe.manifest DEL /F /Q test\threadstest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\threadstest.exe @<<
test\threadstest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\threadstest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\threadstest.exe.manifest $(MTOUTFLAG)test\threadstest.exe
test\threadstest.obj: "test\threadstest.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\threadstest.c"
test\time_offset_test.exe: test\time_offset_test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\time_offset_test.exe.manifest DEL /F /Q test\time_offset_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\time_offset_test.exe @<<
test\time_offset_test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\time_offset_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\time_offset_test.exe.manifest $(MTOUTFLAG)test\time_offset_test.exe
test\time_offset_test.obj: "test\time_offset_test.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\time_offset_test.c"
test\tls13secretstest.exe: ssl\packet.obj ssl\tls13_enc.obj test\tls13secretstest.obj libssl.lib test\libtestutil.lib libcrypto.lib
	IF EXIST test\tls13secretstest.exe.manifest DEL /F /Q test\tls13secretstest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\tls13secretstest.exe @<<
ssl\packet.obj
ssl\tls13_enc.obj
test\tls13secretstest.obj setargv.obj
libssl.lib
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\tls13secretstest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\tls13secretstest.exe.manifest $(MTOUTFLAG)test\tls13secretstest.exe
test\tls13secretstest.obj: "test\tls13secretstest.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\tls13secretstest.c"
test\uitest.exe: apps\apps.obj apps\opt.obj test\uitest.obj libssl.lib test\libtestutil.lib libcrypto.lib
	IF EXIST test\uitest.exe.manifest DEL /F /Q test\uitest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\uitest.exe @<<
apps\apps.obj
apps\opt.obj
test\uitest.obj setargv.obj
libssl.lib
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\uitest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\uitest.exe.manifest $(MTOUTFLAG)test\uitest.exe
test\uitest.obj: "test\uitest.c" "apps\progs.h"
	$(CC)  /I "." /I "include" /I "apps" /I "apps" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\uitest.c"
test\v3ext.exe: test\v3ext.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\v3ext.exe.manifest DEL /F /Q test\v3ext.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\v3ext.exe @<<
test\v3ext.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\v3ext.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\v3ext.exe.manifest $(MTOUTFLAG)test\v3ext.exe
test\v3ext.obj: "test\v3ext.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\v3ext.c"
test\v3nametest.exe: test\v3nametest.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\v3nametest.exe.manifest DEL /F /Q test\v3nametest.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\v3nametest.exe @<<
test\v3nametest.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\v3nametest.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\v3nametest.exe.manifest $(MTOUTFLAG)test\v3nametest.exe
test\v3nametest.obj: "test\v3nametest.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\v3nametest.c"
test\verify_extra_test.exe: test\verify_extra_test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\verify_extra_test.exe.manifest DEL /F /Q test\verify_extra_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\verify_extra_test.exe @<<
test\verify_extra_test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\verify_extra_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\verify_extra_test.exe.manifest $(MTOUTFLAG)test\verify_extra_test.exe
test\verify_extra_test.obj: "test\verify_extra_test.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\verify_extra_test.c"
test\x509_check_cert_pkey_test.exe: test\x509_check_cert_pkey_test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\x509_check_cert_pkey_test.exe.manifest DEL /F /Q test\x509_check_cert_pkey_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\x509_check_cert_pkey_test.exe @<<
test\x509_check_cert_pkey_test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\x509_check_cert_pkey_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\x509_check_cert_pkey_test.exe.manifest $(MTOUTFLAG)test\x509_check_cert_pkey_test.exe
test\x509_check_cert_pkey_test.obj: "test\x509_check_cert_pkey_test.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\x509_check_cert_pkey_test.c"
test\x509_dup_cert_test.exe: test\x509_dup_cert_test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\x509_dup_cert_test.exe.manifest DEL /F /Q test\x509_dup_cert_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\x509_dup_cert_test.exe @<<
test\x509_dup_cert_test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\x509_dup_cert_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\x509_dup_cert_test.exe.manifest $(MTOUTFLAG)test\x509_dup_cert_test.exe
test\x509_dup_cert_test.obj: "test\x509_dup_cert_test.c"
	$(CC)  /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\x509_dup_cert_test.c"
test\x509_time_test.exe: test\x509_time_test.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\x509_time_test.exe.manifest DEL /F /Q test\x509_time_test.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\x509_time_test.exe @<<
test\x509_time_test.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\x509_time_test.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\x509_time_test.exe.manifest $(MTOUTFLAG)test\x509_time_test.exe
test\x509_time_test.obj: "test\x509_time_test.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\x509_time_test.c"
test\x509aux.exe: test\x509aux.obj test\libtestutil.lib libcrypto.lib
	IF EXIST test\x509aux.exe.manifest DEL /F /Q test\x509aux.exe.manifest
	$(LD) $(LDFLAGS) $(BIN_LDFLAGS) $(LDOUTFLAG)test\x509aux.exe @<<
test\x509aux.obj setargv.obj
test\libtestutil.lib
libcrypto.lib $(EX_LIBS)
<<
	IF EXIST test\x509aux.exe.manifest \
	   $(MT) $(MTFLAGS) $(MTINFLAG)test\x509aux.exe.manifest $(MTOUTFLAG)test\x509aux.exe
test\x509aux.obj: "test\x509aux.c"
	$(CC)  /I "." /I "include" $(CFLAGS) $(BIN_CFLAGS) -c $(COUTFLAG)$@ "test\x509aux.c"
apps\CA.pl: "apps\CA.pl.in"
	"$(PERL)" "-I$(BLDDIR)" -Mconfigdata "util\dofile.pl" \
	    "-omakefile" "apps\CA.pl.in" > "apps\CA.pl"
apps\tsget.pl: "apps\tsget.in"
	"$(PERL)" "-I$(BLDDIR)" -Mconfigdata "util\dofile.pl" \
	    "-omakefile" "apps\tsget.in" > "apps\tsget.pl"
tools\c_rehash.pl: "tools\c_rehash.in"
	"$(PERL)" "-I$(BLDDIR)" -Mconfigdata "util\dofile.pl" \
	    "-omakefile" "tools\c_rehash.in" > "tools\c_rehash.pl"
apps apps\ : apps\apps.obj apps\opt.obj apps\win32_init.obj apps\openssl.exe apps\CA.pl apps\tsget.pl
	 No support to produce bin apps\openssl, test\uitest
crypto crypto\ : crypto\cpt_err.obj crypto\cryptlib.obj crypto\ctype.obj crypto\cversion.obj crypto\ebcdic.obj crypto\ex_data.obj crypto\init.obj crypto\mem.obj crypto\mem_dbg.obj crypto\mem_sec.obj crypto\o_dir.obj crypto\o_fips.obj crypto\o_fopen.obj crypto\o_init.obj crypto\o_str.obj crypto\o_time.obj crypto\threads_none.obj crypto\threads_pthread.obj crypto\threads_win.obj crypto\uid.obj crypto\uplink-x86_64.obj crypto\x86_64cpuid.obj
crypto\aes crypto\aes\ : crypto\aes\aes-x86_64.obj crypto\aes\aes_cfb.obj crypto\aes\aes_ecb.obj crypto\aes\aes_ige.obj crypto\aes\aes_misc.obj crypto\aes\aes_ofb.obj crypto\aes\aes_wrap.obj crypto\aes\aesni-mb-x86_64.obj crypto\aes\aesni-sha1-x86_64.obj crypto\aes\aesni-sha256-x86_64.obj crypto\aes\aesni-x86_64.obj crypto\aes\bsaes-x86_64.obj crypto\aes\vpaes-x86_64.obj
crypto\asn1 crypto\asn1\ : crypto\asn1\a_bitstr.obj crypto\asn1\a_d2i_fp.obj crypto\asn1\a_digest.obj crypto\asn1\a_dup.obj crypto\asn1\a_gentm.obj crypto\asn1\a_i2d_fp.obj crypto\asn1\a_int.obj crypto\asn1\a_mbstr.obj crypto\asn1\a_object.obj crypto\asn1\a_octet.obj crypto\asn1\a_print.obj crypto\asn1\a_sign.obj crypto\asn1\a_strex.obj crypto\asn1\a_strnid.obj crypto\asn1\a_time.obj crypto\asn1\a_type.obj crypto\asn1\a_utctm.obj crypto\asn1\a_utf8.obj crypto\asn1\a_verify.obj crypto\asn1\ameth_lib.obj crypto\asn1\asn1_err.obj crypto\asn1\asn1_gen.obj crypto\asn1\asn1_item_list.obj crypto\asn1\asn1_lib.obj crypto\asn1\asn1_par.obj crypto\asn1\asn_mime.obj crypto\asn1\asn_moid.obj crypto\asn1\asn_mstbl.obj crypto\asn1\asn_pack.obj crypto\asn1\bio_asn1.obj crypto\asn1\bio_ndef.obj crypto\asn1\d2i_pr.obj crypto\asn1\d2i_pu.obj crypto\asn1\evp_asn1.obj crypto\asn1\f_int.obj crypto\asn1\f_string.obj crypto\asn1\i2d_pr.obj crypto\asn1\i2d_pu.obj crypto\asn1\n_pkey.obj crypto\asn1\nsseq.obj crypto\asn1\p5_pbe.obj crypto\asn1\p5_pbev2.obj crypto\asn1\p5_scrypt.obj crypto\asn1\p8_pkey.obj crypto\asn1\t_bitst.obj crypto\asn1\t_pkey.obj crypto\asn1\t_spki.obj crypto\asn1\tasn_dec.obj crypto\asn1\tasn_enc.obj crypto\asn1\tasn_fre.obj crypto\asn1\tasn_new.obj crypto\asn1\tasn_prn.obj crypto\asn1\tasn_scn.obj crypto\asn1\tasn_typ.obj crypto\asn1\tasn_utl.obj crypto\asn1\x_algor.obj crypto\asn1\x_bignum.obj crypto\asn1\x_info.obj crypto\asn1\x_int64.obj crypto\asn1\x_long.obj crypto\asn1\x_pkey.obj crypto\asn1\x_sig.obj crypto\asn1\x_spki.obj crypto\asn1\x_val.obj
crypto\async crypto\async\ : crypto\async\async.obj crypto\async\async_err.obj crypto\async\async_wait.obj
crypto\async\arch crypto\async\arch\ : crypto\async\arch\async_null.obj crypto\async\arch\async_posix.obj crypto\async\arch\async_win.obj
crypto\bf crypto\bf\ : crypto\bf\bf_cfb64.obj crypto\bf\bf_ecb.obj crypto\bf\bf_enc.obj crypto\bf\bf_ofb64.obj crypto\bf\bf_skey.obj
crypto\bio crypto\bio\ : crypto\bio\b_addr.obj crypto\bio\b_dump.obj crypto\bio\b_print.obj crypto\bio\b_sock.obj crypto\bio\b_sock2.obj crypto\bio\bf_buff.obj crypto\bio\bf_lbuf.obj crypto\bio\bf_nbio.obj crypto\bio\bf_null.obj crypto\bio\bio_cb.obj crypto\bio\bio_err.obj crypto\bio\bio_lib.obj crypto\bio\bio_meth.obj crypto\bio\bss_acpt.obj crypto\bio\bss_bio.obj crypto\bio\bss_conn.obj crypto\bio\bss_dgram.obj crypto\bio\bss_fd.obj crypto\bio\bss_file.obj crypto\bio\bss_log.obj crypto\bio\bss_mem.obj crypto\bio\bss_null.obj crypto\bio\bss_sock.obj
crypto\blake2 crypto\blake2\ : crypto\blake2\blake2b.obj crypto\blake2\blake2s.obj crypto\blake2\m_blake2b.obj crypto\blake2\m_blake2s.obj
crypto\bn crypto\bn\ : crypto\bn\bn_add.obj crypto\bn\bn_asm.obj crypto\bn\bn_blind.obj crypto\bn\bn_const.obj crypto\bn\bn_ctx.obj crypto\bn\bn_depr.obj crypto\bn\bn_dh.obj crypto\bn\bn_div.obj crypto\bn\bn_err.obj crypto\bn\bn_exp.obj crypto\bn\bn_exp2.obj crypto\bn\bn_gcd.obj crypto\bn\bn_gf2m.obj crypto\bn\bn_intern.obj crypto\bn\bn_kron.obj crypto\bn\bn_lib.obj crypto\bn\bn_mod.obj crypto\bn\bn_mont.obj crypto\bn\bn_mpi.obj crypto\bn\bn_mul.obj crypto\bn\bn_nist.obj crypto\bn\bn_prime.obj crypto\bn\bn_print.obj crypto\bn\bn_rand.obj crypto\bn\bn_recp.obj crypto\bn\bn_shift.obj crypto\bn\bn_sqr.obj crypto\bn\bn_sqrt.obj crypto\bn\bn_srp.obj crypto\bn\bn_word.obj crypto\bn\bn_x931p.obj crypto\bn\rsaz-avx2.obj crypto\bn\rsaz-x86_64.obj crypto\bn\rsaz_exp.obj crypto\bn\x86_64-gf2m.obj crypto\bn\x86_64-mont.obj crypto\bn\x86_64-mont5.obj
crypto\buffer crypto\buffer\ : crypto\buffer\buf_err.obj crypto\buffer\buffer.obj
crypto\camellia crypto\camellia\ : crypto\camellia\cmll-x86_64.obj crypto\camellia\cmll_cfb.obj crypto\camellia\cmll_ctr.obj crypto\camellia\cmll_ecb.obj crypto\camellia\cmll_misc.obj crypto\camellia\cmll_ofb.obj
crypto\cast crypto\cast\ : crypto\cast\c_cfb64.obj crypto\cast\c_ecb.obj crypto\cast\c_enc.obj crypto\cast\c_ofb64.obj crypto\cast\c_skey.obj
crypto\chacha crypto\chacha\ : crypto\chacha\chacha-x86_64.obj
crypto\cmac crypto\cmac\ : crypto\cmac\cm_ameth.obj crypto\cmac\cm_pmeth.obj crypto\cmac\cmac.obj
crypto\cms crypto\cms\ : crypto\cms\cms_asn1.obj crypto\cms\cms_att.obj crypto\cms\cms_cd.obj crypto\cms\cms_dd.obj crypto\cms\cms_enc.obj crypto\cms\cms_env.obj crypto\cms\cms_err.obj crypto\cms\cms_ess.obj crypto\cms\cms_io.obj crypto\cms\cms_kari.obj crypto\cms\cms_lib.obj crypto\cms\cms_pwri.obj crypto\cms\cms_sd.obj crypto\cms\cms_smime.obj
crypto\comp crypto\comp\ : crypto\comp\c_zlib.obj crypto\comp\comp_err.obj crypto\comp\comp_lib.obj
crypto\conf crypto\conf\ : crypto\conf\conf_api.obj crypto\conf\conf_def.obj crypto\conf\conf_err.obj crypto\conf\conf_lib.obj crypto\conf\conf_mall.obj crypto\conf\conf_mod.obj crypto\conf\conf_sap.obj
crypto\ct crypto\ct\ : crypto\ct\ct_b64.obj crypto\ct\ct_err.obj crypto\ct\ct_log.obj crypto\ct\ct_oct.obj crypto\ct\ct_policy.obj crypto\ct\ct_prn.obj crypto\ct\ct_sct.obj crypto\ct\ct_sct_ctx.obj crypto\ct\ct_vfy.obj crypto\ct\ct_x509v3.obj
crypto\des crypto\des\ : crypto\des\cbc_cksm.obj crypto\des\cbc_enc.obj crypto\des\cfb64ede.obj crypto\des\cfb64enc.obj crypto\des\cfb_enc.obj crypto\des\des_enc.obj crypto\des\ecb3_enc.obj crypto\des\ecb_enc.obj crypto\des\fcrypt.obj crypto\des\fcrypt_b.obj crypto\des\ofb64ede.obj crypto\des\ofb64enc.obj crypto\des\ofb_enc.obj crypto\des\pcbc_enc.obj crypto\des\qud_cksm.obj crypto\des\rand_key.obj crypto\des\set_key.obj crypto\des\str2key.obj crypto\des\xcbc_enc.obj
crypto\dh crypto\dh\ : crypto\dh\dh_ameth.obj crypto\dh\dh_asn1.obj crypto\dh\dh_check.obj crypto\dh\dh_depr.obj crypto\dh\dh_err.obj crypto\dh\dh_gen.obj crypto\dh\dh_kdf.obj crypto\dh\dh_key.obj crypto\dh\dh_lib.obj crypto\dh\dh_meth.obj crypto\dh\dh_pmeth.obj crypto\dh\dh_prn.obj crypto\dh\dh_rfc5114.obj crypto\dh\dh_rfc7919.obj
crypto\dsa crypto\dsa\ : crypto\dsa\dsa_ameth.obj crypto\dsa\dsa_asn1.obj crypto\dsa\dsa_depr.obj crypto\dsa\dsa_err.obj crypto\dsa\dsa_gen.obj crypto\dsa\dsa_key.obj crypto\dsa\dsa_lib.obj crypto\dsa\dsa_meth.obj crypto\dsa\dsa_ossl.obj crypto\dsa\dsa_pmeth.obj crypto\dsa\dsa_prn.obj crypto\dsa\dsa_sign.obj crypto\dsa\dsa_vrf.obj
crypto\dso crypto\dso\ : crypto\dso\dso_dl.obj crypto\dso\dso_dlfcn.obj crypto\dso\dso_err.obj crypto\dso\dso_lib.obj crypto\dso\dso_openssl.obj crypto\dso\dso_vms.obj crypto\dso\dso_win32.obj
crypto\ec crypto\ec\ : crypto\ec\curve25519.obj crypto\ec\ec2_mult.obj crypto\ec\ec2_oct.obj crypto\ec\ec2_smpl.obj crypto\ec\ec_ameth.obj crypto\ec\ec_asn1.obj crypto\ec\ec_check.obj crypto\ec\ec_curve.obj crypto\ec\ec_cvt.obj crypto\ec\ec_err.obj crypto\ec\ec_key.obj crypto\ec\ec_kmeth.obj crypto\ec\ec_lib.obj crypto\ec\ec_mult.obj crypto\ec\ec_oct.obj crypto\ec\ec_pmeth.obj crypto\ec\ec_print.obj crypto\ec\ecdh_kdf.obj crypto\ec\ecdh_ossl.obj crypto\ec\ecdsa_ossl.obj crypto\ec\ecdsa_sign.obj crypto\ec\ecdsa_vrf.obj crypto\ec\eck_prn.obj crypto\ec\ecp_mont.obj crypto\ec\ecp_nist.obj crypto\ec\ecp_nistp224.obj crypto\ec\ecp_nistp256.obj crypto\ec\ecp_nistp521.obj crypto\ec\ecp_nistputil.obj crypto\ec\ecp_nistz256-x86_64.obj crypto\ec\ecp_nistz256.obj crypto\ec\ecp_oct.obj crypto\ec\ecp_smpl.obj crypto\ec\ecx_meth.obj
crypto\engine crypto\engine\ : crypto\engine\eng_all.obj crypto\engine\eng_cnf.obj crypto\engine\eng_ctrl.obj crypto\engine\eng_dyn.obj crypto\engine\eng_err.obj crypto\engine\eng_fat.obj crypto\engine\eng_init.obj crypto\engine\eng_lib.obj crypto\engine\eng_list.obj crypto\engine\eng_openssl.obj crypto\engine\eng_pkey.obj crypto\engine\eng_rdrand.obj crypto\engine\eng_table.obj crypto\engine\tb_asnmth.obj crypto\engine\tb_cipher.obj crypto\engine\tb_dh.obj crypto\engine\tb_digest.obj crypto\engine\tb_dsa.obj crypto\engine\tb_eckey.obj crypto\engine\tb_pkmeth.obj crypto\engine\tb_rand.obj crypto\engine\tb_rsa.obj
crypto\err crypto\err\ : crypto\err\err.obj crypto\err\err_all.obj crypto\err\err_prn.obj
crypto\evp crypto\evp\ : crypto\evp\bio_b64.obj crypto\evp\bio_enc.obj crypto\evp\bio_md.obj crypto\evp\bio_ok.obj crypto\evp\c_allc.obj crypto\evp\c_alld.obj crypto\evp\cmeth_lib.obj crypto\evp\digest.obj crypto\evp\e_aes.obj crypto\evp\e_aes_cbc_hmac_sha1.obj crypto\evp\e_aes_cbc_hmac_sha256.obj crypto\evp\e_aria.obj crypto\evp\e_bf.obj crypto\evp\e_camellia.obj crypto\evp\e_cast.obj crypto\evp\e_chacha20_poly1305.obj crypto\evp\e_des.obj crypto\evp\e_des3.obj crypto\evp\e_idea.obj crypto\evp\e_null.obj crypto\evp\e_old.obj crypto\evp\e_rc2.obj crypto\evp\e_rc4.obj crypto\evp\e_rc4_hmac_md5.obj crypto\evp\e_rc5.obj crypto\evp\e_seed.obj crypto\evp\e_sm4.obj crypto\evp\e_xcbc_d.obj crypto\evp\encode.obj crypto\evp\evp_cnf.obj crypto\evp\evp_enc.obj crypto\evp\evp_err.obj crypto\evp\evp_key.obj crypto\evp\evp_lib.obj crypto\evp\evp_pbe.obj crypto\evp\evp_pkey.obj crypto\evp\m_md2.obj crypto\evp\m_md4.obj crypto\evp\m_md5.obj crypto\evp\m_md5_sha1.obj crypto\evp\m_mdc2.obj crypto\evp\m_null.obj crypto\evp\m_ripemd.obj crypto\evp\m_sha1.obj crypto\evp\m_sha3.obj crypto\evp\m_sigver.obj crypto\evp\m_wp.obj crypto\evp\names.obj crypto\evp\p5_crpt.obj crypto\evp\p5_crpt2.obj crypto\evp\p_dec.obj crypto\evp\p_enc.obj crypto\evp\p_lib.obj crypto\evp\p_open.obj crypto\evp\p_seal.obj crypto\evp\p_sign.obj crypto\evp\p_verify.obj crypto\evp\pbe_scrypt.obj crypto\evp\pmeth_fn.obj crypto\evp\pmeth_gn.obj crypto\evp\pmeth_lib.obj
crypto\hmac crypto\hmac\ : crypto\hmac\hm_ameth.obj crypto\hmac\hm_pmeth.obj crypto\hmac\hmac.obj
crypto\idea crypto\idea\ : crypto\idea\i_cbc.obj crypto\idea\i_cfb64.obj crypto\idea\i_ecb.obj crypto\idea\i_ofb64.obj crypto\idea\i_skey.obj
crypto\kdf crypto\kdf\ : crypto\kdf\hkdf.obj crypto\kdf\kdf_err.obj crypto\kdf\scrypt.obj crypto\kdf\tls1_prf.obj
crypto\lhash crypto\lhash\ : crypto\lhash\lh_stats.obj crypto\lhash\lhash.obj
crypto\md4 crypto\md4\ : crypto\md4\md4_dgst.obj crypto\md4\md4_one.obj
crypto\md5 crypto\md5\ : crypto\md5\md5-x86_64.obj crypto\md5\md5_dgst.obj crypto\md5\md5_one.obj
crypto\mdc2 crypto\mdc2\ : crypto\mdc2\mdc2_one.obj crypto\mdc2\mdc2dgst.obj
crypto\modes crypto\modes\ : crypto\modes\aesni-gcm-x86_64.obj crypto\modes\cbc128.obj crypto\modes\ccm128.obj crypto\modes\cfb128.obj crypto\modes\ctr128.obj crypto\modes\cts128.obj crypto\modes\gcm128.obj crypto\modes\ghash-x86_64.obj crypto\modes\ocb128.obj crypto\modes\ofb128.obj crypto\modes\wrap128.obj crypto\modes\xts128.obj
crypto\objects crypto\objects\ : crypto\objects\o_names.obj crypto\objects\obj_dat.obj crypto\objects\obj_err.obj crypto\objects\obj_lib.obj crypto\objects\obj_xref.obj
crypto\ocsp crypto\ocsp\ : crypto\ocsp\ocsp_asn.obj crypto\ocsp\ocsp_cl.obj crypto\ocsp\ocsp_err.obj crypto\ocsp\ocsp_ext.obj crypto\ocsp\ocsp_ht.obj crypto\ocsp\ocsp_lib.obj crypto\ocsp\ocsp_prn.obj crypto\ocsp\ocsp_srv.obj crypto\ocsp\ocsp_vfy.obj crypto\ocsp\v3_ocsp.obj
crypto\pem crypto\pem\ : crypto\pem\pem_all.obj crypto\pem\pem_err.obj crypto\pem\pem_info.obj crypto\pem\pem_lib.obj crypto\pem\pem_oth.obj crypto\pem\pem_pk8.obj crypto\pem\pem_pkey.obj crypto\pem\pem_sign.obj crypto\pem\pem_x509.obj crypto\pem\pem_xaux.obj crypto\pem\pvkfmt.obj
crypto\pkcs12 crypto\pkcs12\ : crypto\pkcs12\p12_add.obj crypto\pkcs12\p12_asn.obj crypto\pkcs12\p12_attr.obj crypto\pkcs12\p12_crpt.obj crypto\pkcs12\p12_crt.obj crypto\pkcs12\p12_decr.obj crypto\pkcs12\p12_init.obj crypto\pkcs12\p12_key.obj crypto\pkcs12\p12_kiss.obj crypto\pkcs12\p12_mutl.obj crypto\pkcs12\p12_npas.obj crypto\pkcs12\p12_p8d.obj crypto\pkcs12\p12_p8e.obj crypto\pkcs12\p12_sbag.obj crypto\pkcs12\p12_utl.obj crypto\pkcs12\pk12err.obj
crypto\pkcs7 crypto\pkcs7\ : crypto\pkcs7\bio_pk7.obj crypto\pkcs7\pk7_asn1.obj crypto\pkcs7\pk7_attr.obj crypto\pkcs7\pk7_doit.obj crypto\pkcs7\pk7_lib.obj crypto\pkcs7\pk7_mime.obj crypto\pkcs7\pk7_smime.obj crypto\pkcs7\pkcs7err.obj
crypto\poly1305 crypto\poly1305\ : crypto\poly1305\poly1305-x86_64.obj crypto\poly1305\poly1305.obj crypto\poly1305\poly1305_ameth.obj crypto\poly1305\poly1305_pmeth.obj
crypto\rand crypto\rand\ : crypto\rand\drbg_lib.obj crypto\rand\drbg_rand.obj crypto\rand\rand_egd.obj crypto\rand\rand_err.obj crypto\rand\rand_lib.obj crypto\rand\rand_unix.obj crypto\rand\rand_vms.obj crypto\rand\rand_win.obj crypto\rand\randfile.obj
crypto\rc2 crypto\rc2\ : crypto\rc2\rc2_cbc.obj crypto\rc2\rc2_ecb.obj crypto\rc2\rc2_skey.obj crypto\rc2\rc2cfb64.obj crypto\rc2\rc2ofb64.obj
crypto\rc4 crypto\rc4\ : crypto\rc4\rc4-md5-x86_64.obj crypto\rc4\rc4-x86_64.obj
crypto\ripemd crypto\ripemd\ : crypto\ripemd\rmd_dgst.obj crypto\ripemd\rmd_one.obj
crypto\rsa crypto\rsa\ : crypto\rsa\rsa_ameth.obj crypto\rsa\rsa_asn1.obj crypto\rsa\rsa_chk.obj crypto\rsa\rsa_crpt.obj crypto\rsa\rsa_depr.obj crypto\rsa\rsa_err.obj crypto\rsa\rsa_gen.obj crypto\rsa\rsa_lib.obj crypto\rsa\rsa_meth.obj crypto\rsa\rsa_mp.obj crypto\rsa\rsa_none.obj crypto\rsa\rsa_oaep.obj crypto\rsa\rsa_ossl.obj crypto\rsa\rsa_pk1.obj crypto\rsa\rsa_pmeth.obj crypto\rsa\rsa_prn.obj crypto\rsa\rsa_pss.obj crypto\rsa\rsa_saos.obj crypto\rsa\rsa_sign.obj crypto\rsa\rsa_ssl.obj crypto\rsa\rsa_x931.obj crypto\rsa\rsa_x931g.obj
crypto\seed crypto\seed\ : crypto\seed\seed.obj crypto\seed\seed_cbc.obj crypto\seed\seed_cfb.obj crypto\seed\seed_ecb.obj crypto\seed\seed_ofb.obj
crypto\sha crypto\sha\ : crypto\sha\keccak1600.obj crypto\sha\sha1-mb-x86_64.obj crypto\sha\sha1-x86_64.obj crypto\sha\sha1_one.obj crypto\sha\sha1dgst.obj crypto\sha\sha256-mb-x86_64.obj crypto\sha\sha256-x86_64.obj crypto\sha\sha256.obj crypto\sha\sha512-x86_64.obj crypto\sha\sha512.obj
crypto\siphash crypto\siphash\ : crypto\siphash\siphash.obj crypto\siphash\siphash_ameth.obj crypto\siphash\siphash_pmeth.obj
crypto\sm3 crypto\sm3\ : crypto\sm3\m_sm3.obj crypto\sm3\sm3.obj
crypto\sm4 crypto\sm4\ : crypto\sm4\sm4.obj
crypto\srp crypto\srp\ : crypto\srp\srp_lib.obj crypto\srp\srp_vfy.obj
crypto\stack crypto\stack\ : crypto\stack\stack.obj
crypto\store crypto\store\ : crypto\store\loader_file.obj crypto\store\store_err.obj crypto\store\store_init.obj crypto\store\store_lib.obj crypto\store\store_register.obj crypto\store\store_strings.obj
crypto\ts crypto\ts\ : crypto\ts\ts_asn1.obj crypto\ts\ts_conf.obj crypto\ts\ts_err.obj crypto\ts\ts_lib.obj crypto\ts\ts_req_print.obj crypto\ts\ts_req_utils.obj crypto\ts\ts_rsp_print.obj crypto\ts\ts_rsp_sign.obj crypto\ts\ts_rsp_utils.obj crypto\ts\ts_rsp_verify.obj crypto\ts\ts_verify_ctx.obj
crypto\txt_db crypto\txt_db\ : crypto\txt_db\txt_db.obj
crypto\ui crypto\ui\ : crypto\ui\ui_err.obj crypto\ui\ui_lib.obj crypto\ui\ui_null.obj crypto\ui\ui_openssl.obj crypto\ui\ui_util.obj
crypto\whrlpool crypto\whrlpool\ : crypto\whrlpool\wp-x86_64.obj crypto\whrlpool\wp_dgst.obj
crypto\x509 crypto\x509\ : crypto\x509\by_dir.obj crypto\x509\by_file.obj crypto\x509\t_crl.obj crypto\x509\t_req.obj crypto\x509\t_x509.obj crypto\x509\x509_att.obj crypto\x509\x509_cmp.obj crypto\x509\x509_d2.obj crypto\x509\x509_def.obj crypto\x509\x509_err.obj crypto\x509\x509_ext.obj crypto\x509\x509_lu.obj crypto\x509\x509_obj.obj crypto\x509\x509_r2x.obj crypto\x509\x509_req.obj crypto\x509\x509_set.obj crypto\x509\x509_trs.obj crypto\x509\x509_txt.obj crypto\x509\x509_v3.obj crypto\x509\x509_vfy.obj crypto\x509\x509_vpm.obj crypto\x509\x509cset.obj crypto\x509\x509name.obj crypto\x509\x509rset.obj crypto\x509\x509spki.obj crypto\x509\x509type.obj crypto\x509\x_all.obj crypto\x509\x_attrib.obj crypto\x509\x_crl.obj crypto\x509\x_exten.obj crypto\x509\x_name.obj crypto\x509\x_pubkey.obj crypto\x509\x_req.obj crypto\x509\x_x509.obj crypto\x509\x_x509a.obj
crypto\x509v3 crypto\x509v3\ : crypto\x509v3\pcy_cache.obj crypto\x509v3\pcy_data.obj crypto\x509v3\pcy_lib.obj crypto\x509v3\pcy_map.obj crypto\x509v3\pcy_node.obj crypto\x509v3\pcy_tree.obj crypto\x509v3\v3_addr.obj crypto\x509v3\v3_admis.obj crypto\x509v3\v3_akey.obj crypto\x509v3\v3_akeya.obj crypto\x509v3\v3_alt.obj crypto\x509v3\v3_asid.obj crypto\x509v3\v3_bcons.obj crypto\x509v3\v3_bitst.obj crypto\x509v3\v3_conf.obj crypto\x509v3\v3_cpols.obj crypto\x509v3\v3_crld.obj crypto\x509v3\v3_enum.obj crypto\x509v3\v3_extku.obj crypto\x509v3\v3_genn.obj crypto\x509v3\v3_ia5.obj crypto\x509v3\v3_info.obj crypto\x509v3\v3_int.obj crypto\x509v3\v3_lib.obj crypto\x509v3\v3_ncons.obj crypto\x509v3\v3_pci.obj crypto\x509v3\v3_pcia.obj crypto\x509v3\v3_pcons.obj crypto\x509v3\v3_pku.obj crypto\x509v3\v3_pmaps.obj crypto\x509v3\v3_prn.obj crypto\x509v3\v3_purp.obj crypto\x509v3\v3_skey.obj crypto\x509v3\v3_sxnet.obj crypto\x509v3\v3_tlsf.obj crypto\x509v3\v3_utl.obj crypto\x509v3\v3err.obj
engines engines\ : engines\capi.dll engines\dasync.dll engines\ossltest.dll engines\padlock.dll
fuzz fuzz\ : fuzz\asn1-test.exe fuzz\asn1parse-test.exe fuzz\bignum-test.exe fuzz\bndiv-test.exe fuzz\client-test.exe fuzz\cms-test.exe fuzz\conf-test.exe fuzz\crl-test.exe fuzz\ct-test.exe fuzz\server-test.exe fuzz\x509-test.exe
ms ms\ : ms\applink.obj ms\uplink.obj ms\applink.obj
	 No support to produce bin apps\openssl
ssl ssl\ : ssl\packet.obj ssl\tls13_enc.obj ssl\bio_ssl.obj ssl\d1_lib.obj ssl\d1_msg.obj ssl\d1_srtp.obj ssl\methods.obj ssl\packet.obj ssl\pqueue.obj ssl\s3_cbc.obj ssl\s3_enc.obj ssl\s3_lib.obj ssl\s3_msg.obj ssl\ssl_asn1.obj ssl\ssl_cert.obj ssl\ssl_ciph.obj ssl\ssl_conf.obj ssl\ssl_err.obj ssl\ssl_init.obj ssl\ssl_lib.obj ssl\ssl_mcnf.obj ssl\ssl_rsa.obj ssl\ssl_sess.obj ssl\ssl_stat.obj ssl\ssl_txt.obj ssl\ssl_utst.obj ssl\t1_enc.obj ssl\t1_lib.obj ssl\t1_trce.obj ssl\tls13_enc.obj ssl\tls_srp.obj
	 No support to produce bin test\tls13secretstest
ssl\record ssl\record\ : ssl\record\dtls1_bitmap.obj ssl\record\rec_layer_d1.obj ssl\record\rec_layer_s3.obj ssl\record\ssl3_buffer.obj ssl\record\ssl3_record.obj ssl\record\ssl3_record_tls13.obj
ssl\statem ssl\statem\ : ssl\statem\extensions.obj ssl\statem\extensions_clnt.obj ssl\statem\extensions_cust.obj ssl\statem\extensions_srvr.obj ssl\statem\statem.obj ssl\statem\statem_clnt.obj ssl\statem\statem_dtls.obj ssl\statem\statem_lib.obj ssl\statem\statem_srvr.obj
test\testutil test\testutil\ : test\testutil\basic_output.obj test\testutil\cb.obj test\testutil\driver.obj test\testutil\format_output.obj test\testutil\init.obj test\testutil\main.obj test\testutil\output_helpers.obj test\testutil\stanza.obj test\testutil\tap_bio.obj test\testutil\test_cleanup.obj test\testutil\tests.obj
tools tools\ : tools\c_rehash.pl

