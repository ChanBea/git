=pod

=head1 NAME

spkac - SPKAC printing and generating utility

=head1 SYNOPSIS

B<openssl spkac>
[B<-in> I<filename>]
[B<-out> I<filename>]
[B<-key> I<keyfile>]
[B<-passin> I<arg>]
[B<-challenge> I<string>]
[B<-pubkey>]
[B<-spkac> I<spkacname>]
[B<-spksect> I<section>]
[B<-noout>]
[B<-verify>]
[B<-engine> I<id>]

=head1 DESCRIPTION

The B<spkac> command processes Netscape "signed public key and challenge" (SPKAC) files.
It can print out their contents, verify the signature, and produce its own SPKACs from a supplied private key.

=head1 OPTIONS

=over 4

=item B<-in> I<filename>

Specifies the input filename to read from.
Default is standard input.
Ignored if the B<-key> option is used.

=item B<-out> I<filename>

Specifies the output filename to write to.
Default is standard output.

=item B<-key> I<keyfile>

Create an SPKAC file using the private key in B<keyfile>.
The B<-in>, B<-noout>, B<-spksect>, and B<-verify> options are ignored if present.

=item B<-passin> I<arg>

The input file password source.
For more information about the format of I<arg>, see the B<PASS PHRASE ARGUMENTS> section in L<openssl(1)>.

=item B<-challenge> I<string>

The challenge string if an SPKAC is being created.

=item B<-spkac> I<spkacname>

Allows an alternative name for the variable containing the SPKAC.
The default is "SPKAC".
This option affects both generated and input SPKAC files.

=item B<-spksect> I<section>

Allows an alternative name for the section containing the SPKAC.
The default is the default section.

=item B<-noout>

Don't output the text version of the SPKAC. (>ot used if an SPKAC is being created.)

=item B<-pubkey>

Output the public key of an SPKAC. (Not used if an SPKAC is being created.)

=item B<-verify>

Verifies the digital signature on the supplied SPKAC.

=item B<-engine> I<id>

Specifying an engine (by its unique I<id> string) will cause B<spkac> to attempt to obtain a functional reference to the specified engine, thus initialising it if needed.
The engine will then be set as the default for all available algorithms.

=back

=head1 NOTES

A created SPKAC with suitable DN components appended can be fed into the B<ca> utility.

SPKACs are typically generated by Netscape when a form is submitted containing the B<KEYGEN> tag as part of the certificate enrollment process.

The challenge string permits a primitive form of proof of possession of private key.
By checking the SPKAC signature and a random challenge string some guarantee is given that the user knows the private key corresponding to the public key being certified.
This is important in some applications.
Without this it is possible for a previous SPKAC to be used in a "replay attack".

=head1 EXAMPLES

Print out the contents of an SPKAC:

 openssl spkac -in spkac.cnf

Verify the signature of an SPKAC:

 openssl spkac -in spkac.cnf -noout -verify

Create an SPKAC using the challenge string "hello":

 openssl spkac -key key.pem -challenge hello -out spkac.cnf

Example of an SPKAC (long lines split up for clarity):

 SPKAC=MIG5MGUwXDANBgkqhkiG9w0BAQEFAANLADBIAkEA1cCoq2Wa3Ixs47uI7F\
 PVwHVIPDx5yso105Y6zpozam135a8R0CpoRvkkigIyXfcCjiVi5oWk+6FfPaD03u\
 PFoQIDAQABFgVoZWxsbzANBgkqhkiG9w0BAQQFAANBAFpQtY/FojdwkJh1bEIYuc\
 2EeM2KHTWPEepWYeawvHD0gQ3DngSC75YCWnnDdq+NQ3F+X4deMx9AaEglZtULwV\
 4=


=head1 SEE ALSO

L<ca(1)>

=cut
