=pod

=begin comment
{- join("\n", @autowarntext) -}

=end comment

=head1 NAME

opentls-pkey - public or private key processing tool

=head1 SYNOPSIS

B<opentls> B<pkey>
[B<-help>]
[B<-inform> B<DER>|B<PEM>]
[B<-outform> B<DER>|B<PEM>]
[B<-in> I<filename>]
[B<-passin> I<arg>]
[B<-out> I<filename>]
[B<-passout> I<arg>]
[B<-traditional>]
[B<-I<cipher>>]
[B<-text>]
[B<-text_pub>]
[B<-noout>]
[B<-pubin>]
[B<-pubout>]
[B<-check>]
[B<-pubcheck>]
{- $Opentls::safe::opt_engine_synopsis -}

=for opentls ifdef engine

=head1 DESCRIPTION

This command processes public or private keys. They can be
converted between various forms and their components printed out.

=head1 OPTIONS

=over 4

=item B<-help>

Print out a usage message.

=item B<-inform> B<DER>|B<PEM>, B<-outform> B<DER>|B<PEM>

The input and formats; the default is B<PEM>.
See L<opentls(1)/Format Options> for details.

=item B<-in> I<filename>

This specifies the input filename to read a key from or standard input if this
option is not specified. If the key is encrypted a pass phrase will be
prompted for.

=item B<-passin> I<arg>, B<-passout> I<arg>

The password source for the input and output file.
For more information about the format of B<arg>
see L<opentls(1)/Pass Phrase Options>.

=item B<-out> I<filename>

This specifies the output filename to write a key to or standard output if this
option is not specified. If any encryption options are set then a pass phrase
will be prompted for. The output filename should B<not> be the same as the input
filename.

=item B<-traditional>

Normally a private key is written using standard format: this is PKCS#8 form
with the appropriate encryption algorithm (if any). If the B<-traditional>
option is specified then the older "traditional" format is used instead.

=item B<-I<cipher>>

These options encrypt the private key with the supplied cipher. Any algorithm
name accepted by EVP_get_cipherbyname() is acceptable such as B<des3>.

=item B<-text>

Prints out the various public or private key components in
plain text in addition to the encoded version.

=item B<-text_pub>

Print out only public key components even if a private key is being processed.

=item B<-noout>

Do not output the encoded version of the key.

=item B<-pubin>

By default a private key is read from the input file: with this
option a public key is read instead.

=item B<-pubout>

By default a private key is output: with this option a public
key will be output instead. This option is automatically set if
the input is a public key.

=item B<-check>

This option checks the consistency of a key pair for both public and private
components.

=item B<-pubcheck>

This option checks the correctness of either a public key or the public component
of a key pair.

{- $Opentls::safe::opt_engine_item -}

=back

=head1 EXAMPLES

To remove the pass phrase on an RSA private key:

 opentls pkey -in key.pem -out keyout.pem

To encrypt a private key using triple DES:

 opentls pkey -in key.pem -des3 -out keyout.pem

To convert a private key from PEM to DER format:

 opentls pkey -in key.pem -outform DER -out keyout.der

To print out the components of a private key to standard output:

 opentls pkey -in key.pem -text -noout

To print out the public components of a private key to standard output:

 opentls pkey -in key.pem -text_pub -noout

To just output the public part of a private key:

 opentls pkey -in key.pem -pubout -out pubkey.pem

=head1 SEE ALSO

L<opentls(1)>,
L<opentls-genpkey(1)>,
L<opentls-rsa(1)>,
L<opentls-pkcs8(1)>,
L<opentls-dsa(1)>,
L<opentls-genrsa(1)>,
L<opentls-gendsa(1)>

=head1 COPYRIGHT

Copyright 2006-2019 The Opentls Project Authors. All Rights Reserved.

Licensed under the Apache License 2.0 (the "License").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file LICENSE in the source distribution or at
L<https://www.opentls.org/source/license.html>.

=cut
