=pod

=head1 NAME

tls_CTX_set_max_cert_list, tls_CTX_get_max_cert_list, tls_set_max_cert_list, tls_get_max_cert_list - manipulate allowed size for the peer's certificate chain

=head1 SYNOPSIS

 #include <opentls/tls.h>

 long tls_CTX_set_max_cert_list(tls_CTX *ctx, long size);
 long tls_CTX_get_max_cert_list(tls_CTX *ctx);

 long tls_set_max_cert_list(tls *tls, long size);
 long tls_get_max_cert_list(tls *ctx);

=head1 DESCRIPTION

tls_CTX_set_max_cert_list() sets the maximum size allowed for the peer's
certificate chain for all tls objects created from B<ctx> to be <size> bytes.
The tls objects inherit the setting valid for B<ctx> at the time
L<tls_new(3)> is being called.

tls_CTX_get_max_cert_list() returns the currently set maximum size for B<ctx>.

tls_set_max_cert_list() sets the maximum size allowed for the peer's
certificate chain for B<tls> to be <size> bytes. This setting stays valid
until a new value is set.

tls_get_max_cert_list() returns the currently set maximum size for B<tls>.

=head1 NOTES

During the handshake process, the peer may send a certificate chain.
The TLS/tls standard does not give any maximum size of the certificate chain.
The Opentls library handles incoming data by a dynamically allocated buffer.
In order to prevent this buffer from growing without bounds due to data
received from a faulty or malicious peer, a maximum size for the certificate
chain is set.

The default value for the maximum certificate chain size is 100kB (30kB
on the 16bit DOS platform). This should be sufficient for usual certificate
chains (Opentls's default maximum chain length is 10, see
L<tls_CTX_set_verify(3)>, and certificates
without special extensions have a typical size of 1-2kB).

For special applications it can be necessary to extend the maximum certificate
chain size allowed to be sent by the peer, see e.g. the work on
"Internet X.509 Public Key Infrastructure Proxy Certificate Profile"
and "TLS Delegation Protocol" at http://www.ietf.org/ and
http://www.globus.org/ .

Under normal conditions it should never be necessary to set a value smaller
than the default, as the buffer is handled dynamically and only uses the
memory actually required by the data sent by the peer.

If the maximum certificate chain size allowed is exceeded, the handshake will
fail with a tls_R_EXCESSIVE_MESSAGE_SIZE error.

=head1 RETURN VALUES

tls_CTX_set_max_cert_list() and tls_set_max_cert_list() return the previously
set value.

tls_CTX_get_max_cert_list() and tls_get_max_cert_list() return the currently
set value.

=head1 SEE ALSO

L<tls(7)>, L<tls_new(3)>,
L<tls_CTX_set_verify(3)>

=head1 COPYRIGHT

Copyright 2001-2016 The Opentls Project Authors. All Rights Reserved.

Licensed under the Apache License 2.0 (the "License").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file LICENSE in the source distribution or at
L<https://www.opentls.org/source/license.html>.

=cut
