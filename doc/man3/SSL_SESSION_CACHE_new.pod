=pod

=head1 NAME

SSL_SESSION_CACHE_new,
SSL_SESSION_CACHE_up_ref,
SSL_SESSION_CACHE_free,
SSL_CTX_get1_session_cache,
SSL_CTX_set1_session_cache,
SSL_SESSION_CACHE_get1_session - enable sharing of session cache

=head1 SYNOPSIS

 #include <openssl/ssl.h>

 SSL_SESSION_CACHE *SSL_SESSION_CACHE_new(unsigned long (*hash)(const SSL_SESSION *),
                                          int (*cmp)(const SSL_SESSION *a, const SSL_SESSION * b));
 int SSL_SESSION_CACHE_up_ref(SSL_SESSION_CACHE *l);
 int SSL_SESSION_CACHE_free(SSL_SESSION_CACHE *c, SSL_CTX *ctx);
 SSL_SESSION_CACHE *SSL_CTX_get1_session_cache(SSL_CTX *ctx);
 int SSL_CTX_set1_session_cache(SSL_CTX *ctx, SSL_SESSION_CACHE *cache);
 SSL_SESSION *SSL_SESSION_CACHE_get1_session(SSL_SESSION_CACHE *cache,
                                             SSL_SESSION *key);

=head1 DESCRIPTION

SSL_SESSION_CACHE_new() creates a new B<SSL_CESSION_CACHE> object that stores
B<SSL_SESSIONS> and can be used to share a session database among multiple B<SSL_CTX>
objects. An B<SSL_SESSION_CACHE> object is reference counted. Creating an
B<SSL_SESSION_CACHE> object for the first time increments the reference count.
The b<hash> callback returns a relatively unique identifier of the session.
The b<cmp> callback returns -1 if B<a> E<lt> B<b>, 0 if B<a> == B<b> and 1 if
B<a> E<gt> B<b>. Setting these two arguments to NULL uses the default OpenSSL
behavior of hashing and comparing the session id.

SSL_SESSION_CACHE_up_ref() increments the reference count for an existing
B<SSL_SESSION_CACHE> structure.

SSL_SESSION_CACHE_free() decrements the reference count. When the
reference count drops to zero, any memory, resources, or B<SSL_SESSION> objects
allocated to the B<SSL_SESSION_CACHEX> object are freed.

SSL_CTX_get1_session_cache() returns the B<SSL_SESSION_CACHE> used by B<ctx>, and
increments the reference count of the returned B<SSL_SESSION_CACHE>.
SSL_SESSION_CACHE_free() must be called to release the reference count when done.

SSL_CTX_set1_session_cache() assigns SSL_SESSION_CACHE B<cache> to SSL_CTX B<ctx>.
A new SSL_SESSION_CACHE may only be assigned to an SSL_CTX that has an empty cache.

SSL_SESSION_CACHE_get1_session() returns a B<SSL_SESSION> from the B<cache> that
matches the B<key>, and increments the  reference count of the returned
B<SSL_SESSION>. SSL_SESSION_free() must be called to release the reference count
when done.

Adding the B<SSL_SESSION_CACHE> to a B<SSL_CTX> via SSL_CTX_set1_session_cache() increments the
reference count, freeing the B<SSL_CTX> via SSL_CTX_free() decrements the reference
count.

=head1 NOTES

The sessions lists are stored in their own reference-counted object. When
an SSL_CTX is created, it has its own session list. These functions may be used to
create a session database shared among multiple B<SSL_CTX> objects.

In the following example (error handling eliminated):

 SSL_CTX ctx1 = SSL_CTX_new(TLS_method());
 SSL_SESSION_CACHE *cache = SSL_CTX_get1_session_cache(ctx1);
 SSL_CTX ctx2 = SSL_CTX_new(TLS_method());
 SSL_CTX_set1_session_cache(ctx2, cache);
 SSL_SESSION_CACHE_free(cache);

The result of this is that B<ctx1>'s session cache is shared by B<ctx2>.

There is no way to undo this; a new B<SSL_CTX> should be created instead.

Modifying the session cache parameters via one B<SSL_CTX> will modify the
session cache parameters of all other B<SSL_CTX>s that are sharing the same
session cache.

=head1 RETURN VALUES

SSL_SESSION_CACHE_new() returns a newly created B<SSL_SESSION_CACHE> object
on success, and NULL on failure.

SSL_SESSION_CACHE_up_ref() and SSL_CTX_set1_session_cache() return 1 for
success and 0 for failure.

SSL_SESSION_CACHE_free() returns the number of remaining references to the
B<SSL_SESSION_CACHE>. A return value of 0 means that the object has been freed,
a non-zero return value means that the object's reference count was only
decremented.

SSL_CTX_get1_session_cache() always returns the B<SSL_SESSION_CACHE> object.

SSL_SESSION_CACHE_get1_session() returns a B<SSL_SESSION> on success, and
NULL on failure.

=head1 HISTORY

The SSL_SESSION_CACHE_new(), SSL_SESSION_CACHE_up_ref(),
SSL_SESSION_CACHE_free(), SSL_CTX_get1_session_cache(),
SSL_SESSION_CACHE_get1_session(), and SSL_SESSION_CACHE_set1_session()
functions were introduced in OpenSSL 1.1.2.

=head1 SEE ALSO

L<ssl(3)>,
L<SSL_set_session(3)>,
L<SSL_session_reused(3)>,
L<SSL_CTX_sess_set_get_cb(3)>,
L<SSL_CTX_sessions(3)>,
L<SSL_CTX_set_session_id_context(3)>,
L<SSL_SESSION_CACHE_add_session(3)>,
L<SSL_SESSION_CACHE_flush_sessions(3)>,
L<SSL_SESSION_CACHE_get_mode(3)>,
L<SSL_SESSION_CACHE_get_size(3)>,
L<SSL_SESSION_CACHE_get_timeout(3)>,
L<SSL_SESSION_CACHE_number(3)>,
L<SSL_SESSION_CACHE_remove_session(3)>,
L<SSL_SESSION_CACHE_set_mode(3)>,
L<SSL_SESSION_CACHE_set_size(3)>,
L<SSL_SESSION_CACHE_set_timeout(3)>,
L<SSL_SESSION_free(3)>

=head1 COPYRIGHT

Copyright 2017 The OpenSSL Project Authors. All Rights Reserved.

Licensed under the OpenSSL license (the "License").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file LICENSE in the source distribution or at
L<https://www.openssl.org/source/license.html>.

=cut
