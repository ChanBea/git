=pod

=head1 NAME

OSSL_PARAM_locate,
OSSL_PARAM_get_int, OSSL_PARAM_set_int,
OSSL_PARAM_set_uint, OSSL_PARAM_get_uint,
OSSL_PARAM_get_int64, OSSL_PARAM_set_int64,
OSSL_PARAM_get_uint64, OSSL_PARAM_set_uint64,
OSSL_PARAM_get_long, OSSL_PARAM_get_ulong,
OSSL_PARAM_get_size_t, OSSL_PARAM_set_size_t,
OSSL_PARAM_get_double, OSSL_PARAM_set_double,
OSSL_PARAM_get_bignum, OSSL_PARAM_set_bignum
- OSSL_PARAM helpers

=head1 SYNOPSIS

=for comment generic

 #include <openssl/params.h>

 OSSL_PARAM *OSSL_PARAM_locate(const OSSL_PARAM *p, const char *key);

 int OSSL_PARAM_get_TYPE(const OSSL_PARAM *p, const char *key, TYPE *val);
 int OSSL_PARAM_set_TYPE(const OSSL_PARAM *p, const char *key, TYPE val);

 int OSSL_PARAM_get_pointer(const OSSL_PARAM *p, const char *key, void **val);
 int OSSL_PARAM_set_pointer(const OSSL_PARAM *p, const char *key, void *val);

 BIGNUM *OSSL_PARAM_get_bignum(const OSSL_PARAM *p, const char *key);
 int OSSL_PARAM_set_bignum(OSSL_PARAM *p, const char *key, const BIGNUM *val);

=head1 DESCRIPTION

A collection of utility functions that simplify and add type safety to the
OSSL_PARAM arrays.  In the following text, B<TYPE> stands for one of the
following C types:

 int
 unsigned int ("uint")
 int64_t
 uint64_t
 long
 unsigned long ("ulong")
 size_t
 double

OSSL_PARAM_locate() finds the parameter in the B<p> list with the name B<key>.
Since a parameter list is NULL terminated, if OSSL_PARAM_locate() returns
successfully, that return value can be passed into any of the get or set
functions described here.

OSSL_PARAM_get_TYPE() retrieves a value of type B<TYPE> from the parameter
array B<p> using the B<key>.
The value is copied to the address B<val>.
No type coercion is done; it is an error if the type used for a get does
not match the type used during a set.

OSSL_PARAM_set_TYPE() stores a value B<val> of type B<TYPE> into the parameter
array B<p> using the B<key>.

OSSL_PARAM_get_pointer() retrieves a generic pointer from the array B<p>
using the B<key>.
OSSL_PARAM_set_pointer() stores the pointer B<val> into the parameter array B<p>
at the B<key>.

OSSL_PARAM_set_bignum() stores the BIGNUM B<val> in the specified parameter
value.
Negative numbers are not supported; B<val> must be greater than or equal
to zero.
It also internally stores the size of the buffer used; this is why
the function does not take a constant B<p> value.

OSSL_PARAM_get_bignum() retrieves a BIGNUM from the parameter B<key> in the
array pointed to by B<p> and returns it.

OSSL_PARAM_set_bignum() stores the BIGNUM B<val> into the paramater array B<p>
at the position indicated by B<key>.

=head1 RETURN VALUES

OSSL_PARAM_locate() returns a pointer to the requested parameter or B<NULL>
if it is not found.
All other functions return B<1> on success and B<0> on failure.


=head1 HISTORY

These APIs were introduced in OpenSSL 3.0.0.

=head1 COPYRIGHT

Copyright 2019 The OpenSSL Project Authors. All Rights Reserved.

Licensed under the Apache License 2.0 (the "License").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file LICENSE in the source distribution or at
L<https://www.openssl.org/source/license.html>.

=cut
