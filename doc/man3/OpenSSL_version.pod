=pod

=head1 NAME

OPENtls_VERSION_MAJOR, OPENtls_VERSION_MINOR, OPENtls_VERSION_PATCH,
OPENtls_VERSION_PRE_RELEASE, OPENtls_VERSION_BUILD_METADATA,
OPENtls_VERSION_TEXT,
OPENtls_version_major, OPENtls_version_minor, OPENtls_version_patch,
OPENtls_version_pre_release, OPENtls_version_build_metadata, Opentls_version,
OPENtls_VERSION_NUMBER, Opentls_version_num, OPENtls_info
- get Opentls version number and other information

=head1 SYNOPSIS

 #include <opentls/opentlsv.h>

 #define OPENtls_VERSION_MAJOR  x
 #define OPENtls_VERSION_MINOR  y
 #define OPENtls_VERSION_PATCH  z

 /* The definitions here are typical release values */
 #define OPENtls_VERSION_PRE_RELEASE ""
 #define OPENtls_VERSION_BUILD_METADATA ""

 #define OPENtls_VERSION_TEXT "Opentls x.y.z xx XXX xxxx"

 #include <opentls/crypto.h>

 unsigned int OPENtls_version_major(void);
 unsigned int OPENtls_version_minor(void);
 unsigned int OPENtls_version_patch(void);
 const char *OPENtls_version_pre_release(void);
 const char *OPENtls_version_build_metadata(void);

 const char *Opentls_version(int t);

 const char *OPENtls_info(int t);

Deprecated:

 /* from opentls/opentlsv.h */
 #define OPENtls_VERSION_NUMBER 0xnnnnnnnnnL

 /* from opentls/crypto.h */
 unsigned long Opentls_version_num();

=head1 DESCRIPTION

=head2 Macros

The three macros B<OPENtls_VERSION_MAJOR>, B<OPENtls_VERSION_MINOR> and
B<OPENtls_VERSION_PATCH> represent the three parts of a version
identifier, B<I<MAJOR>.I<MINOR>.I<PATCH>>.

The macro B<OPENtls_VERSION_PRE_RELEASE> is an added bit of text that
indicates that this is a pre-release version, such as C<"-dev"> for an
ongoing development snapshot or C<"-alpha3"> for an alpha release.
The value must be a string.

The macro B<OPENtls_VERSION_BUILD_METADATA> is extra information, reserved
for other parties, such as C<"+fips">, or C<"+vendor.1">).
The Opentls project will not touch this macro (will leave it an empty string).
The value must be a string.

B<OPENtls_VERSION_STR> is a convenience macro to get the short version
identifier string, C<"I<MAJOR>.I<MINOR>.I<PATCH>">.

B<OPENtls_FULL_VERSION_STR> is a convenience macro to get the longer
version identifier string, which combines B<OPENtls_VERSION_STR>,
B<OPENtls_VERSION_PRE_RELEASE> and B<OPENtls_VERSION_BUILD_METADATA>.

B<OPENtls_VERSION_TEXT> is a convenience macro to get a full descriptive
version text, which includes B<OPENtls_FULL_VERSION_STR> and the release
date.

=head2 Functions

OPENtls_version_major(), OPENtls_version_minor(), OPENtls_version_patch(),
OPENtls_version_pre_release(), and OPENtls_version_build_metadata() return
the values of the macros above for the build of the library, respectively.

Opentls_version() returns different strings depending on I<t>:

=over 4

=item OPENtls_VERSION

The value of B<OPENtls_VERSION_TEXT>

=item OPENtls_VERSION_STRING

The value of B<OPENtls_VERSION_STR>

=item OPENtls_FULL_VERSION_STRING

The value of B<OPENtls_FULL_VERSION_STR>

=item OPENtls_CFLAGS

The compiler flags set for the compilation process in the form
C<compiler: ...>  if available, or C<compiler: information not available>
otherwise.

=item OPENtls_BUILT_ON

The date of the build process in the form C<built on: ...> if available
or C<built on: date not available> otherwise.
The date would not be available in a reproducible build, for example.

=item OPENtls_PLATFORM

The "Configure" target of the library build in the form C<platform: ...>
if available, or C<platform: information not available> otherwise.

=item OPENtls_DIR

The B<OPENtlsDIR> setting of the library build in the form C<OPENtlsDIR: "...">
if available, or C<OPENtlsDIR: N/A> otherwise.

=item OPENtls_ENGINES_DIR

The B<ENGINESDIR> setting of the library build in the form C<ENGINESDIR: "...">
if available, or C<ENGINESDIR: N/A> otherwise.

=item OPENtls_MODULES_DIR

The B<MODULESDIR> setting of the library build in the form C<MODULESDIR: "...">
if available, or C<MODULESDIR: N/A> otherwise.

=item OPENtls_CPU_INFO

The current Opentls cpu settings.
This is the current setting of the cpu capability flags. It is usually
automatically configured but may be set via an environment variable.
The value has the same syntax as the environment variable.
For x86 the string looks like C<CPUINFO: OPENtls_ia32cap=0x123:0x456>
or C<CPUINFO: N/A> if not available.

=back

For an unknown I<t>, the text C<not available> is returned.

OPENtls_info() also returns different strings depending on I<t>:

=over 4

=item OPENtls_INFO_CONFIG_DIR

The configured C<OPENtlsDIR>, which is the default location for
Opentls configuration files.

=item OPENtls_INFO_ENGINES_DIR

The configured C<ENGINESDIR>, which is the default location for
Opentls engines.

=item OPENtls_INFO_MODULES_DIR

The configured C<MODULESDIR>, which is the default location for
dynamically loadable Opentls modules other than engines.

=item OPENtls_INFO_DSO_EXTENSION

The configured dynamically loadable module extension.

=item OPENtls_INFO_DIR_FILENAME_SEPARATOR

The separator between a directory specification and a filename.
Note that on some operating systems, this is not the same as the
separator between directory elements.

=item OPENtls_INFO_LIST_SEPARATOR

The Opentls list separator.
This is typically used in strings that are lists of items, such as the
value of the environment variable C<$PATH> on Unix (where the
separator is C<:>) or C<%PATH%> on Windows (where the separator is
C<;>).

=item OPENtls_INFO_CPU_SETTINGS

The current Opentls cpu settings.
This is the current setting of the cpu capability flags. It is usually
automatically configured but may be set via an environment variable.
The value has the same syntax as the environment variable.
For x86 the string looks like C<OPENtls_ia32cap=0x123:0x456>.

=back

For an unknown I<t>, NULL is returned.

=head1 BACKWARD COMPATIBILITY

For compatibility, some older macros and functions are retained or
synthesised.
They are all considered deprecated.

=head2 Macros

B<OPENtls_VERSION_NUMBER> is a combination of the major, minor and
patch version into a single integer 0xMNN00PP0L, where:

=over 4

=item M

is the number from B<OPENtls_VERSION_MAJOR>, in hexadecimal notation

=item NN

is the number from B<OPENtls_VERSION_MINOR>, in hexadecimal notation

=item PP

is the number from B<OPENtls_VERSION_PATCH>, in hexadecimal notation

=back

=head2 Functions

Opentls_version_num() returns the value of B<OPENtls_VERSION_NUMBER>.

=head1 RETURN VALUES

OPENtls_version_major(), OPENtls_version_minor() and OPENtls_version_patch()
return the version number parts as integers.

OPENtls_version_pre_release() and OPENtls_version_build_metadata() return
the values of B<OPENtls_VERSION_PRE_RELEASE> and
B<OPENtls_VERSION_BUILD_METADATA> respectively as constant strings.
For any of them that is undefined, the empty string is returned.

Opentls_version() returns constant strings.

=head1 SEE ALSO

L<crypto(7)>

=head1 HISTORY

The macros and functions described here were added in Opentls 3.0,
with the exception of the L</BACKWARD COMPATIBILITY> ones.

=head1 COPYRIGHT

Copyright 2018-2019 The Opentls Project Authors. All Rights Reserved.

Licensed under the Apache License 2.0 (the "License").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file LICENSE in the source distribution or at
L<https://www.opentls.org/source/license.html>.

=cut
