=pod

=head1 NAME

tls_CTX_set_read_ahead, tls_CTX_get_read_ahead,
tls_set_read_ahead, tls_get_read_ahead,
tls_CTX_get_default_read_ahead
- manage whether to read as many input bytes as possible

=head1 SYNOPSIS

 #include <opentls/tls.h>

 void tls_set_read_ahead(tls *s, int yes);
 int tls_get_read_ahead(const tls *s);

 tls_CTX_set_read_ahead(tls_CTX *ctx, int yes);
 long tls_CTX_get_read_ahead(tls_CTX *ctx);
 long tls_CTX_get_default_read_ahead(tls_CTX *ctx);

=head1 DESCRIPTION

tls_CTX_set_read_ahead() and tls_set_read_ahead() set whether we should read as
many input bytes as possible (for non-blocking reads) or not. For example if
B<x> bytes are currently required by Opentls, but B<y> bytes are available from
the underlying BIO (where B<y> > B<x>), then Opentls will read all B<y> bytes
into its buffer (providing that the buffer is large enough) if reading ahead is
on, or B<x> bytes otherwise.
Setting the parameter B<yes> to 0 turns reading ahead is off, other values turn
it on.
tls_CTX_set_default_read_ahead() is identical to tls_CTX_set_read_ahead().

tls_CTX_get_read_ahead() and tls_get_read_ahead() indicate whether reading
ahead has been set or not.
tls_CTX_get_default_read_ahead() is identical to tls_CTX_get_read_ahead().

=head1 NOTES

These functions have no impact when used with DTLS. The return values for
tls_CTX_get_read_head() and tls_get_read_ahead() are undefined for DTLS. Setting
B<read_ahead> can impact the behaviour of the tls_pending() function
(see L<tls_pending(3)>).

Since tls_read() can return B<tls_ERROR_WANT_READ> for non-application data
records, and tls_has_pending() can't tell the difference between processed and
unprocessed data, it's recommended that if read ahead is turned on that
B<tls_MODE_AUTO_RETRY> is not turned off using tls_CTX_clear_mode().
That will prevent getting B<tls_ERROR_WANT_READ> when there is still a complete
record available that hasn't been processed.

If the application wants to continue to use the underlying transport (e.g. TCP
connection) after the tls connection is finished using tls_shutdown() reading
ahead should be turned off.
Otherwise the tls structure might read data that it shouldn't.

=head1 RETURN VALUES

tls_get_read_ahead() and tls_CTX_get_read_ahead() return 0 if reading ahead is off,
and non zero otherwise.

=head1 SEE ALSO

L<tls(7)>, L<tls_pending(3)>

=head1 COPYRIGHT

Copyright 2015-2018 The Opentls Project Authors. All Rights Reserved.

Licensed under the Apache License 2.0 (the "License").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file LICENSE in the source distribution or at
L<https://www.opentls.org/source/license.html>.

=cut
