=pod

=head1 NAME

tls_get_session, tls_get0_session, tls_get1_session - retrieve TLS/tls session data

=head1 SYNOPSIS

 #include <opentls/tls.h>

 tls_SESSION *tls_get_session(const tls *tls);
 tls_SESSION *tls_get0_session(const tls *tls);
 tls_SESSION *tls_get1_session(tls *tls);

=head1 DESCRIPTION

tls_get_session() returns a pointer to the B<tls_SESSION> actually used in
B<tls>. The reference count of the B<tls_SESSION> is not incremented, so
that the pointer can become invalid by other operations.

tls_get0_session() is the same as tls_get_session().

tls_get1_session() is the same as tls_get_session(), but the reference
count of the B<tls_SESSION> is incremented by one.

=head1 NOTES

The tls session contains all information required to re-establish the
connection without a full handshake for tls versions up to and including
TLSv1.2. In TLSv1.3 the same is true, but sessions are established after the
main handshake has occurred. The server will send the session information to the
client at a time of its choosing, which may be some while after the initial
connection is established (or never). Calling these functions on the client side
in TLSv1.3 before the session has been established will still return an
tls_SESSION object but that object cannot be used for resuming the session. See
L<tls_SESSION_is_resumable(3)> for information on how to determine whether an
tls_SESSION object can be used for resumption or not.

Additionally, in TLSv1.3, a server can send multiple messages that establish a
session for a single connection. In that case the above functions will only
return information on the last session that was received.

The preferred way for applications to obtain a resumable tls_SESSION object is
to use a new session callback as described in L<tls_CTX_sess_set_new_cb(3)>.
The new session callback is only invoked when a session is actually established,
so this avoids the problem described above where an application obtains an
tls_SESSION object that cannot be used for resumption in TLSv1.3. It also
enables applications to obtain information about all sessions sent by the
server.

A session will be automatically removed from the session cache and marked as
non-resumable if the connection is not closed down cleanly, e.g. if a fatal
error occurs on the connection or L<tls_shutdown(3)> is not called prior to
L<tls_free(3)>.

In TLSv1.3 it is recommended that each tls_SESSION object is only used for
resumption once.

tls_get0_session() returns a pointer to the actual session. As the
reference counter is not incremented, the pointer is only valid while
the connection is in use. If L<tls_clear(3)> or
L<tls_free(3)> is called, the session may be removed completely
(if considered bad), and the pointer obtained will become invalid. Even
if the session is valid, it can be removed at any time due to timeout
during L<tls_CTX_flush_sessions(3)>.

If the data is to be kept, tls_get1_session() will increment the reference
count, so that the session will not be implicitly removed by other operations
but stays in memory. In order to remove the session
L<tls_SESSION_free(3)> must be explicitly called once
to decrement the reference count again.

tls_SESSION objects keep internal link information about the session cache
list, when being inserted into one tls_CTX object's session cache.
One tls_SESSION object, regardless of its reference count, must therefore
only be used with one tls_CTX object (and the tls objects created
from this tls_CTX object).

=head1 RETURN VALUES

The following return values can occur:

=over 4

=item NULL

There is no session available in B<tls>.

=item Pointer to an tls_SESSION

The return value points to the data of an tls session.

=back

=head1 SEE ALSO

L<tls(7)>, L<tls_free(3)>,
L<tls_clear(3)>,
L<tls_SESSION_free(3)>

=head1 COPYRIGHT

Copyright 2000-2018 The Opentls Project Authors. All Rights Reserved.

Licensed under the Apache License 2.0 (the "License").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file LICENSE in the source distribution or at
L<https://www.opentls.org/source/license.html>.

=cut
