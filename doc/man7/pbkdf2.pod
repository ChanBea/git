=pod

=head1 NAME

pbkdf2 - PBKDF2 key derivation function

=head1 SYNOPSIS

=for comment generic

#include <openssl/kdf.h>

=head1 DESCRIPTION

PBKDF2 refers to the "Password-based Key Derivation Function 2" that is defined
in RFC 2898. It produces a key of arbitrary output length from an input
password of arbitrary length. Additionally to the requested output key length,
PBKDF2 is also parameterized by three other variables: the underlying keyed
hash function, a salt value and an iteration count.

It is used, like the name suggests, for computation of symmetric keys from a
given passphrase, but use of it is also common as a function that stores hashed
passwords. In either case the purpose of the iteration count parameter is to
deliberately force sequentialized, slower computation of each PBKDF2 run in
order to make dictionary attacks on the passphrase computationally more
expensive by a linear factor.

Common choices for underlying keyed hash include HMAC-constructions such as
HMAC-SHA256 or HMAC-SHA512. Consequently, when speaking of a concrete
implementation of a PBKDF2 function, this keyed hash is usually concatenated
with the algorithm identifier, e.g., "PBKDF2-HMAC-SHA256" to form the canonical
algorithm name.

With higher iteration count comes a higher computational cost associated with
computing PBKDF2. This means that dictionary attacks become more difficult, but
also likewise any benign application that uses such a function will see a
similar slowdown.

=head1 SEE ALSO

L<pbkdf2(3)>,
L<EVP_PKEY_CTX_new(3)>,
L<EVP_PKEY_CTX_ctrl_str(3)>,
L<EVP_PKEY_derive(3)>

=head1 COPYRIGHT

Copyright 2018 The OpenSSL Project Authors. All Rights Reserved.

Licensed under the OpenSSL license (the "License").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file LICENSE in the source distribution or at
L<https://www.openssl.org/source/license.html>.

=cut
