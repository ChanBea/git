
 NOTES FOR UNIX LIKE PLATFORMS
 =============================

 For Unix/POSIX runtime systems on Windows, please see NOTES.WIN.


 Shared libraries and installation in non-default locations
 ----------------------------------------------------------

 Binaries on some Unix variants expect to find shared libraries in
 default locations, such as /lib, /usr/lib or possibly /usr/local/lib.
 (what the default locations are depends on the system the libraries are
 going to be installed in)
 If the libraries are installed in non-default locations, binaries will
 not find them and therefore fail to run unless they get a bit of help
 from a defined runtime shared library search path.

 OpenSSL's configuration scripts do NOT generally set the runtime shared
 library search path for you.  It's therefore advisable to set it
 explicitelly when configuring unless the libraries are to be installed
 in directories that are known to be default.

 Runtime shared library search paths are specified with different
 linking options depending on operating system and versions thereof, and
 are talked about differently in their respective documentation, where
 variations of RPATH are the most usual (to be noted: ELF systems have
 two such tags, more on that below).

 Possible options to set the runtime shared library search path are:

    -rpath /whatever/path
    -R /whatever/path
    -Wl,-rpath,/whatever/path

 OpenSSL's configuration scripts recognise all these options and pass
 them to the Makefile that they build.
 (as a matter of fact, it recognises anything starting with '-Wl,' as a
 linker option, so for example, HP-UX' '-Wl,+b,/whatever/path' would
 be used correctly)

 Please do not use verbatim directories in your runtime shared library
 search path!  Some OpenSSL config targets add an extra directory level
 for multilib installations.  To help with that, the produced Makefile
 includes the variable LIBRPATH, which is a convenience variable to be
 used with the runtime shared library search path options, as shown in
 this example:

    $ ./config --prefix=/usr/local/ssl --openssldir=/usr/local/ssl \
        '-Wl,-rpath,$(LIBRPATH)'

 (the quotes are needed for two reasons: 1) the configuration scripts
 will otherwise -rpath and $(LIBRPATH) as two entirely separate
 arguments, and 2) the shell will try to expand $(LIBRPATH))

 On modern ELF based systems, there are two runtime search paths tags to
 consider, DT_RPATH and DT_RUNPATH.  DT_RUNPATH is considered after the
 environment variable LD_LIBRARY_PATH, while DT_RPATH is considered
 before that environment variable (which means that the values in that
 environment variable won't matter if the library is found in the paths
 given by DT_RPATH).

 Exactly which of DT_RPATH or DT_RUNPATH is normally set appears to
 depend on the system.  For example, according to documentation,
 DT_RPATH appears to be deprecated on Solaris for the benefit of
 DT_RUNPATH, while with GNU ld, either tag may be set.

 With GNU ld, '-Wl,-rpath,$(LIBRPATH)' will set DT_RPATH.  To set
 DT_RUNPATH, use the new dtags, like this:

    $ ./config --prefix=/usr/local/ssl --openssldir=/usr/local/ssl \
        '-Wl,--enable-new-dtags,-rpath,$(LIBRPATH)'

 Some other linkers may support the same syntax, or something other.
 please refer to ld(1) for the exact information on your system.

