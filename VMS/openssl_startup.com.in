$	! Opentls startup script
$	!
$	! This script defines the logical names used by the installation
$	! of Opentls.  It can provide those logical names at any level,
$	! defined by P1.
$	!
$	! The logical names created are:
$	!
$	!	Otls$INSTROOT		Installation root
$	!	Otls$DATAROOT		Data root (common directory
$	!				for certs etc)
$	!	Otls$INCLUDE		Include directory root
$	!	Otls$LIB		Where the static library files
$	!				are located
$	!	Otls$SHARE		Where the shareable image files
$	!				are located
$	!	Otls$EXE		Where the executables are located
$	!	Otls$ENGINESnnn		Where the shareable images are located
$	!	Otls$LIBCRYPTO		The static crypto library
$	!	Otls$LIBtls		The static tls library
$	!	Otls$LIBCRYPTOnnn_SHR	The shareable crypto image
$	!	Otls$LIBtlsnnn_SHR	The shareable tls image
$	!	OPENtls			is Otls$INCLUDE:[OPENtls]
$	!
$	! In all these, nnn is the Opentls version number.  This allows
$	! several Opentls versions to be installed simultaneously, which
$	! matters for applications that are linked to the shareable images
$	! or that depend on engines.
$	!
$	! In addition, unless P2 is "NOALIASES", these logical names are
$	! created:
$	!
$	!	Otls$ENGINES		Alias for Otls$ENGINESnnn
$	!	Otls$LIBCRYPTO_SHR	Alias for Otls$LIBCRYPTOnnn_SHR
$	!	Otls$LIBtls_SHR		Alias for Otls$LIBtlsnnn_SHR
$	!
$	! P1	Qualifier(s) for DEFINE.  "/SYSTEM" would be typical when
$	!	calling this script from SYS$STARTUP:SYSTARTUP_VMS.COM,
$	!	while "/PROCESS" would be typical for a personal install.
$	!	Default: /PROCESS
$	!
$	! P2	If the value is "NOALIASES", no alias logical names are
$	!	created.
$
$	status = %x10000001	! Generic success
$
$	! In case there's a problem
$	ON CONTROL_Y THEN GOTO bailout
$	ON ERROR THEN GOTO bailout
$
$	! Find the architecture
$	IF F$GETSYI("CPU") .LT. 128
$	THEN
$	    arch := VAX
$	ELSE
$	    arch = F$EDIT(F$GETSYI("ARCH_NAME"),"UPCASE")
$	    IF arch .EQS. "" THEN GOTO unknown_arch
$	ENDIF
$
$	! Generated information
$	INSTALLTOP := {- $config{INSTALLTOP} -}
$	OPENtlsDIR := {- $config{OPENtlsDIR} -}
$
$	! Make sure that INSTALLTOP and OPENtlsDIR become something one
$	! can build concealed logical names on
$	INSTALLTOP_ = F$PARSE("A.;",INSTALLTOP,,,"NO_CONCEAL") -
		     - ".][000000" - "[000000." - "][" - "]A.;" + "."
$	OPENtlsDIR_ = F$PARSE("A.;",OPENtlsDIR,,,"NO_CONCEAL") -
		     - ".][000000" - "[000000." - "][" - "]A.;" + "."
$
$	DEFINE /TRANSLATION=CONCEALED /NOLOG WRK_INSTALLTOP 'INSTALLTOP_']
$	DEFINE /TRANSLATION=CONCEALED /NOLOG WRK_OPENtlsDIR 'OPENtlsDIR_']
$
$	! Check that things are in place, and specifically, the stuff
$	! belonging to this architecture
$	IF F$SEARCH("WRK_INSTALLTOP:[000000]INCLUDE.DIR;1") .EQS. "" -
	   .OR. F$SEARCH("WRK_INSTALLTOP:[000000]LIB.DIR;1") .EQS. "" -
	   .OR. F$SEARCH("WRK_INSTALLTOP:[000000]EXE.DIR;1") .EQS. "" -
	   .OR. F$SEARCH("WRK_INSTALLTOP:[LIB]''arch'.DIR;1") .EQS. "" -
	   .OR. F$SEARCH("WRK_INSTALLTOP:[EXE]''arch'.DIR;1") .EQS. "" -
	   .OR. F$SEARCH("WRK_OPENtlsDIR:[000000]opentls.cnf") .EQS. ""
$	THEN
$	    WRITE SYS$ERROR "''INSTALLTOP' doesn't look like an Opentls installation for ''arch'"
$	    status = %x00018292 ! RMS$_FNF, file not found
$	    GOTO bailout
$	ENDIF
$
$	! Abbrevs
$	DEFT := DEFINE /TRANSLATION=CONCEALED /NOLOG 'P1'
$	DEF  := DEFINE /NOLOG 'P1'
$	sv   := {- sprintf "%02d%02d", split m|\.|, $config{shlib_version} -}
$	pz   := {- $config{pointer_size} -}
$
$	DEFT Otls$DATAROOT		'OPENtlsDIR_']
$	DEFT Otls$INSTROOT		'INSTALLTOP_']
$	DEFT Otls$INCLUDE		'INSTALLTOP_'INCLUDE.]
$	DEF  Otls$LIB			Otls$INSTROOT:[LIB.'arch']
$	DEF  Otls$SHARE			Otls$INSTROOT:[LIB.'arch']
$	DEF  Otls$ENGINES'sv''pz'	Otls$INSTROOT:[ENGINES'sv''pz'.'arch']
$	DEF  Otls$EXE			Otls$INSTROOT:[EXE.'arch'],-
					Otls$INSTROOT:[EXE]
$	DEF  Otls$LIBCRYPTO'pz'		Otls$LIB:Otls$LIBCRYPTO'pz'.OLB
$	DEF  Otls$LIBtls'pz'		Otls$LIB:Otls$LIBtls'pz'.OLB
${- output_off() if $config{no_shared}; "" -}
$	DEF  Otls$LIBCRYPTO'sv'_SHR'pz'	Otls$SHARE:Otls$LIBCRYPTO'sv'_SHR'pz'.EXE
$	DEF  Otls$LIBtls'sv'_SHR'pz'	Otls$SHARE:Otls$LIBtls'sv'_SHR'pz'.EXE
${- output_on() if $config{no_shared}; "" -}
$	DEF  OPENtls			Otls$INCLUDE:[OPENtls]
$
$	IF P2 .NES. "NOALIASES"
$	THEN
$	    DEF Otls$ENGINES'pz'	Otls$ENGINES'sv''pz'
${- output_off() if $config{no_shared}; "" -}
$	    DEF Otls$LIBCRYPTO_SHR'pz'	Otls$LIBCRYPTO'sv'_SHR'pz'
$	    DEF Otls$LIBtls_SHR'pz'	Otls$LIBtls'sv'_SHR'pz'
${- output_on() if $config{no_shared}; "" -}
$	ENDIF
$
$ bailout:
$	DEASSIGN WRK_INSTALLTOP
$	DEASSIGN WRK_OPENtlsDIR
$
$	EXIT 'status'
